; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\MonitorDlg.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0M@BDLCCFDA@monitor?4ini?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01HCONENDN@?$HL?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01CELHOKLL@?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09PKKCPLIP@bad?5alloc?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?GetPacketSize@CBuffer2@@UAEKPAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetHeader@CBuffer2@@UAEXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3CBuffer2@@SAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBuffer2@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBuffer2@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsEmpty@CBufferQueue@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetRecvHandle@CDPSock@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CAr@@QAEAAV0@E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CAr@@QAEAAV0@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CAr@@QAEAAV0@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CAr@@QAEAAV0@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CAr@@QAEAAV0@AAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CAr@@QAEAAV0@AAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CAr@@QAEAAV0@AAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StartServer@CDPMng@@QAEHGHW4BUFFER_TYPE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Send@CDPMng@@QAEHPAXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CMonitorDlg@@QAE@PAVCWnd@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMonitorDlg@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMonitorDlg@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DoDataExchange@CMonitorDlg@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetMessageMap@CMonitorDlg@@MBEPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnInitDialog@CMonitorDlg@@MAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MakeTree@CMonitorDlg@@AAEXPAU_TREEITEM@@AAVCScanner@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnPaint@CMonitorDlg@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnQueryDragIcon@CMonitorDlg@@IAEPAUHICON__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnDestroy@CMonitorDlg@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnClickTree@CMonitorDlg@@IAEXPAUtagNMHDR@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnTimer@CMonitorDlg@@IAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnButtonSndStop@CMonitorDlg@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCheckSendsms@CMonitorDlg@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Alloc@?$MemPooler@VCBuffer@@@@QAEPAVCBuffer@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Free@?$MemPooler@VCBuffer@@@@QAEHPAVCBuffer@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Alloc@?$MemPooler@VCBuffer2@@@@QAEPAVCBuffer2@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Free@?$MemPooler@VCBuffer2@@@@QAEHPAVCBuffer2@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Alloc@?$MemPooler@VCClientSock@@@@QAEPAVCClientSock@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Free@?$MemPooler@VCClientSock@@@@QAEHPAVCClientSock@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Alloc@?$MemPooler@VCClientSockE@@@@QAEPAVCClientSockE@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Free@?$MemPooler@VCClientSockE@@@@QAEHPAVCClientSockE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Compare@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@?$MemPooler@VCBuffer@@@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@?$MemPooler@VCBuffer2@@@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@?$MemPooler@VCClientSock@@@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@?$MemPooler@VCClientSockE@@@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StringCompare@?$ChTraitsCRT@D@ATL@@SAHPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?push_back@?$list@PAXV?$allocator@PAX@std@@@std@@QAEXABQAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$list@PAXV?$allocator@PAX@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$list@PAXV?$allocator@PAX@std@@@std@@QAEXViterator@12@ABQAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Nextnode@?$list@PAXV?$allocator@PAX@std@@@std@@KAAAPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Prevnode@?$list@PAXV?$allocator@PAX@std@@@std@@KAAAPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$list@PAXV?$allocator@PAX@std@@@std@@IAEPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@PAU342@0ABQAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Incsize@?$list@PAXV?$allocator@PAX@std@@@std@@IAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$list@PAXV?$allocator@PAX@std@@@std@@QAE@PAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$list@PAXV?$allocator@PAX@std@@@std@@QBEPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$list@PAXV?$allocator@PAX@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$list@PAXV?$allocator@PAX@std@@@std@@QAE@PAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@std@@QAE@PAU012@0ABQAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@PAX@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CMyPool@V?$CMyBucket@PAVCClientSock@@@@@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CMyMap@PAVCClientSock@@@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Lookup@?$CMyMap@PAVCClientSock@@@@QAEHKAAPAVCClientSock@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CMyPool@V?$CMyBucket@PAVCClientSockE@@@@@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CMyMap@PAVCClientSockE@@@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Lookup@?$CMyMap@PAVCClientSockE@@@@QAEHKAAPAVCClientSockE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CMyPool@V?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CMyMap@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Lookup@?$CMyMap@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@QAEHKAAP8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CMyPool@V?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CMyMap@P8CHost@@AEXAAVCAr@@K@Z@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Lookup@?$CMyMap@P8CHost@@AEXAAVCAr@@K@Z@@QAEHKAAP8CHost@@AEXAAVCAr@@K@Z@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@std@@@std@@YAPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@0@IPAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CMyPool@V?$CMyBucket@PAVCClientSock@@@@@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$stack@PAV?$CMyBucket@PAVCClientSock@@@@V?$deque@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CMyMap@PAVCClientSock@@@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CMyPool@V?$CMyBucket@PAVCClientSockE@@@@@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$stack@PAV?$CMyBucket@PAVCClientSockE@@@@V?$deque@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CMyMap@PAVCClientSockE@@@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CMyPool@V?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$stack@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@V?$deque@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CMyMap@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CMyPool@V?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$stack@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@V?$deque@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CMyMap@P8CHost@@AEXAAVCAr@@K@Z@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$deque@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$list@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$deque@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$list@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$deque@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$list@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$deque@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$list@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$deque@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$list@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$deque@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$list@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$deque@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$list@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$deque@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$list@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?empty@?$deque@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pop_back@?$deque@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@QAEXPAPAV?$CMyBucket@PAVCClientSock@@@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAPAV?$CMyBucket@PAVCClientSock@@@@@std@@QAEXPAPAPAV?$CMyBucket@PAVCClientSock@@@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAPAV?$CMyBucket@PAVCClientSock@@@@@std@@QAEXPAPAPAV?$CMyBucket@PAVCClientSock@@@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Nextnode@?$list@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Prevnode@?$list@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$list@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?empty@?$deque@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pop_back@?$deque@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@QAEXPAPAV?$CMyBucket@PAVCClientSockE@@@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAPAV?$CMyBucket@PAVCClientSockE@@@@@std@@QAEXPAPAPAV?$CMyBucket@PAVCClientSockE@@@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAPAV?$CMyBucket@PAVCClientSockE@@@@@std@@QAEXPAPAPAV?$CMyBucket@PAVCClientSockE@@@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Nextnode@?$list@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Prevnode@?$list@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$list@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?empty@?$deque@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pop_back@?$deque@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@std@@QAEXPAPAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAPAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@std@@QAEXPAPAPAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAPAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@std@@QAEXPAPAPAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Nextnode@?$list@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Prevnode@?$list@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$list@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_List_nod@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_List_nod@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?empty@?$deque@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pop_back@?$deque@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@std@@QAEXPAPAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAPAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@std@@QAEXPAPAPAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAPAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@std@@QAEXPAPAPAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Nextnode@?$list@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Prevnode@?$list@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$list@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_List_nod@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_List_nod@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@QAEXPAPAV?$CMyBucket@PAVCClientSock@@@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@QAEXPAPAV?$CMyBucket@PAVCClientSockE@@@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@std@@QAEXPAPAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_List_nod@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@std@@QAEXPAPAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_List_nod@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@?$CMyPool@V?$CMyBucket@PAVCClientSock@@@@@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CMyBucket@PAVCClientSock@@@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsEqual@?$CMyBucket@PAVCClientSock@@@@QAEHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@?$CMyPool@V?$CMyBucket@PAVCClientSockE@@@@@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CMyBucket@PAVCClientSockE@@@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsEqual@?$CMyBucket@PAVCClientSockE@@@@QAEHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@?$CMyPool@V?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsEqual@?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@QAEHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@?$CMyPool@V?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsEqual@?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@QAEHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAPAV?$CMyBucket@PAVCClientSock@@@@@std@@YAXPAPAPAV?$CMyBucket@PAVCClientSock@@@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAPAV?$CMyBucket@PAVCClientSockE@@@@@std@@YAXPAPAPAV?$CMyBucket@PAVCClientSockE@@@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAPAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@std@@YAXPAPAPAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_List_nod@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAPAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@std@@YAXPAPAPAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_List_nod@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAV?$CMyBucket@PAVCClientSock@@@@@std@@YAXPAPAV?$CMyBucket@PAVCClientSock@@@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@YAXPAPAV?$CMyBucket@PAVCClientSockE@@@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@std@@YAXPAPAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_List_nod@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@std@@YAXPAPAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_List_nod@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CMyBucket@PAVCClientSock@@@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CMyBucket@PAVCClientSockE@@@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?empty@?$stack@PAV?$CMyBucket@PAVCClientSock@@@@V?$deque@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pop@?$stack@PAV?$CMyBucket@PAVCClientSock@@@@V?$deque@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$list@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$list@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?empty@?$stack@PAV?$CMyBucket@PAVCClientSockE@@@@V?$deque@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pop@?$stack@PAV?$CMyBucket@PAVCClientSockE@@@@V?$deque@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$list@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$list@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?empty@?$stack@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@V?$deque@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@std@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pop@?$stack@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@V?$deque@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$list@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$list@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?empty@?$stack@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@V?$deque@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@std@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pop@?$stack@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@V?$deque@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$list@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$list@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$list@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@QBEAAPAV?$CMyBucket@PAVCClientSock@@@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$list@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$list@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$list@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@QBEAAPAV?$CMyBucket@PAVCClientSockE@@@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$list@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$list@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$list@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@std@@@std@@QBEAAPAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$list@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$list@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$list@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@std@@@std@@QBEAAPAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$list@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$list@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$list@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$list@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@QBEABQAV?$CMyBucket@PAVCClientSock@@@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$list@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$list@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$list@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$list@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@QBEABQAV?$CMyBucket@PAVCClientSockE@@@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$list@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$list@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$list@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$list@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@std@@@std@@QBEABQAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$list@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$list@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$list@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$list@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@std@@@std@@QBEABQAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$list@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$list@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$list@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@KAAAPAV?$CMyBucket@PAVCClientSock@@@@PAU_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$list@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@KAAAPAV?$CMyBucket@PAVCClientSockE@@@@PAU_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$list@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@std@@@std@@KAAAPAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@PAU_Node@?$_List_nod@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$list@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@std@@@std@@KAAAPAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@PAU_Node@?$_List_nod@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$list@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$list@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$list@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$list@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@CDialog@@UAEHIPAVCWnd@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EndModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BeginModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CMyBucket@PAVCClientSockE@@@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CMyBucket@PAVCClientSock@@@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CMyMap@P8CHost@@AEXAAVCAr@@K@Z@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CMyPool@V?$CMyBucket@P8CHost@@AEXAAVCAr@@K@Z@@@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CMyMap@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CMyPool@V?$CMyBucket@P8CDPConsoleSrvr@@AEXAAVCAr@@K@Z@@@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CMyMap@PAVCClientSockE@@@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CMyPool@V?$CMyBucket@PAVCClientSockE@@@@@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?IDHash@@YAKKI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMclCritSec@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CMclCritSec@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCMclCritSec@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7?$CMyMap@PAVCClientSock@@@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CMyPool@V?$CMyBucket@PAVCClientSock@@@@@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@G@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnTimer@CWnd@@IAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SelectItem@CTreeCtrl@@QAEHPAU_TREEITEM@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ScreenToClient@CWnd@@QBEXPAUtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?data@CStringData@ATL@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDefaultManager@?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?KillTimer@CWnd@@QAEHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DrawIcon@CDC@@QAEHHHPAUHICON__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Height@CRect@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Width@CRect@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHdc@CDC@@QBEPAUHDC__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMessageA@CWnd@@QAEJIIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsIconic@CWnd@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsLocked@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlThrow@ATL@@YGXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetTimer@CWnd@@QAEIIIP6GXPAUHWND__@@IIK@Z@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetIcon@CWnd@@QAEPAUHICON__@@PAU2@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_messageEntries@CMonitorDlg@@0QBUAFX_MSGMAP_ENTRY@@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?messageMap@CMonitorDlg@@1UAFX_MSGMAP@@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3CObject@@SGXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AfxGetApp@@YGPAVCWinApp@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadIconA@CWinApp@@QBEPAUHICON__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AfxGetResourceHandle@@YGPAUHINSTANCE__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CMonitorDlg@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??1CMclAutoLock@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Leave@CMclCritSec@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CMclAutoLock@@QAE@AAVCMclCritSec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Enter@CMclCritSec@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CBuffer2@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0CTime@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?OnPaint@CMonitorDlg@@IAEXXZ			; CMonitorDlg::OnPaint
PUBLIC	?OnQueryDragIcon@CMonitorDlg@@IAEPAUHICON__@@XZ	; CMonitorDlg::OnQueryDragIcon
PUBLIC	?OnDestroy@CMonitorDlg@@IAEXXZ			; CMonitorDlg::OnDestroy
PUBLIC	?OnClickTree@CMonitorDlg@@IAEXPAUtagNMHDR@@PAJ@Z ; CMonitorDlg::OnClickTree
PUBLIC	?OnTimer@CMonitorDlg@@IAEXI@Z			; CMonitorDlg::OnTimer
PUBLIC	?OnButtonSndStop@CMonitorDlg@@IAEXXZ		; CMonitorDlg::OnButtonSndStop
PUBLIC	?OnCheckSendsms@CMonitorDlg@@IAEXXZ		; CMonitorDlg::OnCheckSendsms
PUBLIC	?_messageEntries@CMonitorDlg@@0QBUAFX_MSGMAP_ENTRY@@B ; CMonitorDlg::_messageEntries
PUBLIC	?messageMap@CMonitorDlg@@1UAFX_MSGMAP@@B	; CMonitorDlg::messageMap
EXTRN	?messageMap@CDialog@@1UAFX_MSGMAP@@B:QWORD	; CDialog::messageMap
;	COMDAT ?_messageEntries@CMonitorDlg@@0QBUAFX_MSGMAP_ENTRY@@B
CONST	SEGMENT
?_messageEntries@CMonitorDlg@@0QBUAFX_MSGMAP_ENTRY@@B DD 0fH ; CMonitorDlg::_messageEntries
	DD	00H
	DD	00H
	DD	00H
	DD	010H
	DD	FLAT:?OnPaint@CMonitorDlg@@IAEXXZ
	DD	037H
	DD	00H
	DD	00H
	DD	00H
	DD	025H
	DD	FLAT:?OnQueryDragIcon@CMonitorDlg@@IAEPAUHICON__@@XZ
	DD	02H
	DD	00H
	DD	00H
	DD	00H
	DD	010H
	DD	FLAT:?OnDestroy@CMonitorDlg@@IAEXXZ
	DD	04eH
	DD	0fffeH
	DD	03e8H
	DD	03e8H
	DD	039H
	DD	FLAT:?OnClickTree@CMonitorDlg@@IAEXPAUtagNMHDR@@PAJ@Z
	DD	0113H
	DD	00H
	DD	00H
	DD	00H
	DD	011H
	DD	FLAT:?OnTimer@CMonitorDlg@@IAEXI@Z
	DD	0111H
	DD	00H
	DD	03e9H
	DD	03e9H
	DD	035H
	DD	FLAT:?OnButtonSndStop@CMonitorDlg@@IAEXXZ
	DD	0111H
	DD	00H
	DD	03efH
	DD	03efH
	DD	035H
	DD	FLAT:?OnCheckSendsms@CMonitorDlg@@IAEXXZ
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?messageMap@CMonitorDlg@@1UAFX_MSGMAP@@B
CONST	SEGMENT
?messageMap@CMonitorDlg@@1UAFX_MSGMAP@@B DD FLAT:?messageMap@CDialog@@1UAFX_MSGMAP@@B ; CMonitorDlg::messageMap
	DD	FLAT:?_messageEntries@CMonitorDlg@@0QBUAFX_MSGMAP_ENTRY@@B
CONST	ENDS
PUBLIC	?StartServer@CDPMng@@QAEHGHW4BUFFER_TYPE@@@Z	; CDPMng::StartServer
EXTRN	?CreateDPObject@CDPMng@@QAEHH@Z:NEAR		; CDPMng::CreateDPObject
EXTRN	?InitConnection@CDPMng@@QAEHPAXG@Z:NEAR		; CDPMng::InitConnection
EXTRN	?CreateSession@CDPMng@@QAEHPBDW4BUFFER_TYPE@@@Z:NEAR ; CDPMng::CreateSession
; Function compile flags: /Ogty
; File c:\offi src_real\offi src!\_network\net\include\dpmng.h
;	COMDAT ?StartServer@CDPMng@@QAEHGHW4BUFFER_TYPE@@@Z
_TEXT	SEGMENT
_uPort$ = 8						; size = 2
_bSingleThreaded$ = 12					; size = 4
_nBufferType$ = 16					; size = 4
?StartServer@CDPMng@@QAEHGHW4BUFFER_TYPE@@@Z PROC NEAR	; CDPMng::StartServer, COMDAT
; _this$ = ecx

; 157  : 		return( CreateDPObject( bSingleThreaded ) && 
; 158  : 			    InitConnection( (LPVOID)NULL, uPort ) && 
; 159  : 				CreateSession( NULL, nBufferType ) );	

  00000	8b 44 24 08	 mov	 eax, DWORD PTR _bSingleThreaded$[esp-4]
  00004	56		 push	 esi
  00005	50		 push	 eax
  00006	8b f1		 mov	 esi, ecx
  00008	e8 00 00 00 00	 call	 ?CreateDPObject@CDPMng@@QAEHH@Z ; CDPMng::CreateDPObject
  0000d	85 c0		 test	 eax, eax
  0000f	74 2d		 je	 SHORT $L159293
  00011	8b 4c 24 08	 mov	 ecx, DWORD PTR _uPort$[esp]
  00015	51		 push	 ecx
  00016	6a 00		 push	 0
  00018	8b ce		 mov	 ecx, esi
  0001a	e8 00 00 00 00	 call	 ?InitConnection@CDPMng@@QAEHPAXG@Z ; CDPMng::InitConnection
  0001f	85 c0		 test	 eax, eax
  00021	74 1b		 je	 SHORT $L159293
  00023	8b 54 24 10	 mov	 edx, DWORD PTR _nBufferType$[esp]
  00027	52		 push	 edx
  00028	6a 00		 push	 0
  0002a	8b ce		 mov	 ecx, esi
  0002c	e8 00 00 00 00	 call	 ?CreateSession@CDPMng@@QAEHPBDW4BUFFER_TYPE@@@Z ; CDPMng::CreateSession
  00031	85 c0		 test	 eax, eax
  00033	74 09		 je	 SHORT $L159293
  00035	b8 01 00 00 00	 mov	 eax, 1
  0003a	5e		 pop	 esi

; 160  : 	}

  0003b	c2 0c 00	 ret	 12			; 0000000cH
$L159293:

; 157  : 		return( CreateDPObject( bSingleThreaded ) && 
; 158  : 			    InitConnection( (LPVOID)NULL, uPort ) && 
; 159  : 				CreateSession( NULL, nBufferType ) );	

  0003e	33 c0		 xor	 eax, eax
  00040	5e		 pop	 esi

; 160  : 	}

  00041	c2 0c 00	 ret	 12			; 0000000cH
?StartServer@CDPMng@@QAEHGHW4BUFFER_TYPE@@@Z ENDP	; CDPMng::StartServer
_TEXT	ENDS
PUBLIC	?GetMessageMap@CMonitorDlg@@MBEPBUAFX_MSGMAP@@XZ ; CMonitorDlg::GetMessageMap
; Function compile flags: /Ogty
; File c:\offi src_real\offi src!\monitor\monitordlg.cpp
;	COMDAT ?GetMessageMap@CMonitorDlg@@MBEPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
?GetMessageMap@CMonitorDlg@@MBEPBUAFX_MSGMAP@@XZ PROC NEAR ; CMonitorDlg::GetMessageMap, COMDAT
; _this$ = ecx

; 39   : BEGIN_MESSAGE_MAP(CMonitorDlg, CDialog)

  00000	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?messageMap@CMonitorDlg@@1UAFX_MSGMAP@@B ; CMonitorDlg::messageMap
  00005	c3		 ret	 0
?GetMessageMap@CMonitorDlg@@MBEPBUAFX_MSGMAP@@XZ ENDP	; CMonitorDlg::GetMessageMap
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?OnQueryDragIcon@CMonitorDlg@@IAEPAUHICON__@@XZ
_TEXT	SEGMENT
?OnQueryDragIcon@CMonitorDlg@@IAEPAUHICON__@@XZ PROC NEAR ; CMonitorDlg::OnQueryDragIcon, COMDAT
; _this$ = ecx

; 155  : 	return (HCURSOR) m_hIcon;

  00000	8b 81 e8 08 00
	00		 mov	 eax, DWORD PTR [ecx+2280]

; 156  : }

  00006	c3		 ret	 0
?OnQueryDragIcon@CMonitorDlg@@IAEPAUHICON__@@XZ ENDP	; CMonitorDlg::OnQueryDragIcon
_TEXT	ENDS
EXTRN	__imp__sndPlaySoundA@8:NEAR
; Function compile flags: /Ogty
;	COMDAT ?OnButtonSndStop@CMonitorDlg@@IAEXXZ
_TEXT	SEGMENT
?OnButtonSndStop@CMonitorDlg@@IAEXXZ PROC NEAR		; CMonitorDlg::OnButtonSndStop, COMDAT
; _this$ = ecx

; 220  : 	sndPlaySound( NULL, SND_ASYNC );

  00000	6a 01		 push	 1
  00002	6a 00		 push	 0
  00004	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__sndPlaySoundA@8

; 221  : }

  0000a	c3		 ret	 0
?OnButtonSndStop@CMonitorDlg@@IAEXXZ ENDP		; CMonitorDlg::OnButtonSndStop
_TEXT	ENDS
EXTRN	?UpdateData@CWnd@@QAEHH@Z:NEAR			; CWnd::UpdateData
; Function compile flags: /Ogty
;	COMDAT ?OnCheckSendsms@CMonitorDlg@@IAEXXZ
_TEXT	SEGMENT
?OnCheckSendsms@CMonitorDlg@@IAEXXZ PROC NEAR		; CMonitorDlg::OnCheckSendsms, COMDAT
; _this$ = ecx

; 225  : 	// TODO: Add your control notification handler code here
; 226  : 	UpdateData(TRUE);

  00000	6a 01		 push	 1
  00002	e8 00 00 00 00	 call	 ?UpdateData@CWnd@@QAEHH@Z ; CWnd::UpdateData

; 227  : }

  00007	c3		 ret	 0
?OnCheckSendsms@CMonitorDlg@@IAEXXZ ENDP		; CMonitorDlg::OnCheckSendsms
_TEXT	ENDS
PUBLIC	?AtlThrow@ATL@@YGXJ@Z				; ATL::AtlThrow
EXTRN	?AfxThrowMemoryException@@YGXXZ:NEAR		; AfxThrowMemoryException
EXTRN	?AfxThrowOleException@@YGXJ@Z:NEAR		; AfxThrowOleException
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlexcept.h
;	COMDAT ?AtlThrow@ATL@@YGXJ@Z
_TEXT	SEGMENT
_hr$ = 8						; size = 4
?AtlThrow@ATL@@YGXJ@Z PROC NEAR				; ATL::AtlThrow, COMDAT

; 62   : 	ATLTRACE(atlTraceException, 0, _T("AtlThrow: hr = 0x%x\n"), hr );
; 63   : #ifdef _AFX
; 64   : 	if( hr == E_OUTOFMEMORY )

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _hr$[esp-4]
  00004	3d 0e 00 07 80	 cmp	 eax, -2147024882	; 8007000eH
  00009	75 05		 jne	 SHORT $L37616

; 65   : 	{
; 66   : 		AfxThrowMemoryException();

  0000b	e8 00 00 00 00	 call	 ?AfxThrowMemoryException@@YGXXZ ; AfxThrowMemoryException
$L159313:
$L37616:

; 67   : 	}
; 68   : 	else
; 69   : 	{
; 70   : 		AfxThrowOleException( hr );

  00010	50		 push	 eax
  00011	e8 00 00 00 00	 call	 ?AfxThrowOleException@@YGXJ@Z ; AfxThrowOleException
$L159314:
$L159312:
  00016	cc		 int	 3
?AtlThrow@ATL@@YGXJ@Z ENDP				; ATL::AtlThrow
_TEXT	ENDS
PUBLIC	?StringCompare@?$ChTraitsCRT@D@ATL@@SAHPBD0@Z	; ATL::ChTraitsCRT<char>::StringCompare
EXTRN	__mbscmp:NEAR
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ?StringCompare@?$ChTraitsCRT@D@ATL@@SAHPBD0@Z
_TEXT	SEGMENT
_pszA$ = 8						; size = 4
_pszB$ = 12						; size = 4
?StringCompare@?$ChTraitsCRT@D@ATL@@SAHPBD0@Z PROC NEAR	; ATL::ChTraitsCRT<char>::StringCompare, COMDAT

; 336  : 		return _mbscmp( reinterpret_cast< const unsigned char* >( pszA ), reinterpret_cast< const unsigned char* >( pszB ) );

  00000	e9 00 00 00 00	 jmp	 __mbscmp
?StringCompare@?$ChTraitsCRT@D@ATL@@SAHPBD0@Z ENDP	; ATL::ChTraitsCRT<char>::StringCompare
_TEXT	ENDS
PUBLIC	?data@CStringData@ATL@@QAEPAXXZ			; ATL::CStringData::data
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ?data@CStringData@ATL@@QAEPAXXZ
_TEXT	SEGMENT
?data@CStringData@ATL@@QAEPAXXZ PROC NEAR		; ATL::CStringData::data, COMDAT
; _this$ = ecx

; 66   : 		return (this+1);

  00000	8d 41 10	 lea	 eax, DWORD PTR [ecx+16]

; 67   : 	}

  00003	c3		 ret	 0
?data@CStringData@ATL@@QAEPAXXZ ENDP			; ATL::CStringData::data
_TEXT	ENDS
PUBLIC	?AddRef@CStringData@ATL@@QAEXXZ			; ATL::CStringData::AddRef
; Function compile flags: /Ogty
;	COMDAT ?AddRef@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT
?AddRef@CStringData@ATL@@QAEXXZ PROC NEAR		; ATL::CStringData::AddRef, COMDAT
; _this$ = ecx

; 71   : 		ATLASSERT(nRefs > 0);
; 72   : 		_InterlockedIncrement(&nRefs);

  00000	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00003	b8 01 00 00 00	 mov	 eax, 1
  00008	f0 0f c1 01	 lock	  xadd	 DWORD PTR [ecx], eax

; 73   : 	}

  0000c	c3		 ret	 0
?AddRef@CStringData@ATL@@QAEXXZ ENDP			; ATL::CStringData::AddRef
_TEXT	ENDS
PUBLIC	?IsLocked@CStringData@ATL@@QBE_NXZ		; ATL::CStringData::IsLocked
; Function compile flags: /Ogty
;	COMDAT ?IsLocked@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT
?IsLocked@CStringData@ATL@@QBE_NXZ PROC NEAR		; ATL::CStringData::IsLocked, COMDAT
; _this$ = ecx

; 76   : 		return nRefs < 0;

  00000	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00003	33 c0		 xor	 eax, eax
  00005	85 d2		 test	 edx, edx
  00007	0f 9c c0	 setl	 al

; 77   : 	}

  0000a	c3		 ret	 0
?IsLocked@CStringData@ATL@@QBE_NXZ ENDP			; ATL::CStringData::IsLocked
_TEXT	ENDS
PUBLIC	?Release@CStringData@ATL@@QAEXXZ		; ATL::CStringData::Release
; Function compile flags: /Ogty
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT
?Release@CStringData@ATL@@QAEXXZ PROC NEAR		; ATL::CStringData::Release, COMDAT
; _this$ = ecx

; 93   : 		ATLASSERT( nRefs != 0 );
; 94   : 
; 95   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

  00000	8d 41 0c	 lea	 eax, DWORD PTR [ecx+12]
  00003	83 ca ff	 or	 edx, -1
  00006	f0 0f c1 10	 lock	  xadd	 DWORD PTR [eax], edx
  0000a	4a		 dec	 edx
  0000b	85 d2		 test	 edx, edx
  0000d	7f 0a		 jg	 SHORT $L38333

; 96   : 		{
; 97   : 			pStringMgr->Free( this );

  0000f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00011	8b 10		 mov	 edx, DWORD PTR [eax]
  00013	51		 push	 ecx
  00014	8b c8		 mov	 ecx, eax
  00016	ff 52 04	 call	 DWORD PTR [edx+4]
$L38333:

; 98   : 		}
; 99   : 	}

  00019	c3		 ret	 0
?Release@CStringData@ATL@@QAEXXZ ENDP			; ATL::CStringData::Release
_TEXT	ENDS
PUBLIC	??0CPoint@@QAE@XZ				; CPoint::CPoint
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atltypes.inl
;	COMDAT ??0CPoint@@QAE@XZ
_TEXT	SEGMENT
??0CPoint@@QAE@XZ PROC NEAR				; CPoint::CPoint, COMDAT
; _this$ = ecx

; 61   : 	{ /* random filled */ }

  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0CPoint@@QAE@XZ ENDP					; CPoint::CPoint
_TEXT	ENDS
PUBLIC	??0CRect@@QAE@XZ				; CRect::CRect
; Function compile flags: /Ogty
;	COMDAT ??0CRect@@QAE@XZ
_TEXT	SEGMENT
??0CRect@@QAE@XZ PROC NEAR				; CRect::CRect, COMDAT
; _this$ = ecx

; 110  : 	{ /* random filled */ }

  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0CRect@@QAE@XZ ENDP					; CRect::CRect
_TEXT	ENDS
PUBLIC	?Width@CRect@@QBEHXZ				; CRect::Width
; Function compile flags: /Ogty
;	COMDAT ?Width@CRect@@QBEHXZ
_TEXT	SEGMENT
?Width@CRect@@QBEHXZ PROC NEAR				; CRect::Width, COMDAT
; _this$ = ecx

; 123  : 	{ return right - left; }

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	c3		 ret	 0
?Width@CRect@@QBEHXZ ENDP				; CRect::Width
_TEXT	ENDS
PUBLIC	?Height@CRect@@QBEHXZ				; CRect::Height
; Function compile flags: /Ogty
;	COMDAT ?Height@CRect@@QBEHXZ
_TEXT	SEGMENT
?Height@CRect@@QBEHXZ PROC NEAR				; CRect::Height, COMDAT
; _this$ = ecx

; 125  : 	{ return bottom - top; }

  00000	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00003	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  00006	c3		 ret	 0
?Height@CRect@@QBEHXZ ENDP				; CRect::Height
_TEXT	ENDS
PUBLIC	?AfxGetApp@@YGPAVCWinApp@@XZ			; AfxGetApp
EXTRN	?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ:NEAR ; AfxGetModuleState
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\afxwin1.inl
;	COMDAT ?AfxGetApp@@YGPAVCWinApp@@XZ
_TEXT	SEGMENT
?AfxGetApp@@YGPAVCWinApp@@XZ PROC NEAR			; AfxGetApp, COMDAT

; 21   : 	{ return afxCurrentWinApp; }

  00000	e8 00 00 00 00	 call	 ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ ; AfxGetModuleState
  00005	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00008	c3		 ret	 0
?AfxGetApp@@YGPAVCWinApp@@XZ ENDP			; AfxGetApp
_TEXT	ENDS
PUBLIC	?AfxGetResourceHandle@@YGPAUHINSTANCE__@@XZ	; AfxGetResourceHandle
; Function compile flags: /Ogty
;	COMDAT ?AfxGetResourceHandle@@YGPAUHINSTANCE__@@XZ
_TEXT	SEGMENT
?AfxGetResourceHandle@@YGPAUHINSTANCE__@@XZ PROC NEAR	; AfxGetResourceHandle, COMDAT

; 27   : 		return afxCurrentResourceHandle; }

  00000	e8 00 00 00 00	 call	 ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ ; AfxGetModuleState
  00005	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00008	c3		 ret	 0
?AfxGetResourceHandle@@YGPAUHINSTANCE__@@XZ ENDP	; AfxGetResourceHandle
_TEXT	ENDS
PUBLIC	?GetSafeHdc@CDC@@QBEPAUHDC__@@XZ		; CDC::GetSafeHdc
; Function compile flags: /Ogty
;	COMDAT ?GetSafeHdc@CDC@@QBEPAUHDC__@@XZ
_TEXT	SEGMENT
?GetSafeHdc@CDC@@QBEPAUHDC__@@XZ PROC NEAR		; CDC::GetSafeHdc, COMDAT
; _this$ = ecx

; 316  : 	{ return this == NULL ? NULL : m_hDC; }

  00000	85 c9		 test	 ecx, ecx
  00002	75 03		 jne	 SHORT $L159352
  00004	33 c0		 xor	 eax, eax
  00006	c3		 ret	 0
$L159352:
  00007	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0000a	c3		 ret	 0
?GetSafeHdc@CDC@@QBEPAUHDC__@@XZ ENDP			; CDC::GetSafeHdc
_TEXT	ENDS
PUBLIC	?DrawIcon@CDC@@QAEHHHPAUHICON__@@@Z		; CDC::DrawIcon
EXTRN	__imp__DrawIcon@16:NEAR
; Function compile flags: /Ogty
;	COMDAT ?DrawIcon@CDC@@QAEHHHPAUHICON__@@@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_hIcon$ = 16						; size = 4
?DrawIcon@CDC@@QAEHHHPAUHICON__@@@Z PROC NEAR		; CDC::DrawIcon, COMDAT
; _this$ = ecx

; 478  : 	{ ASSERT(m_hDC != NULL); return ::DrawIcon(m_hDC, x, y, hIcon); }

  00000	8b 44 24 0c	 mov	 eax, DWORD PTR _hIcon$[esp-4]
  00004	8b 54 24 08	 mov	 edx, DWORD PTR _y$[esp-4]
  00008	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0000b	50		 push	 eax
  0000c	8b 44 24 08	 mov	 eax, DWORD PTR _x$[esp]
  00010	52		 push	 edx
  00011	50		 push	 eax
  00012	51		 push	 ecx
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DrawIcon@16
  00019	c2 0c 00	 ret	 12			; 0000000cH
?DrawIcon@CDC@@QAEHHHPAUHICON__@@@Z ENDP		; CDC::DrawIcon
_TEXT	ENDS
PUBLIC	?SendMessageA@CWnd@@QAEJIIJ@Z			; CWnd::SendMessageA
EXTRN	__imp__SendMessageA@16:NEAR
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\afxwin2.inl
;	COMDAT ?SendMessageA@CWnd@@QAEJIIJ@Z
_TEXT	SEGMENT
_message$ = 8						; size = 4
_wParam$ = 12						; size = 4
_lParam$ = 16						; size = 4
?SendMessageA@CWnd@@QAEJIIJ@Z PROC NEAR			; CWnd::SendMessageA, COMDAT
; _this$ = ecx

; 44   : 	{ ASSERT(::IsWindow(m_hWnd)); return ::SendMessage(m_hWnd, message, wParam, lParam); }

  00000	8b 44 24 0c	 mov	 eax, DWORD PTR _lParam$[esp-4]
  00004	8b 54 24 08	 mov	 edx, DWORD PTR _wParam$[esp-4]
  00008	8b 49 1c	 mov	 ecx, DWORD PTR [ecx+28]
  0000b	50		 push	 eax
  0000c	8b 44 24 08	 mov	 eax, DWORD PTR _message$[esp]
  00010	52		 push	 edx
  00011	50		 push	 eax
  00012	51		 push	 ecx
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  00019	c2 0c 00	 ret	 12			; 0000000cH
?SendMessageA@CWnd@@QAEJIIJ@Z ENDP			; CWnd::SendMessageA
_TEXT	ENDS
PUBLIC	?IsIconic@CWnd@@QBEHXZ				; CWnd::IsIconic
EXTRN	__imp__IsIconic@4:NEAR
; Function compile flags: /Ogty
;	COMDAT ?IsIconic@CWnd@@QBEHXZ
_TEXT	SEGMENT
?IsIconic@CWnd@@QBEHXZ PROC NEAR			; CWnd::IsIconic, COMDAT
; _this$ = ecx

; 81   : 	{ ASSERT(::IsWindow(m_hWnd)); return ::IsIconic(m_hWnd); }

  00000	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  00003	50		 push	 eax
  00004	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsIconic@4
  0000a	c3		 ret	 0
?IsIconic@CWnd@@QBEHXZ ENDP				; CWnd::IsIconic
_TEXT	ENDS
PUBLIC	?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z		; CWnd::GetClientRect
EXTRN	__imp__GetClientRect@8:NEAR
; Function compile flags: /Ogty
;	COMDAT ?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z
_TEXT	SEGMENT
_lpRect$ = 8						; size = 4
?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z PROC NEAR	; CWnd::GetClientRect, COMDAT
; _this$ = ecx

; 107  : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetClientRect(m_hWnd, lpRect); }

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _lpRect$[esp-4]
  00004	8b 49 1c	 mov	 ecx, DWORD PTR [ecx+28]
  00007	50		 push	 eax
  00008	51		 push	 ecx
  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetClientRect@8
  0000f	c2 04 00	 ret	 4
?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z ENDP		; CWnd::GetClientRect
_TEXT	ENDS
PUBLIC	?ScreenToClient@CWnd@@QBEXPAUtagPOINT@@@Z	; CWnd::ScreenToClient
EXTRN	__imp__ScreenToClient@8:NEAR
; Function compile flags: /Ogty
;	COMDAT ?ScreenToClient@CWnd@@QBEXPAUtagPOINT@@@Z
_TEXT	SEGMENT
_lpPoint$ = 8						; size = 4
?ScreenToClient@CWnd@@QBEXPAUtagPOINT@@@Z PROC NEAR	; CWnd::ScreenToClient, COMDAT
; _this$ = ecx

; 115  : 	{ ASSERT(::IsWindow(m_hWnd)); ::ScreenToClient(m_hWnd, lpPoint); }

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _lpPoint$[esp-4]
  00004	8b 49 1c	 mov	 ecx, DWORD PTR [ecx+28]
  00007	50		 push	 eax
  00008	51		 push	 ecx
  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ScreenToClient@8
  0000f	c2 04 00	 ret	 4
?ScreenToClient@CWnd@@QBEXPAUtagPOINT@@@Z ENDP		; CWnd::ScreenToClient
_TEXT	ENDS
PUBLIC	?SetTimer@CWnd@@QAEIIIP6GXPAUHWND__@@IIK@Z@Z	; CWnd::SetTimer
EXTRN	__imp__SetTimer@16:NEAR
; Function compile flags: /Ogty
;	COMDAT ?SetTimer@CWnd@@QAEIIIP6GXPAUHWND__@@IIK@Z@Z
_TEXT	SEGMENT
_nIDEvent$ = 8						; size = 4
_nElapse$ = 12						; size = 4
_lpfnTimer$ = 16					; size = 4
?SetTimer@CWnd@@QAEIIIP6GXPAUHWND__@@IIK@Z@Z PROC NEAR	; CWnd::SetTimer, COMDAT
; _this$ = ecx

; 183  : 		lpfnTimer); }

  00000	8b 44 24 0c	 mov	 eax, DWORD PTR _lpfnTimer$[esp-4]
  00004	8b 54 24 08	 mov	 edx, DWORD PTR _nElapse$[esp-4]
  00008	8b 49 1c	 mov	 ecx, DWORD PTR [ecx+28]
  0000b	50		 push	 eax
  0000c	8b 44 24 08	 mov	 eax, DWORD PTR _nIDEvent$[esp]
  00010	52		 push	 edx
  00011	50		 push	 eax
  00012	51		 push	 ecx
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetTimer@16
  00019	c2 0c 00	 ret	 12			; 0000000cH
?SetTimer@CWnd@@QAEIIIP6GXPAUHWND__@@IIK@Z@Z ENDP	; CWnd::SetTimer
_TEXT	ENDS
PUBLIC	?KillTimer@CWnd@@QAEHI@Z			; CWnd::KillTimer
EXTRN	__imp__KillTimer@8:NEAR
; Function compile flags: /Ogty
;	COMDAT ?KillTimer@CWnd@@QAEHI@Z
_TEXT	SEGMENT
_nIDEvent$ = 8						; size = 4
?KillTimer@CWnd@@QAEHI@Z PROC NEAR			; CWnd::KillTimer, COMDAT
; _this$ = ecx

; 185  : 	{ ASSERT(::IsWindow(m_hWnd)); return ::KillTimer(m_hWnd, nIDEvent); }

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _nIDEvent$[esp-4]
  00004	8b 49 1c	 mov	 ecx, DWORD PTR [ecx+28]
  00007	50		 push	 eax
  00008	51		 push	 ecx
  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__KillTimer@8
  0000f	c2 04 00	 ret	 4
?KillTimer@CWnd@@QAEHI@Z ENDP				; CWnd::KillTimer
_TEXT	ENDS
PUBLIC	?SetIcon@CWnd@@QAEPAUHICON__@@PAU2@H@Z		; CWnd::SetIcon
; Function compile flags: /Ogty
;	COMDAT ?SetIcon@CWnd@@QAEPAUHICON__@@PAU2@H@Z
_TEXT	SEGMENT
_hIcon$ = 8						; size = 4
_bBigIcon$ = 12						; size = 4
?SetIcon@CWnd@@QAEPAUHICON__@@PAU2@H@Z PROC NEAR	; CWnd::SetIcon, COMDAT
; _this$ = ecx

; 326  : 	{ ASSERT(::IsWindow(m_hWnd)); return (HICON)::SendMessage(m_hWnd, WM_SETICON, bBigIcon, (LPARAM)hIcon); }

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _hIcon$[esp-4]
  00004	8b 54 24 08	 mov	 edx, DWORD PTR _bBigIcon$[esp-4]
  00008	50		 push	 eax
  00009	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  0000c	52		 push	 edx
  0000d	68 80 00 00 00	 push	 128			; 00000080H
  00012	50		 push	 eax
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  00019	c2 08 00	 ret	 8
?SetIcon@CWnd@@QAEPAUHICON__@@PAU2@H@Z ENDP		; CWnd::SetIcon
_TEXT	ENDS
PUBLIC	?OnTimer@CWnd@@IAEXI@Z				; CWnd::OnTimer
EXTRN	?Default@CWnd@@IAEJXZ:NEAR			; CWnd::Default
; Function compile flags: /Ogty
;	COMDAT ?OnTimer@CWnd@@IAEXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?OnTimer@CWnd@@IAEXI@Z PROC NEAR			; CWnd::OnTimer, COMDAT
; _this$ = ecx

; 488  : 	{ Default(); }

  00000	e8 00 00 00 00	 call	 ?Default@CWnd@@IAEJXZ	; CWnd::Default
  00005	c2 04 00	 ret	 4
?OnTimer@CWnd@@IAEXI@Z ENDP				; CWnd::OnTimer
_TEXT	ENDS
PUBLIC	?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z	; CWnd::DoDataExchange
; Function compile flags: /Ogty
;	COMDAT ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z PROC NEAR ; CWnd::DoDataExchange, COMDAT
; _this$ = ecx

; 545  : 	{ } // default does nothing

  00000	c2 04 00	 ret	 4
?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z ENDP	; CWnd::DoDataExchange
_TEXT	ENDS
PUBLIC	?LoadIconA@CWinApp@@QBEPAUHICON__@@I@Z		; CWinApp::LoadIconA
EXTRN	__imp__LoadIconA@8:NEAR
; Function compile flags: /Ogty
;	COMDAT ?LoadIconA@CWinApp@@QBEPAUHICON__@@I@Z
_TEXT	SEGMENT
_nIDResource$ = 8					; size = 4
?LoadIconA@CWinApp@@QBEPAUHICON__@@I@Z PROC NEAR	; CWinApp::LoadIconA, COMDAT
; _this$ = ecx

; 1015 : 		RT_GROUP_ICON), MAKEINTRESOURCE(nIDResource)); }

  00000	e8 00 00 00 00	 call	 ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ ; AfxGetModuleState
  00005	0f b7 4c 24 04	 movzx	 ecx, WORD PTR _nIDResource$[esp-4]
  0000a	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0000d	51		 push	 ecx
  0000e	50		 push	 eax
  0000f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadIconA@8
  00015	c2 04 00	 ret	 4
?LoadIconA@CWinApp@@QBEPAUHICON__@@I@Z ENDP		; CWinApp::LoadIconA
_TEXT	ENDS
PUBLIC	?SelectItem@CTreeCtrl@@QAEHPAU_TREEITEM@@@Z	; CTreeCtrl::SelectItem
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\afxcmn.inl
;	COMDAT ?SelectItem@CTreeCtrl@@QAEHPAU_TREEITEM@@@Z
_TEXT	SEGMENT
_hItem$ = 8						; size = 4
?SelectItem@CTreeCtrl@@QAEHPAU_TREEITEM@@@Z PROC NEAR	; CTreeCtrl::SelectItem, COMDAT
; _this$ = ecx

; 290  : 	{ ASSERT(::IsWindow(m_hWnd)); return (BOOL) ::SendMessage(m_hWnd, TVM_SELECTITEM, TVGN_CARET, (LPARAM)hItem); }

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _hItem$[esp-4]
  00004	8b 49 1c	 mov	 ecx, DWORD PTR [ecx+28]
  00007	50		 push	 eax
  00008	6a 09		 push	 9
  0000a	68 0b 11 00 00	 push	 4363			; 0000110bH
  0000f	51		 push	 ecx
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  00016	c2 04 00	 ret	 4
?SelectItem@CTreeCtrl@@QAEHPAU_TREEITEM@@@Z ENDP	; CTreeCtrl::SelectItem
_TEXT	ENDS
PUBLIC	??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ		; ATL::CSimpleStringT<char,0>::operator char const *
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT
??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ PROC NEAR	; ATL::CSimpleStringT<char,0>::operator char const *, COMDAT
; _this$ = ecx

; 379  : 		return( m_pszData );

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 380  : 	}

  00002	c3		 ret	 0
??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ ENDP		; ATL::CSimpleStringT<char,0>::operator char const *
_TEXT	ENDS
PUBLIC	?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ	; ATL::CSimpleStringT<char,0>::GetString
; Function compile flags: /Ogty
;	COMDAT ?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT
?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ PROC NEAR ; ATL::CSimpleStringT<char,0>::GetString, COMDAT
; _this$ = ecx

; 510  : 		return( m_pszData );

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 511  : 	}

  00002	c3		 ret	 0
?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ ENDP	; ATL::CSimpleStringT<char,0>::GetString
_TEXT	ENDS
PUBLIC	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
; Function compile flags: /Ogty
;	COMDAT ?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ
_TEXT	SEGMENT
?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ PROC NEAR ; ATL::CSimpleStringT<char,0>::GetData, COMDAT
; _this$ = ecx

; 731  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 e8 10	 sub	 eax, 16			; 00000010H

; 732  : 	}

  00005	c3		 ret	 0
?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ENDP ; ATL::CSimpleStringT<char,0>::GetData
_TEXT	ENDS
PUBLIC	?GetDefaultManager@?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ ; StrTraitMFC<char,ATL::ChTraitsCRT<char> >::GetDefaultManager
EXTRN	?AfxGetStringManager@@YGPAUIAtlStringMgr@ATL@@XZ:NEAR ; AfxGetStringManager
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\afxstr.h
;	COMDAT ?GetDefaultManager@?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ
_TEXT	SEGMENT
?GetDefaultManager@?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ PROC NEAR ; StrTraitMFC<char,ATL::ChTraitsCRT<char> >::GetDefaultManager, COMDAT

; 50   : 		return( AfxGetStringManager() );

  00000	e9 00 00 00 00	 jmp	 ?AfxGetStringManager@@YGPAUIAtlStringMgr@ATL@@XZ ; AfxGetStringManager
?GetDefaultManager@?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ ENDP ; StrTraitMFC<char,ATL::ChTraitsCRT<char> >::GetDefaultManager
_TEXT	ENDS
PUBLIC	?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<char,0>::Attach
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z
_TEXT	SEGMENT
_pData$ = 8						; size = 4
?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::Attach, COMDAT
; _this$ = ecx

; 712  : 		m_pszData = static_cast< PXSTR >( pData->data() );

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _pData$[esp-4]
  00004	83 c0 10	 add	 eax, 16			; 00000010H
  00007	89 01		 mov	 DWORD PTR [ecx], eax

; 713  : 	}

  00009	c2 04 00	 ret	 4
?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z ENDP ; ATL::CSimpleStringT<char,0>::Attach
_TEXT	ENDS
PUBLIC	?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z ; ATL::CSimpleStringT<char,0>::CopyChars
; Function compile flags: /Ogty
;	COMDAT ?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z
_TEXT	SEGMENT
_pchDest$ = 8						; size = 4
_pchSrc$ = 12						; size = 4
_nChars$ = 16						; size = 4
?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::CopyChars, COMDAT

; 653  : 		memcpy( pchDest, pchSrc, nChars*sizeof( XCHAR ) );

  00000	8b 4c 24 0c	 mov	 ecx, DWORD PTR _nChars$[esp-4]
  00004	56		 push	 esi
  00005	8b 74 24 0c	 mov	 esi, DWORD PTR _pchSrc$[esp]
  00009	8b c1		 mov	 eax, ecx
  0000b	57		 push	 edi
  0000c	8b 7c 24 0c	 mov	 edi, DWORD PTR _pchDest$[esp+4]
  00010	c1 e9 02	 shr	 ecx, 2
  00013	f3 a5		 rep movsd
  00015	8b c8		 mov	 ecx, eax
  00017	83 e1 03	 and	 ecx, 3
  0001a	f3 a4		 rep movsb
  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi

; 654  : 	}

  0001e	c3		 ret	 0
?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z ENDP ; ATL::CSimpleStringT<char,0>::CopyChars
_TEXT	ENDS
PUBLIC	?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<char,0>::ThrowMemoryException
; Function compile flags: /Ogty
;	COMDAT ?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ
_TEXT	SEGMENT
?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ PROC NEAR ; ATL::CSimpleStringT<char,0>::ThrowMemoryException, COMDAT

; 705  : 		AtlThrow( E_OUTOFMEMORY );

  00000	68 0e 00 07 80	 push	 -2147024882		; 8007000eH
  00005	e8 00 00 00 00	 call	 ?AtlThrow@ATL@@YGXJ@Z	; ATL::AtlThrow
$L159420:
$L159419:
  0000a	cc		 int	 3
?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ ENDP ; ATL::CSimpleStringT<char,0>::ThrowMemoryException
_TEXT	ENDS
PUBLIC	??0CMonitorDlg@@QAE@PAVCWnd@@@Z			; CMonitorDlg::CMonitorDlg
PUBLIC	?DoDataExchange@CMonitorDlg@@MAEXPAVCDataExchange@@@Z ; CMonitorDlg::DoDataExchange
PUBLIC	?OnInitDialog@CMonitorDlg@@MAEHXZ		; CMonitorDlg::OnInitDialog
PUBLIC	??_7CMonitorDlg@@6B@				; CMonitorDlg::`vftable'
PUBLIC	??_GCMonitorDlg@@UAEPAXI@Z			; CMonitorDlg::`scalar deleting destructor'
PUBLIC	?Create@CDialog@@UAEHIPAVCWnd@@@Z		; CDialog::Create
PUBLIC	?Serialize@CObject@@UAEXAAVCArchive@@@Z		; CObject::Serialize
PUBLIC	?BeginModalState@CWnd@@UAEXXZ			; CWnd::BeginModalState
PUBLIC	?EndModalState@CWnd@@UAEXXZ			; CWnd::EndModalState
EXTRN	?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z:NEAR ; CWnd::CreateControlSite
EXTRN	??_ECMonitorDlg@@UAEPAXI@Z:NEAR			; CMonitorDlg::`vector deleting destructor'
EXTRN	?GetRuntimeClass@CDialog@@UBEPAUCRuntimeClass@@XZ:NEAR ; CDialog::GetRuntimeClass
EXTRN	?Create@CDialog@@UAEHPBDPAVCWnd@@@Z:NEAR	; CDialog::Create
EXTRN	?CreateIndirect@CDialog@@UAEHPBUDLGTEMPLATE@@PAVCWnd@@PAX@Z:NEAR ; CDialog::CreateIndirect
EXTRN	?CreateIndirect@CDialog@@UAEHPAXPAVCWnd@@@Z:NEAR ; CDialog::CreateIndirect
EXTRN	??0CDialog@@QAE@IPAVCWnd@@@Z:NEAR		; CDialog::CDialog
EXTRN	?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z:NEAR ; CWnd::OnToolHitTest
EXTRN	?DoModal@CDialog@@UAEHXZ:NEAR			; CDialog::DoModal
EXTRN	?OnSetFont@CDialog@@UAEXPAVCFont@@@Z:NEAR	; CDialog::OnSetFont
EXTRN	?OnOK@CDialog@@MAEXXZ:NEAR			; CDialog::OnOK
EXTRN	?OnCancel@CDialog@@MAEXXZ:NEAR			; CDialog::OnCancel
EXTRN	??1CDialog@@UAE@XZ:NEAR				; CDialog::~CDialog
EXTRN	?PreTranslateMessage@CDialog@@UAEHPAUtagMSG@@@Z:NEAR ; CDialog::PreTranslateMessage
EXTRN	?OnCmdMsg@CDialog@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:NEAR ; CDialog::OnCmdMsg
EXTRN	?CheckAutoCenter@CDialog@@UAEHXZ:NEAR		; CDialog::CheckAutoCenter
EXTRN	?SetOccDialogInfo@CDialog@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z:NEAR ; CDialog::SetOccDialogInfo
EXTRN	?PreInitDialog@CDialog@@MAEXXZ:NEAR		; CDialog::PreInitDialog
EXTRN	?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z:NEAR ; CWnd::GetScrollBarCtrl
EXTRN	?WinHelpA@CWnd@@UAEXKI@Z:NEAR			; CWnd::WinHelpA
EXTRN	?HtmlHelpA@CWnd@@UAEXKI@Z:NEAR			; CWnd::HtmlHelpA
EXTRN	?WinHelpInternal@CWnd@@UAEXKI@Z:NEAR		; CWnd::WinHelpInternal
EXTRN	?ContinueModal@CWnd@@UAEHXZ:NEAR		; CWnd::ContinueModal
EXTRN	?EndModalLoop@CWnd@@UAEXH@Z:NEAR		; CWnd::EndModalLoop
EXTRN	?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ:NEAR ; CWnd::GetInterfaceMap
EXTRN	?EnsureStdObj@CWnd@@UAEJXZ:NEAR			; CWnd::EnsureStdObj
EXTRN	?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z:NEAR ; CWnd::get_accParent
EXTRN	?get_accChildCount@CWnd@@UAEJPAJ@Z:NEAR		; CWnd::get_accChildCount
EXTRN	?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z:NEAR ; CWnd::get_accChild
EXTRN	?get_accName@CWnd@@UAEJUtagVARIANT@@PAPAG@Z:NEAR ; CWnd::get_accName
EXTRN	?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z:NEAR	; CCmdTarget::IsInvokeAllowed
EXTRN	?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPAG@Z:NEAR ; CWnd::get_accValue
EXTRN	?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPAG@Z:NEAR ; CWnd::get_accDescription
EXTRN	?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z:NEAR ; CCmdTarget::GetDispatchIID
EXTRN	?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:NEAR ; CWnd::get_accRole
EXTRN	?GetTypeInfoCount@CCmdTarget@@UAEIXZ:NEAR	; CCmdTarget::GetTypeInfoCount
EXTRN	?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ:NEAR ; CCmdTarget::GetTypeLibCache
EXTRN	?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:NEAR ; CWnd::get_accState
EXTRN	?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z:NEAR ; CCmdTarget::GetTypeLib
EXTRN	?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPAG@Z:NEAR ; CWnd::get_accHelp
EXTRN	?get_accHelpTopic@CWnd@@UAEJPAPAGUtagVARIANT@@PAJ@Z:NEAR ; CWnd::get_accHelpTopic
EXTRN	??0CMyTreeCtrl@@QAE@XZ:NEAR			; CMyTreeCtrl::CMyTreeCtrl
EXTRN	?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPAG@Z:NEAR ; CWnd::get_accKeyboardShortcut
EXTRN	?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z:NEAR	; CWnd::get_accFocus
EXTRN	?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z:NEAR ; CWnd::get_accSelection
EXTRN	?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPAG@Z:NEAR ; CWnd::get_accDefaultAction
EXTRN	?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ:NEAR ; CCmdTarget::GetCommandMap
EXTRN	?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z:NEAR	; CWnd::accSelect
EXTRN	?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z:NEAR ; CWnd::accLocation
EXTRN	?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ:NEAR ; CCmdTarget::GetDispatchMap
EXTRN	?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z:NEAR ; CWnd::accNavigate
EXTRN	?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ:NEAR ; CCmdTarget::GetConnectionMap
EXTRN	?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z:NEAR	; CWnd::accHitTest
EXTRN	?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z:NEAR ; CWnd::accDoDefaultAction
EXTRN	?put_accName@CWnd@@UAEJUtagVARIANT@@PAG@Z:NEAR	; CWnd::put_accName
EXTRN	?put_accValue@CWnd@@UAEJUtagVARIANT@@PAG@Z:NEAR	; CWnd::put_accValue
EXTRN	?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z:NEAR ; CWnd::SetProxy
EXTRN	?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ:NEAR ; CCmdTarget::GetEventSinkMap
EXTRN	?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z:NEAR	; CWnd::CreateAccessibleProxy
EXTRN	?OnCreateAggregates@CCmdTarget@@UAEHXZ:NEAR	; CCmdTarget::OnCreateAggregates
EXTRN	?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z:NEAR ; CCmdTarget::GetInterfaceHook
EXTRN	?OnCommand@CWnd@@MAEHIJ@Z:NEAR			; CWnd::OnCommand
EXTRN	?OnNotify@CWnd@@MAEHIJPAJ@Z:NEAR		; CWnd::OnNotify
EXTRN	?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z:NEAR ; CCmdTarget::GetExtraConnectionPoints
EXTRN	?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z:NEAR ; CCmdTarget::GetConnectionHook
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
EXTRN	?PreSubclassWindow@CWnd@@UAEXXZ:NEAR		; CWnd::PreSubclassWindow
EXTRN	?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z:NEAR ; CWnd::Create
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z:NEAR ; CWnd::CreateEx
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z:NEAR ; CWnd::CreateEx
EXTRN	?DestroyWindow@CWnd@@UAEHXZ:NEAR		; CWnd::DestroyWindow
EXTRN	?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z:NEAR ; CWnd::PreCreateWindow
EXTRN	?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z:NEAR	; CWnd::CalcWindowRect
EXTRN	?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ:NEAR ; CWnd::GetSuperWndProcAddr
EXTRN	?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z:NEAR ; CWnd::OnAmbientProperty
EXTRN	?WindowProc@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::WindowProc
EXTRN	?OnWndMsg@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnWndMsg
EXTRN	?DefWindowProcA@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::DefWindowProcA
EXTRN	?PostNcDestroy@CWnd@@MAEXXZ:NEAR		; CWnd::PostNcDestroy
EXTRN	?OnChildNotify@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnChildNotify
EXTRN	?IsFrameWnd@CWnd@@UBEHXZ:NEAR			; CWnd::IsFrameWnd
EXTRN	?OnFinalRelease@CWnd@@UAEXXZ:NEAR		; CWnd::OnFinalRelease
EXTRN	??1CMyTreeCtrl@@UAE@XZ:NEAR			; CMyTreeCtrl::~CMyTreeCtrl
EXTRN	?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z:NEAR ; CWnd::CreateControlContainer
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\afxwin1.inl
xdata$x	SEGMENT
$T159445 DD	0ffffffffH
	DD	FLAT:$L159424
	DD	00H
	DD	FLAT:$L159425
$T159442 DD	019930520H
	DD	02H
	DD	FLAT:$T159445
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_7CMonitorDlg@@6B@
CONST	SEGMENT
??_7CMonitorDlg@@6B@ DD FLAT:?GetRuntimeClass@CDialog@@UBEPAUCRuntimeClass@@XZ ; CMonitorDlg::`vftable'
	DD	FLAT:??_ECMonitorDlg@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?OnCmdMsg@CDialog@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CMonitorDlg@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPAGUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPAG@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PAG@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PAG@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CMonitorDlg@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CDialog@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CDialog@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CDialog@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?Create@CDialog@@UAEHIPAVCWnd@@@Z
	DD	FLAT:?Create@CDialog@@UAEHPBDPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPAXPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPBUDLGTEMPLATE@@PAVCWnd@@PAX@Z
	DD	FLAT:?DoModal@CDialog@@UAEHXZ
	DD	FLAT:?OnInitDialog@CMonitorDlg@@MAEHXZ
	DD	FLAT:?OnSetFont@CDialog@@UAEXPAVCFont@@@Z
	DD	FLAT:?OnOK@CDialog@@MAEXXZ
	DD	FLAT:?OnCancel@CDialog@@MAEXXZ
	DD	FLAT:?PreInitDialog@CDialog@@MAEXXZ
; Function compile flags: /Ogty
; File c:\offi src_real\offi src!\monitor\monitordlg.cpp
CONST	ENDS
;	COMDAT ??0CMonitorDlg@@QAE@PAVCWnd@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pParent$ = 8						; size = 4
??0CMonitorDlg@@QAE@PAVCWnd@@@Z PROC NEAR		; CMonitorDlg::CMonitorDlg, COMDAT
; _this$ = ecx

; 20   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CMonitorDlg@@QAE@PAVCWnd@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	8b 44 24 14	 mov	 eax, DWORD PTR _pParent$[esp+12]
  0001a	56		 push	 esi
  0001b	50		 push	 eax
  0001c	8b f1		 mov	 esi, ecx
  0001e	6a 66		 push	 102			; 00000066H
  00020	89 74 24 0c	 mov	 DWORD PTR _this$[esp+28], esi
  00024	e8 00 00 00 00	 call	 ??0CDialog@@QAE@IPAVCWnd@@@Z ; CDialog::CDialog
  00029	8d 4e 78	 lea	 ecx, DWORD PTR [esi+120]
  0002c	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+28], 0
  00034	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CMonitorDlg@@6B@
  0003a	e8 00 00 00 00	 call	 ??0CMyTreeCtrl@@QAE@XZ	; CMyTreeCtrl::CMyTreeCtrl
  0003f	c6 44 24 10 01	 mov	 BYTE PTR __$EHRec$[esp+28], 1

; 21   : 	//{{AFX_DATA_INIT(CMonitorDlg)
; 22   : 	m_dwID = 0;

  00044	c7 86 e0 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2272], 0

; 23   : 	m_bCheckSendSms = FALSE;

  0004e	c7 86 e4 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2276], 0

; 24   : 	//}}AFX_DATA_INIT
; 25   : 	// Note that LoadIcon does not require a subsequent DestroyIcon in Win32
; 26   : 	m_hIcon = AfxGetApp()->LoadIcon(IDR_MAINFRAME);

  00058	e8 00 00 00 00	 call	 ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ ; AfxGetModuleState
  0005d	e8 00 00 00 00	 call	 ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ ; AfxGetModuleState
  00062	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00065	68 80 00 00 00	 push	 128			; 00000080H
  0006a	50		 push	 eax
  0006b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadIconA@8

; 27   : }

  00071	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00075	89 86 e8 08 00
	00		 mov	 DWORD PTR [esi+2280], eax
  0007b	8b c6		 mov	 eax, esi
  0007d	5e		 pop	 esi
  0007e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00085	83 c4 10	 add	 esp, 16			; 00000010H
  00088	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L159424:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CDialog@@UAE@XZ	; CDialog::~CDialog
$L159425:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 78	 add	 ecx, 120		; 00000078H
  0000e	e9 00 00 00 00	 jmp	 ??1CMyTreeCtrl@@UAE@XZ	; CMyTreeCtrl::~CMyTreeCtrl
__ehhandler$??0CMonitorDlg@@QAE@PAVCWnd@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T159442
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CMonitorDlg@@QAE@PAVCWnd@@@Z ENDP			; CMonitorDlg::CMonitorDlg
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\afx.inl
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z PROC NEAR	; CObject::Serialize, COMDAT
; _this$ = ecx

; 25   : 	{ /* CObject does not serialize anything by default */ }

  00000	c2 04 00	 ret	 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z ENDP		; CObject::Serialize
_TEXT	ENDS
EXTRN	__imp__EnableWindow@8:NEAR
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\afxwin2.inl
;	COMDAT ?BeginModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT
?BeginModalState@CWnd@@UAEXXZ PROC NEAR			; CWnd::BeginModalState, COMDAT
; _this$ = ecx

; 549  : 	{ ::EnableWindow(m_hWnd, FALSE); }

  00000	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  00003	6a 00		 push	 0
  00005	50		 push	 eax
  00006	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  0000c	c3		 ret	 0
?BeginModalState@CWnd@@UAEXXZ ENDP			; CWnd::BeginModalState
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?EndModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT
?EndModalState@CWnd@@UAEXXZ PROC NEAR			; CWnd::EndModalState, COMDAT
; _this$ = ecx

; 551  : 	{ ::EnableWindow(m_hWnd, TRUE); }

  00000	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  00003	6a 01		 push	 1
  00005	50		 push	 eax
  00006	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  0000c	c3		 ret	 0
?EndModalState@CWnd@@UAEXXZ ENDP			; CWnd::EndModalState
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?Create@CDialog@@UAEHIPAVCWnd@@@Z
_TEXT	SEGMENT
_nIDTemplate$ = 8					; size = 4
_pParentWnd$ = 12					; size = 4
?Create@CDialog@@UAEHIPAVCWnd@@@Z PROC NEAR		; CDialog::Create, COMDAT
; _this$ = ecx

; 569  : 	{ return Create(MAKEINTRESOURCE(nIDTemplate), pParentWnd); }

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	0f b7 54 24 04	 movzx	 edx, WORD PTR _nIDTemplate$[esp-4]
  00007	89 54 24 04	 mov	 DWORD PTR _nIDTemplate$[esp-4], edx
  0000b	ff a0 34 01 00
	00		 jmp	 DWORD PTR [eax+308]
?Create@CDialog@@UAEHIPAVCWnd@@@Z ENDP			; CDialog::Create
_TEXT	ENDS
PUBLIC	??1CMonitorDlg@@UAE@XZ				; CMonitorDlg::~CMonitorDlg
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
; Function compile flags: /Ogty
;	COMDAT ??_GCMonitorDlg@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCMonitorDlg@@UAEPAXI@Z PROC NEAR			; CMonitorDlg::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CMonitorDlg@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L159468
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L159468:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCMonitorDlg@@UAEPAXI@Z ENDP				; CMonitorDlg::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
$T159477 DD	0ffffffffH
	DD	FLAT:$L159472
$T159475 DD	019930520H
	DD	01H
	DD	FLAT:$T159477
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ??1CMonitorDlg@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CMonitorDlg@@UAE@XZ PROC NEAR			; CMonitorDlg::~CMonitorDlg, COMDAT
; _this$ = ecx
  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??1CMonitorDlg@@UAE@XZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	89 74 24 04	 mov	 DWORD PTR _this$[esp+20], esi
  0001d	8d 4e 78	 lea	 ecx, DWORD PTR [esi+120]
  00020	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+28], 0
  00028	e8 00 00 00 00	 call	 ??1CMyTreeCtrl@@UAE@XZ	; CMyTreeCtrl::~CMyTreeCtrl
  0002d	8b ce		 mov	 ecx, esi
  0002f	c7 44 24 10 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+28], -1
  00037	e8 00 00 00 00	 call	 ??1CDialog@@UAE@XZ	; CDialog::~CDialog
  0003c	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00040	5e		 pop	 esi
  00041	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00048	83 c4 10	 add	 esp, 16			; 00000010H
  0004b	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L159472:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CDialog@@UAE@XZ	; CDialog::~CDialog
__ehhandler$??1CMonitorDlg@@UAE@XZ:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T159475
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1CMonitorDlg@@UAE@XZ ENDP				; CMonitorDlg::~CMonitorDlg
EXTRN	?DDX_Text@@YGXPAVCDataExchange@@HAAI@Z:NEAR	; DDX_Text
EXTRN	?DDX_Check@@YGXPAVCDataExchange@@HAAH@Z:NEAR	; DDX_Check
EXTRN	?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z:NEAR ; DDX_Control
; Function compile flags: /Ogty
; File c:\offi src_real\offi src!\monitor\monitordlg.cpp
;	COMDAT ?DoDataExchange@CMonitorDlg@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT
_pDX$ = 8						; size = 4
?DoDataExchange@CMonitorDlg@@MAEXPAVCDataExchange@@@Z PROC NEAR ; CMonitorDlg::DoDataExchange, COMDAT
; _this$ = ecx

; 30   : {

  00000	56		 push	 esi
  00001	57		 push	 edi

; 31   : 	CDialog::DoDataExchange(pDX);
; 32   : 	//{{AFX_DATA_MAP(CMonitorDlg)
; 33   : 	DDX_Control(pDX, IDC_TREE_SERVER, m_tree);

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _pDX$[esp+4]
  00006	8b f1		 mov	 esi, ecx
  00008	8d 46 78	 lea	 eax, DWORD PTR [esi+120]
  0000b	50		 push	 eax
  0000c	68 e8 03 00 00	 push	 1000			; 000003e8H
  00011	57		 push	 edi
  00012	e8 00 00 00 00	 call	 ?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z ; DDX_Control

; 34   : 	DDX_Text(pDX, IDC_EDIT_ID, m_dwID);

  00017	8d 8e e0 08 00
	00		 lea	 ecx, DWORD PTR [esi+2272]
  0001d	51		 push	 ecx
  0001e	68 ea 03 00 00	 push	 1002			; 000003eaH
  00023	57		 push	 edi
  00024	e8 00 00 00 00	 call	 ?DDX_Text@@YGXPAVCDataExchange@@HAAI@Z ; DDX_Text

; 35   : 	DDX_Check(pDX, IDC_CHECK_SENDSMS, m_bCheckSendSms);

  00029	81 c6 e4 08 00
	00		 add	 esi, 2276		; 000008e4H
  0002f	56		 push	 esi
  00030	68 ef 03 00 00	 push	 1007			; 000003efH
  00035	57		 push	 edi
  00036	e8 00 00 00 00	 call	 ?DDX_Check@@YGXPAVCDataExchange@@HAAH@Z ; DDX_Check
  0003b	5f		 pop	 edi
  0003c	5e		 pop	 esi

; 36   : 	//}}AFX_DATA_MAP
; 37   : }

  0003d	c2 04 00	 ret	 4
?DoDataExchange@CMonitorDlg@@MAEXPAVCDataExchange@@@Z ENDP ; CMonitorDlg::DoDataExchange
_TEXT	ENDS
EXTRN	?OnPaint@CDialog@@IAEXXZ:NEAR			; CDialog::OnPaint
EXTRN	??0CPaintDC@@QAE@PAVCWnd@@@Z:NEAR		; CPaintDC::CPaintDC
EXTRN	??1CPaintDC@@UAE@XZ:NEAR			; CPaintDC::~CPaintDC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:NEAR
EXTRN	__imp__GetSystemMetrics@4:NEAR
; Function compile flags: /Ogty
;	COMDAT ?OnPaint@CMonitorDlg@@IAEXXZ
_TEXT	SEGMENT
_rect$157370 = -104					; size = 16
_dc$157366 = -88					; size = 84
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
?OnPaint@CMonitorDlg@@IAEXXZ PROC NEAR			; CMonitorDlg::OnPaint, COMDAT
; _this$ = ecx

; 127  : {

  00000	83 ec 68	 sub	 esp, 104		; 00000068H
  00003	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00008	56		 push	 esi
  00009	8b f1		 mov	 esi, ecx
  0000b	89 44 24 68	 mov	 DWORD PTR __$ArrayPad$[esp+108], eax

; 128  : 	if (IsIconic())

  0000f	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  00012	50		 push	 eax
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsIconic@4
  00019	85 c0		 test	 eax, eax
  0001b	0f 84 91 00 00
	00		 je	 $L157365
  00021	53		 push	 ebx
  00022	57		 push	 edi

; 129  : 	{
; 130  : 		CPaintDC dc(this); // device context for painting

  00023	56		 push	 esi
  00024	8d 4c 24 20	 lea	 ecx, DWORD PTR _dc$157366[esp+120]
  00028	e8 00 00 00 00	 call	 ??0CPaintDC@@QAE@PAVCWnd@@@Z ; CPaintDC::CPaintDC

; 131  : 
; 132  : 		SendMessage(WM_ICONERASEBKGND, (WPARAM) dc.GetSafeHdc(), 0);

  0002d	8b 4c 24 20	 mov	 ecx, DWORD PTR _dc$157366[esp+120]
  00031	8b 56 1c	 mov	 edx, DWORD PTR [esi+28]
  00034	6a 00		 push	 0
  00036	51		 push	 ecx
  00037	6a 27		 push	 39			; 00000027H
  00039	52		 push	 edx
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 133  : 
; 134  : 		// Center icon in client rectangle
; 135  : 		int cxIcon = GetSystemMetrics(SM_CXICON);

  00040	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__GetSystemMetrics@4
  00046	6a 0b		 push	 11			; 0000000bH
  00048	ff d7		 call	 edi

; 136  : 		int cyIcon = GetSystemMetrics(SM_CYICON);

  0004a	6a 0c		 push	 12			; 0000000cH
  0004c	8b d8		 mov	 ebx, eax
  0004e	ff d7		 call	 edi

; 137  : 		CRect rect;
; 138  : 		GetClientRect(&rect);

  00050	8b 4e 1c	 mov	 ecx, DWORD PTR [esi+28]
  00053	8b f8		 mov	 edi, eax
  00055	8d 44 24 0c	 lea	 eax, DWORD PTR _rect$157370[esp+116]
  00059	50		 push	 eax
  0005a	51		 push	 ecx
  0005b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetClientRect@8

; 139  : 		int x = (rect.Width() - cxIcon + 1) / 2;
; 140  : 		int y = (rect.Height() - cyIcon + 1) / 2;
; 141  : 
; 142  : 		// Draw the icon
; 143  : 		dc.DrawIcon(x, y, m_hIcon);

  00061	8b 44 24 18	 mov	 eax, DWORD PTR _rect$157370[esp+128]
  00065	8b 4c 24 10	 mov	 ecx, DWORD PTR _rect$157370[esp+120]
  00069	8b 96 e8 08 00
	00		 mov	 edx, DWORD PTR [esi+2280]
  0006f	2b c1		 sub	 eax, ecx
  00071	2b c7		 sub	 eax, edi
  00073	40		 inc	 eax
  00074	52		 push	 edx
  00075	99		 cdq
  00076	2b c2		 sub	 eax, edx
  00078	8b 54 24 10	 mov	 edx, DWORD PTR _rect$157370[esp+120]
  0007c	d1 f8		 sar	 eax, 1
  0007e	50		 push	 eax
  0007f	8b 44 24 1c	 mov	 eax, DWORD PTR _rect$157370[esp+132]
  00083	2b c2		 sub	 eax, edx
  00085	2b c3		 sub	 eax, ebx
  00087	40		 inc	 eax
  00088	99		 cdq
  00089	2b c2		 sub	 eax, edx
  0008b	d1 f8		 sar	 eax, 1
  0008d	50		 push	 eax
  0008e	8b 44 24 2c	 mov	 eax, DWORD PTR _dc$157366[esp+132]
  00092	50		 push	 eax
  00093	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DrawIcon@16

; 144  : 	}

  00099	8d 4c 24 1c	 lea	 ecx, DWORD PTR _dc$157366[esp+116]
  0009d	e8 00 00 00 00	 call	 ??1CPaintDC@@UAE@XZ	; CPaintDC::~CPaintDC
  000a2	5f		 pop	 edi
  000a3	5b		 pop	 ebx
  000a4	5e		 pop	 esi

; 148  : 	}
; 149  : }

  000a5	8b 4c 24 64	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+104]
  000a9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ae	83 c4 68	 add	 esp, 104		; 00000068H
  000b1	c3		 ret	 0
$L157365:

; 145  : 	else
; 146  : 	{
; 147  : 		CDialog::OnPaint();

  000b2	8b ce		 mov	 ecx, esi
  000b4	e8 00 00 00 00	 call	 ?OnPaint@CDialog@@IAEXXZ ; CDialog::OnPaint

; 148  : 	}
; 149  : }

  000b9	8b 4c 24 68	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+108]
  000bd	5e		 pop	 esi
  000be	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c3	83 c4 68	 add	 esp, 104		; 00000068H
  000c6	c3		 ret	 0
?OnPaint@CMonitorDlg@@IAEXXZ ENDP			; CMonitorDlg::OnPaint
_TEXT	ENDS
EXTRN	?DeleteDPObject@CDPMng@@QAEHXZ:NEAR		; CDPMng::DeleteDPObject
EXTRN	?OnDestroy@CWnd@@IAEXXZ:NEAR			; CWnd::OnDestroy
EXTRN	?Clear@CMyTreeCtrl@@QAEXXZ:NEAR			; CMyTreeCtrl::Clear
; Function compile flags: /Ogty
;	COMDAT ?OnDestroy@CMonitorDlg@@IAEXXZ
_TEXT	SEGMENT
?OnDestroy@CMonitorDlg@@IAEXXZ PROC NEAR		; CMonitorDlg::OnDestroy, COMDAT
; _this$ = ecx

; 159  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 160  : 	KillTimer( 0 );

  00003	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  00006	6a 00		 push	 0
  00008	50		 push	 eax
  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__KillTimer@8

; 161  : 	CDialog::OnDestroy();

  0000f	8b ce		 mov	 ecx, esi
  00011	e8 00 00 00 00	 call	 ?OnDestroy@CWnd@@IAEXXZ	; CWnd::OnDestroy

; 162  : 
; 163  : 	m_tree.Clear();

  00016	8d 4e 78	 lea	 ecx, DWORD PTR [esi+120]
  00019	e8 00 00 00 00	 call	 ?Clear@CMyTreeCtrl@@QAEXXZ ; CMyTreeCtrl::Clear

; 164  : 
; 165  : 	m_pDPConsoleSrvr->DeleteDPObject();

  0001e	8b 4e 70	 mov	 ecx, DWORD PTR [esi+112]
  00021	e8 00 00 00 00	 call	 ?DeleteDPObject@CDPMng@@QAEHXZ ; CDPMng::DeleteDPObject

; 166  : 	m_pHost->DeleteDPObject();

  00026	8b 4e 74	 mov	 ecx, DWORD PTR [esi+116]
  00029	e8 00 00 00 00	 call	 ?DeleteDPObject@CDPMng@@QAEHXZ ; CDPMng::DeleteDPObject

; 167  : 
; 168  : 	SAFE_DELETE( m_pDPConsoleSrvr );

  0002e	8b 4e 70	 mov	 ecx, DWORD PTR [esi+112]
  00031	85 c9		 test	 ecx, ecx
  00033	74 0d		 je	 SHORT $L157381
  00035	8b 11		 mov	 edx, DWORD PTR [ecx]
  00037	6a 01		 push	 1
  00039	ff 12		 call	 DWORD PTR [edx]
  0003b	c7 46 70 00 00
	00 00		 mov	 DWORD PTR [esi+112], 0
$L157381:

; 169  : 	SAFE_DELETE( m_pHost );

  00042	8b 4e 74	 mov	 ecx, DWORD PTR [esi+116]
  00045	85 c9		 test	 ecx, ecx
  00047	74 0d		 je	 SHORT $L157385
  00049	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004b	6a 01		 push	 1
  0004d	ff 10		 call	 DWORD PTR [eax]
  0004f	c7 46 74 00 00
	00 00		 mov	 DWORD PTR [esi+116], 0
$L157385:
  00056	5e		 pop	 esi

; 170  : }

  00057	c3		 ret	 0
?OnDestroy@CMonitorDlg@@IAEXXZ ENDP			; CMonitorDlg::OnDestroy
_TEXT	ENDS
EXTRN	?ReceiveMessage@CDPMng@@QAEHXZ:NEAR		; CDPMng::ReceiveMessage
; Function compile flags: /Ogty
;	COMDAT ?OnTimer@CMonitorDlg@@IAEXI@Z
_TEXT	SEGMENT
_nIDEvent$ = 8						; size = 4
?OnTimer@CMonitorDlg@@IAEXI@Z PROC NEAR			; CMonitorDlg::OnTimer, COMDAT
; _this$ = ecx

; 198  : 	switch( nIDEvent )

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _nIDEvent$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	75 10		 jne	 SHORT $L157406

; 199  : 	{
; 200  : 		case 0:
; 201  : 			m_pDPConsoleSrvr->ReceiveMessage();

  0000b	8b 4e 70	 mov	 ecx, DWORD PTR [esi+112]
  0000e	e8 00 00 00 00	 call	 ?ReceiveMessage@CDPMng@@QAEHXZ ; CDPMng::ReceiveMessage

; 202  : 			m_pHost->ReceiveMessage();

  00013	8b 4e 74	 mov	 ecx, DWORD PTR [esi+116]
  00016	e8 00 00 00 00	 call	 ?ReceiveMessage@CDPMng@@QAEHXZ ; CDPMng::ReceiveMessage
$L157406:

; 203  : 			break;
; 204  : #ifdef __DB_CHECK
; 205  : 		case 2:
; 206  : 			{
; 207  : 				g_DbManager.CheckDB();
; 208  : 				break;
; 209  : 			}
; 210  : #endif // __DB_CHECK
; 211  : 
; 212  : 		default:	break;
; 213  : 	}
; 214  : 
; 215  : 	CDialog::OnTimer(nIDEvent);

  0001b	8b ce		 mov	 ecx, esi
  0001d	e8 00 00 00 00	 call	 ?Default@CWnd@@IAEJXZ	; CWnd::Default
  00022	5e		 pop	 esi

; 216  : }

  00023	c2 04 00	 ret	 4
?OnTimer@CMonitorDlg@@IAEXI@Z ENDP			; CMonitorDlg::OnTimer
_TEXT	ENDS
PUBLIC	?Compare@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBD@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::Compare
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ?Compare@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBD@Z
_TEXT	SEGMENT
_psz$ = 8						; size = 4
?Compare@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBD@Z PROC NEAR ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::Compare, COMDAT
; _this$ = ecx

; 1088 : 		ATLASSERT( AtlIsValidString( psz ) );
; 1089 : 		return( StringTraits::StringCompare( GetString(), psz ) );

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _psz$[esp-4]
  00004	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00006	50		 push	 eax
  00007	51		 push	 ecx
  00008	e8 00 00 00 00	 call	 __mbscmp
  0000d	83 c4 08	 add	 esp, 8

; 1090 : 	}

  00010	c2 04 00	 ret	 4
?Compare@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBD@Z ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::Compare
_TEXT	ENDS
PUBLIC	??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z ; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT
_pStringMgr$ = 8					; size = 4
??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>, COMDAT
; _this$ = ecx

; 210  : 	explicit CSimpleStringT( IAtlStringMgr* pStringMgr ) throw()

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 211  : 	{
; 212  : 		ATLASSERT( pStringMgr != NULL );
; 213  : 		CStringData* pData = pStringMgr->GetNilString();

  00003	8b 4c 24 08	 mov	 ecx, DWORD PTR _pStringMgr$[esp]
  00007	8b 01		 mov	 eax, DWORD PTR [ecx]
  00009	ff 50 0c	 call	 DWORD PTR [eax+12]

; 214  : 		Attach( pData );

  0000c	83 c0 10	 add	 eax, 16			; 00000010H
  0000f	89 06		 mov	 DWORD PTR [esi], eax

; 215  : 	}

  00011	8b c6		 mov	 eax, esi
  00013	5e		 pop	 esi
  00014	c2 04 00	 ret	 4
??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z ENDP ; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>
_TEXT	ENDS
PUBLIC	??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ		; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>
; Function compile flags: /Ogty
;	COMDAT ??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ PROC NEAR		; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>, COMDAT
; _this$ = ecx

; 263  : 		CStringData* pData = GetData();

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 e8 10	 sub	 eax, 16			; 00000010H

; 264  : 		pData->Release();

  00005	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00008	83 ca ff	 or	 edx, -1
  0000b	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0000f	4a		 dec	 edx
  00010	85 d2		 test	 edx, edx
  00012	7f 08		 jg	 SHORT $L159573
  00014	8b 08		 mov	 ecx, DWORD PTR [eax]
  00016	8b 11		 mov	 edx, DWORD PTR [ecx]
  00018	50		 push	 eax
  00019	ff 52 04	 call	 DWORD PTR [edx+4]
$L159573:

; 265  : 	}

  0001c	c3		 ret	 0
??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ ENDP		; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>
_TEXT	ENDS
PUBLIC	?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ; ATL::CSimpleStringT<char,0>::CloneData
; Function compile flags: /Ogty
;	COMDAT ?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z
_TEXT	SEGMENT
_pData$ = 8						; size = 4
?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::CloneData, COMDAT

; 801  : 	{

  00000	56		 push	 esi

; 802  : 		CStringData* pNewData = NULL;
; 803  : 
; 804  : 		IAtlStringMgr* pNewStringMgr = pData->pStringMgr->Clone();

  00001	8b 74 24 08	 mov	 esi, DWORD PTR _pData$[esp]
  00005	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00007	8b 01		 mov	 eax, DWORD PTR [ecx]
  00009	ff 50 10	 call	 DWORD PTR [eax+16]

; 805  : 		if( !pData->IsLocked() && (pNewStringMgr == pData->pStringMgr) )

  0000c	8b 56 0c	 mov	 edx, DWORD PTR [esi+12]
  0000f	85 d2		 test	 edx, edx
  00011	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  00014	7c 11		 jl	 SHORT $L147704
  00016	3b 06		 cmp	 eax, DWORD PTR [esi]
  00018	75 0d		 jne	 SHORT $L147704

; 806  : 		{
; 807  : 			pNewData = pData;

  0001a	8b c6		 mov	 eax, esi

; 808  : 			pNewData->AddRef();

  0001c	ba 01 00 00 00	 mov	 edx, 1
  00021	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  00025	5e		 pop	 esi

; 819  : 		}
; 820  : 
; 821  : 		return( pNewData );
; 822  : 	}

  00026	c3		 ret	 0
$L147704:

; 809  : 		}
; 810  : 		else
; 811  : 		{
; 812  : 			pNewData = pNewStringMgr->Allocate( pData->nDataLength, sizeof( XCHAR ) );

  00027	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0002a	8b 10		 mov	 edx, DWORD PTR [eax]
  0002c	6a 01		 push	 1
  0002e	51		 push	 ecx
  0002f	8b c8		 mov	 ecx, eax
  00031	ff 12		 call	 DWORD PTR [edx]

; 813  : 			if( pNewData == NULL )

  00033	85 c0		 test	 eax, eax
  00035	75 05		 jne	 SHORT $L147707

; 814  : 			{
; 815  : 				ThrowMemoryException();

  00037	e9 00 00 00 00	 jmp	 ?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<char,0>::ThrowMemoryException
$L147707:

; 816  : 			}
; 817  : 			pNewData->nDataLength = pData->nDataLength;

  0003c	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0003f	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 818  : 			CopyChars( PXSTR( pNewData->data() ), PCXSTR( pData->data() ), pData->nDataLength+1 );  // Copy '\0'

  00042	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00045	41		 inc	 ecx
  00046	8b d1		 mov	 edx, ecx
  00048	57		 push	 edi
  00049	c1 e9 02	 shr	 ecx, 2
  0004c	83 c6 10	 add	 esi, 16			; 00000010H
  0004f	8d 78 10	 lea	 edi, DWORD PTR [eax+16]
  00052	f3 a5		 rep movsd
  00054	8b ca		 mov	 ecx, edx
  00056	83 e1 03	 and	 ecx, 3
  00059	f3 a4		 rep movsb
  0005b	5f		 pop	 edi
  0005c	5e		 pop	 esi

; 819  : 		}
; 820  : 
; 821  : 		return( pNewData );
; 822  : 	}

  0005d	c3		 ret	 0
?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ENDP ; ATL::CSimpleStringT<char,0>::CloneData
_TEXT	ENDS
PUBLIC	??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator==
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z
_TEXT	SEGMENT
_str1$ = 8						; size = 4
_psz2$ = 12						; size = 4
??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z PROC NEAR ; ATL::operator==, COMDAT

; 2088 : 		return( str1.Compare( psz2 ) == 0 );

  00000	8b 4c 24 08	 mov	 ecx, DWORD PTR _psz2$[esp-4]
  00004	8b 44 24 04	 mov	 eax, DWORD PTR _str1$[esp-4]
  00008	8b 00		 mov	 eax, DWORD PTR [eax]
  0000a	51		 push	 ecx
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 __mbscmp
  00011	83 c4 08	 add	 esp, 8
  00014	f7 d8		 neg	 eax
  00016	1b c0		 sbb	 eax, eax
  00018	40		 inc	 eax

; 2089 : 	}

  00019	c3		 ret	 0
??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ENDP ; ATL::operator==
_TEXT	ENDS
PUBLIC	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
; Function compile flags: /Ogty
;	COMDAT ??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ PROC NEAR ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >, COMDAT
; _this$ = ecx

; 796  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ?AfxGetStringManager@@YGPAUIAtlStringMgr@ATL@@XZ ; AfxGetStringManager
  00008	8b 10		 mov	 edx, DWORD PTR [eax]
  0000a	8b c8		 mov	 ecx, eax
  0000c	ff 52 0c	 call	 DWORD PTR [edx+12]
  0000f	83 c0 10	 add	 eax, 16			; 00000010H
  00012	89 06		 mov	 DWORD PTR [esi], eax

; 797  : 	}

  00014	8b c6		 mov	 eax, esi
  00016	5e		 pop	 esi
  00017	c3		 ret	 0
??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
_TEXT	ENDS
PUBLIC	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
; Function compile flags: /Ogty
;	COMDAT ??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ PROC NEAR ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >, COMDAT
; _this$ = ecx

; 963  : 	}

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 e8 10	 sub	 eax, 16			; 00000010H
  00005	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00008	83 ca ff	 or	 edx, -1
  0000b	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0000f	4a		 dec	 edx
  00010	85 d2		 test	 edx, edx
  00012	7f 08		 jg	 SHORT $L159652
  00014	8b 08		 mov	 ecx, DWORD PTR [eax]
  00016	8b 11		 mov	 edx, DWORD PTR [ecx]
  00018	50		 push	 eax
  00019	ff 52 04	 call	 DWORD PTR [edx+4]
$L159652:
  0001c	c3		 ret	 0
??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
_TEXT	ENDS
PUBLIC	??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z	; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z
_TEXT	SEGMENT
_strSrc$ = 8						; size = 4
??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z PROC NEAR	; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>, COMDAT
; _this$ = ecx

; 218  : 	{
; 219  : 		CStringData* pSrcData = strSrc.GetData();

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _strSrc$[esp-4]
  00004	8b 00		 mov	 eax, DWORD PTR [eax]
  00006	56		 push	 esi
  00007	83 e8 10	 sub	 eax, 16			; 00000010H

; 220  : 		CStringData* pNewData = CloneData( pSrcData );

  0000a	50		 push	 eax
  0000b	8b f1		 mov	 esi, ecx
  0000d	e8 00 00 00 00	 call	 ?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ; ATL::CSimpleStringT<char,0>::CloneData

; 221  : 		Attach( pNewData );

  00012	83 c0 10	 add	 eax, 16			; 00000010H
  00015	89 06		 mov	 DWORD PTR [esi], eax
  00017	83 c4 04	 add	 esp, 4

; 222  : 	}

  0001a	8b c6		 mov	 eax, esi
  0001c	5e		 pop	 esi
  0001d	c2 04 00	 ret	 4
??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z ENDP	; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>
_TEXT	ENDS
EXTRN	?HitTest@CTreeCtrl@@QBEPAU_TREEITEM@@VCPoint@@PAI@Z:NEAR ; CTreeCtrl::HitTest
EXTRN	__imp__GetCursorPos@4:NEAR
EXTRN	?GetCheck@CTreeCtrl@@QBEHPAU_TREEITEM@@@Z:NEAR	; CTreeCtrl::GetCheck
EXTRN	?SetCheck@CTreeCtrl@@QAEHPAU_TREEITEM@@H@Z:NEAR	; CTreeCtrl::SetCheck
;	COMDAT xdata$x
xdata$x	SEGMENT
$T159743 DD	0ffffffffH
	DD	FLAT:$L159671
$T159741 DD	019930520H
	DD	01H
	DD	FLAT:$T159743
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\offi src_real\offi src!\monitor\monitordlg.cpp
xdata$x	ENDS
;	COMDAT ?OnClickTree@CMonitorDlg@@IAEXPAUtagNMHDR@@PAJ@Z
_TEXT	SEGMENT
_uFlags$ = -28						; size = 4
_strText$ = -24						; size = 4
_point$ = -20						; size = 8
__$EHRec$ = -12						; size = 12
_pNMHDR$ = 8						; size = 4
_pResult$ = 12						; size = 4
?OnClickTree@CMonitorDlg@@IAEXPAUtagNMHDR@@PAJ@Z PROC NEAR ; CMonitorDlg::OnClickTree, COMDAT
; _this$ = ecx

; 173  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?OnClickTree@CMonitorDlg@@IAEXPAUtagNMHDR@@PAJ@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 10	 sub	 esp, 16			; 00000010H
  00018	53		 push	 ebx
  00019	55		 push	 ebp
  0001a	56		 push	 esi
  0001b	57		 push	 edi
  0001c	8b f1		 mov	 esi, ecx

; 174  : 	HTREEITEM hItem;
; 175  : 	CPoint point;
; 176  : 	TVHITTESTINFO tvht;
; 177  : 	CString strText;

  0001e	e8 00 00 00 00	 call	 ?AfxGetStringManager@@YGPAUIAtlStringMgr@ATL@@XZ ; AfxGetStringManager
  00023	8b 10		 mov	 edx, DWORD PTR [eax]
  00025	8b c8		 mov	 ecx, eax
  00027	ff 52 0c	 call	 DWORD PTR [edx+12]
  0002a	8d 68 10	 lea	 ebp, DWORD PTR [eax+16]
  0002d	89 6c 24 14	 mov	 DWORD PTR _strText$[esp+44], ebp

; 178  : 
; 179  : 	GetCursorPos( &point );

  00031	8d 44 24 18	 lea	 eax, DWORD PTR _point$[esp+44]
  00035	33 ff		 xor	 edi, edi
  00037	50		 push	 eax
  00038	89 7c 24 2c	 mov	 DWORD PTR __$EHRec$[esp+56], edi
  0003c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCursorPos@4

; 180  : 	m_tree.ScreenToClient( (LPPOINT)&point );

  00042	8b 96 94 00 00
	00		 mov	 edx, DWORD PTR [esi+148]
  00048	8d 4c 24 18	 lea	 ecx, DWORD PTR _point$[esp+44]
  0004c	51		 push	 ecx
  0004d	52		 push	 edx
  0004e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ScreenToClient@8

; 181  : 	tvht.pt.x	= point.x;
; 182  : 	tvht.pt.y	= point.y;
; 183  : 
; 184  : 	UINT uFlags	= 0;
; 185  : 	hItem	= m_tree.HitTest( point, &uFlags );

  00054	8b 4c 24 1c	 mov	 ecx, DWORD PTR _point$[esp+48]
  00058	8b 54 24 18	 mov	 edx, DWORD PTR _point$[esp+44]
  0005c	8d 44 24 10	 lea	 eax, DWORD PTR _uFlags$[esp+44]
  00060	50		 push	 eax
  00061	89 7c 24 14	 mov	 DWORD PTR _uFlags$[esp+48], edi
  00065	51		 push	 ecx
  00066	8d 7e 78	 lea	 edi, DWORD PTR [esi+120]
  00069	52		 push	 edx
  0006a	8b cf		 mov	 ecx, edi
  0006c	e8 00 00 00 00	 call	 ?HitTest@CTreeCtrl@@QBEPAU_TREEITEM@@VCPoint@@PAI@Z ; CTreeCtrl::HitTest
  00071	8b d8		 mov	 ebx, eax

; 186  : 
; 187  : 	if( uFlags & TVHT_ONITEMSTATEICON )

  00073	f6 44 24 10 40	 test	 BYTE PTR _uFlags$[esp+44], 64 ; 00000040H
  00078	74 2b		 je	 SHORT $L159711

; 188  : 	{
; 189  : 		m_tree.SetCheck( hItem, !m_tree.GetCheck( hItem ) );	

  0007a	53		 push	 ebx
  0007b	8b cf		 mov	 ecx, edi
  0007d	e8 00 00 00 00	 call	 ?GetCheck@CTreeCtrl@@QBEHPAU_TREEITEM@@@Z ; CTreeCtrl::GetCheck
  00082	f7 d8		 neg	 eax
  00084	1b c0		 sbb	 eax, eax
  00086	40		 inc	 eax
  00087	50		 push	 eax
  00088	53		 push	 ebx
  00089	8b cf		 mov	 ecx, edi
  0008b	e8 00 00 00 00	 call	 ?SetCheck@CTreeCtrl@@QAEHPAU_TREEITEM@@H@Z ; CTreeCtrl::SetCheck

; 190  : 		m_tree.SelectItem( hItem );

  00090	8b 86 94 00 00
	00		 mov	 eax, DWORD PTR [esi+148]
  00096	53		 push	 ebx
  00097	6a 09		 push	 9
  00099	68 0b 11 00 00	 push	 4363			; 0000110bH
  0009e	50		 push	 eax
  0009f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
$L159711:

; 191  : 	}
; 192  : 	
; 193  : 	*pResult = 0;

  000a5	8b 4c 24 34	 mov	 ecx, DWORD PTR _pResult$[esp+40]

; 194  : }

  000a9	8d 45 f0	 lea	 eax, DWORD PTR [ebp-16]
  000ac	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
  000b2	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  000ba	8d 50 0c	 lea	 edx, DWORD PTR [eax+12]
  000bd	83 c9 ff	 or	 ecx, -1
  000c0	f0 0f c1 0a	 lock	  xadd	 DWORD PTR [edx], ecx
  000c4	49		 dec	 ecx
  000c5	85 c9		 test	 ecx, ecx
  000c7	5f		 pop	 edi
  000c8	5e		 pop	 esi
  000c9	5d		 pop	 ebp
  000ca	5b		 pop	 ebx
  000cb	7f 08		 jg	 SHORT $L159738
  000cd	8b 08		 mov	 ecx, DWORD PTR [eax]
  000cf	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d1	50		 push	 eax
  000d2	ff 52 04	 call	 DWORD PTR [edx+4]
$L159738:
  000d5	8b 4c 24 10	 mov	 ecx, DWORD PTR __$EHRec$[esp+28]
  000d9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000e0	83 c4 1c	 add	 esp, 28			; 0000001cH
  000e3	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L159671:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR _strText$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__ehhandler$?OnClickTree@CMonitorDlg@@IAEXPAUtagNMHDR@@PAJ@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T159741
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?OnClickTree@CMonitorDlg@@IAEXPAUtagNMHDR@@PAJ@Z ENDP	; CMonitorDlg::OnClickTree
PUBLIC	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
_TEXT	SEGMENT
_strSrc$ = 8						; size = 4
??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z PROC NEAR ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >, COMDAT
; _this$ = ecx

; 814  : 	{

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _strSrc$[esp-4]
  00004	8b 00		 mov	 eax, DWORD PTR [eax]
  00006	56		 push	 esi
  00007	83 e8 10	 sub	 eax, 16			; 00000010H
  0000a	50		 push	 eax
  0000b	8b f1		 mov	 esi, ecx
  0000d	e8 00 00 00 00	 call	 ?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ; ATL::CSimpleStringT<char,0>::CloneData
  00012	83 c0 10	 add	 eax, 16			; 00000010H
  00015	89 06		 mov	 DWORD PTR [esi], eax
  00017	83 c4 04	 add	 esp, 4

; 815  : 	}

  0001a	8b c6		 mov	 eax, esi
  0001c	5e		 pop	 esi
  0001d	c2 04 00	 ret	 4
??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
_TEXT	ENDS
PUBLIC	?MakeTree@CMonitorDlg@@AAEXPAU_TREEITEM@@AAVCScanner@@@Z ; CMonitorDlg::MakeTree
PUBLIC	??_C@_01HCONENDN@?$HL?$AA@			; `string'
PUBLIC	??_C@_01CELHOKLL@?$HN?$AA@			; `string'
EXTRN	_atoi:NEAR
EXTRN	?AddItem@CMyTreeCtrl@@QAEPAU_TREEITEM@@KPADPAU2@@Z:NEAR ; CMyTreeCtrl::AddItem
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T159925 DD	0ffffffffH
	DD	FLAT:$L159775
$T159920 DD	019930520H
	DD	01H
	DD	FLAT:$T159925
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_01HCONENDN@?$HL?$AA@
CONST	SEGMENT
??_C@_01HCONENDN@?$HL?$AA@ DB '{', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01CELHOKLL@?$HN?$AA@
CONST	SEGMENT
??_C@_01CELHOKLL@?$HN?$AA@ DB '}', 00H			; `string'
; Function compile flags: /Ogty
; File c:\offi src_real\offi src!\monitor\monitordlg.cpp
CONST	ENDS
;	COMDAT ?MakeTree@CMonitorDlg@@AAEXPAU_TREEITEM@@AAVCScanner@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_hParent$ = 8						; size = 4
_str$ = 12						; size = 4
_s$ = 12						; size = 4
?MakeTree@CMonitorDlg@@AAEXPAU_TREEITEM@@AAVCScanner@@@Z PROC NEAR ; CMonitorDlg::MakeTree, COMDAT
; _this$ = ecx

; 101  : {

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?MakeTree@CMonitorDlg@@AAEXPAU_TREEITEM@@AAVCScanner@@@Z
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	53		 push	 ebx
  00016	55		 push	 ebp
  00017	56		 push	 esi

; 102  : 	DWORD dwId	= (DWORD)atoi( s.Token );

  00018	8b 74 24 20	 mov	 esi, DWORD PTR _s$[esp+20]
  0001c	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
  0001f	57		 push	 edi
  00020	50		 push	 eax
  00021	8b f9		 mov	 edi, ecx
  00023	e8 00 00 00 00	 call	 _atoi
  00028	83 c4 04	 add	 esp, 4
  0002b	8b e8		 mov	 ebp, eax

; 103  : 	s.GetToken();

  0002d	8b 06		 mov	 eax, DWORD PTR [esi]
  0002f	6a 00		 push	 0
  00031	8b ce		 mov	 ecx, esi
  00033	ff 50 14	 call	 DWORD PTR [eax+20]

; 104  : 	CString str		= s.Token;

  00036	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
  00039	83 e8 10	 sub	 eax, 16			; 00000010H
  0003c	50		 push	 eax
  0003d	e8 00 00 00 00	 call	 ?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ; ATL::CSimpleStringT<char,0>::CloneData
  00042	8d 58 10	 lea	 ebx, DWORD PTR [eax+16]
  00045	83 c4 04	 add	 esp, 4
  00048	89 5c 24 24	 mov	 DWORD PTR _str$[esp+24], ebx

; 105  : 	HTREEITEM hItem		= m_tree.AddItem( dwId, (LPTSTR)(LPCTSTR)str, hParent );

  0004c	8b 4c 24 20	 mov	 ecx, DWORD PTR _hParent$[esp+24]
  00050	51		 push	 ecx
  00051	53		 push	 ebx
  00052	55		 push	 ebp
  00053	8d 4f 78	 lea	 ecx, DWORD PTR [edi+120]
  00056	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+48], 0
  0005e	e8 00 00 00 00	 call	 ?AddItem@CMyTreeCtrl@@QAEPAU_TREEITEM@@KPADPAU2@@Z ; CMyTreeCtrl::AddItem

; 106  : 	s.GetToken();

  00063	8b 16		 mov	 edx, DWORD PTR [esi]
  00065	6a 00		 push	 0
  00067	8b ce		 mov	 ecx, esi
  00069	8b e8		 mov	 ebp, eax
  0006b	ff 52 14	 call	 DWORD PTR [edx+20]

; 107  : 
; 108  : 	if( s.Token == "{" )

  0006e	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
  00071	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_01HCONENDN@?$HL?$AA@
  00076	50		 push	 eax
  00077	e8 00 00 00 00	 call	 __mbscmp
  0007c	83 c4 08	 add	 esp, 8
  0007f	85 c0		 test	 eax, eax
  00081	75 52		 jne	 SHORT $L157359

; 109  : 	{
; 110  : 		s.GetToken();

  00083	8b 06		 mov	 eax, DWORD PTR [esi]
  00085	6a 00		 push	 0
  00087	8b ce		 mov	 ecx, esi
  00089	ff 50 14	 call	 DWORD PTR [eax+20]
  0008c	8d 64 24 00	 npad	 4
$L157358:

; 111  : 		while( 1 )
; 112  : 		{
; 113  : 			MakeTree( hItem, s );

  00090	56		 push	 esi
  00091	55		 push	 ebp
  00092	8b cf		 mov	 ecx, edi
  00094	e8 00 00 00 00	 call	 ?MakeTree@CMonitorDlg@@AAEXPAU_TREEITEM@@AAVCScanner@@@Z ; CMonitorDlg::MakeTree

; 114  : 			if( s.Token == "}" ) {

  00099	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
  0009c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_01CELHOKLL@?$HN?$AA@
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 __mbscmp
  000a7	83 c4 08	 add	 esp, 8
  000aa	85 c0		 test	 eax, eax
  000ac	75 e2		 jne	 SHORT $L157358

; 115  : 				s.GetToken();

  000ae	8b 16		 mov	 edx, DWORD PTR [esi]
  000b0	50		 push	 eax
  000b1	8b ce		 mov	 ecx, esi
  000b3	ff 52 14	 call	 DWORD PTR [edx+20]

; 116  : 				return;

  000b6	83 c3 f0	 add	 ebx, -16		; fffffff0H
  000b9	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000c1	8d 43 0c	 lea	 eax, DWORD PTR [ebx+12]
  000c4	83 c9 ff	 or	 ecx, -1
  000c7	f0 0f c1 08	 lock	  xadd	 DWORD PTR [eax], ecx
  000cb	49		 dec	 ecx
  000cc	85 c9		 test	 ecx, ecx
  000ce	7f 27		 jg	 SHORT $L159915
  000d0	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  000d2	53		 push	 ebx
  000d3	eb 1d		 jmp	 SHORT $L159924
$L157359:

; 117  : 			}	
; 118  : 		}
; 119  : 	}
; 120  : }

  000d5	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  000d8	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000e0	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000e3	83 ca ff	 or	 edx, -1
  000e6	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000ea	4a		 dec	 edx
  000eb	85 d2		 test	 edx, edx
  000ed	7f 08		 jg	 SHORT $L159915
  000ef	8b 08		 mov	 ecx, DWORD PTR [eax]
  000f1	50		 push	 eax
$L159924:
  000f2	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f4	ff 52 04	 call	 DWORD PTR [edx+4]
$L159915:
  000f7	8b 4c 24 10	 mov	 ecx, DWORD PTR __$EHRec$[esp+28]
  000fb	5f		 pop	 edi
  000fc	5e		 pop	 esi
  000fd	5d		 pop	 ebp
  000fe	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00105	5b		 pop	 ebx
  00106	83 c4 0c	 add	 esp, 12			; 0000000cH
  00109	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L159775:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _str$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__ehhandler$?MakeTree@CMonitorDlg@@AAEXPAU_TREEITEM@@AAVCScanner@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T159920
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?MakeTree@CMonitorDlg@@AAEXPAU_TREEITEM@@AAVCScanner@@@Z ENDP ; CMonitorDlg::MakeTree
PUBLIC	??_C@_0M@BDLCCFDA@monitor?4ini?$AA@		; `string'
EXTRN	?ShowWindow@CWnd@@QAEHH@Z:NEAR			; CWnd::ShowWindow
EXTRN	??2@YAPAXI@Z:NEAR				; operator new
EXTRN	?OnInitDialog@CDialog@@UAEHXZ:NEAR		; CDialog::OnInitDialog
EXTRN	??0CHost@@QAE@PAVCMonitorDlg@@@Z:NEAR		; CHost::CHost
EXTRN	?ModifyStyle@CWnd@@QAEHKKI@Z:NEAR		; CWnd::ModifyStyle
EXTRN	??0CScanner@@QAE@H@Z:NEAR			; CScanner::CScanner
EXTRN	??1CScanner@@UAE@XZ:NEAR			; CScanner::~CScanner
EXTRN	?GetToken@CScanner@@UAEHH@Z:NEAR		; CScanner::GetToken
EXTRN	?Load@CScanner@@QAEHPBDH@Z:NEAR			; CScanner::Load
EXTRN	??0CDPConsoleSrvr@@QAE@PAVCMonitorDlg@@@Z:NEAR	; CDPConsoleSrvr::CDPConsoleSrvr
EXTRN	?GetDlgItem@CWnd@@QBEPAV1@H@Z:NEAR		; CWnd::GetDlgItem
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\afxwin2.inl
xdata$x	SEGMENT
$T159983 DD	0ffffffffH
	DD	FLAT:$L159943
	DD	00H
	DD	FLAT:$L159944
	DD	00H
	DD	FLAT:$L159945
$T159976 DD	019930520H
	DD	03H
	DD	FLAT:$T159983
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0M@BDLCCFDA@monitor?4ini?$AA@
CONST	SEGMENT
??_C@_0M@BDLCCFDA@monitor?4ini?$AA@ DB 'monitor.ini', 00H ; `string'
; Function compile flags: /Ogty
; File c:\offi src_real\offi src!\monitor\monitordlg.cpp
CONST	ENDS
;	COMDAT ?OnInitDialog@CMonitorDlg@@MAEHXZ
_TEXT	SEGMENT
$T159938 = -3160					; size = 4
$T159933 = -3160					; size = 4
_s$ = -3156						; size = 3140
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
?OnInitDialog@CMonitorDlg@@MAEHXZ PROC NEAR		; CMonitorDlg::OnInitDialog, COMDAT
; _this$ = ecx

; 55   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?OnInitDialog@CMonitorDlg@@MAEHXZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	81 ec 4c 0c 00
	00		 sub	 esp, 3148		; 00000c4cH
  0001b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00020	56		 push	 esi
  00021	57		 push	 edi
  00022	89 84 24 50 0c
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+3168], eax
  00029	8b f1		 mov	 esi, ecx

; 56   : 	CDialog::OnInitDialog();

  0002b	e8 00 00 00 00	 call	 ?OnInitDialog@CDialog@@UAEHXZ ; CDialog::OnInitDialog

; 57   : 
; 58   : 	// Set the icon for this dialog.  The framework does this automatically
; 59   : 	//  when the application's main window is not a dialog
; 60   : 	SetIcon(m_hIcon, TRUE);			// Set big icon

  00030	8b 86 e8 08 00
	00		 mov	 eax, DWORD PTR [esi+2280]
  00036	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__SendMessageA@16
  0003c	50		 push	 eax
  0003d	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  00040	6a 01		 push	 1
  00042	68 80 00 00 00	 push	 128			; 00000080H
  00047	50		 push	 eax
  00048	ff d7		 call	 edi

; 61   : 	SetIcon(m_hIcon, FALSE);		// Set small icon

  0004a	8b 86 e8 08 00
	00		 mov	 eax, DWORD PTR [esi+2280]
  00050	8b 4e 1c	 mov	 ecx, DWORD PTR [esi+28]
  00053	50		 push	 eax
  00054	6a 00		 push	 0
  00056	68 80 00 00 00	 push	 128			; 00000080H
  0005b	51		 push	 ecx
  0005c	ff d7		 call	 edi

; 62   : 
; 63   : #ifdef __DB_CHECK
; 64   : 	g_DbManager.m_pMonitorDlg = this;
; 65   : #endif // __DB_CHECK
; 66   : 
; 67   : 	m_tree.ModifyStyle( TVS_CHECKBOXES, 0 );

  0005e	6a 00		 push	 0
  00060	6a 00		 push	 0
  00062	8d 7e 78	 lea	 edi, DWORD PTR [esi+120]
  00065	68 00 01 00 00	 push	 256			; 00000100H
  0006a	8b cf		 mov	 ecx, edi
  0006c	e8 00 00 00 00	 call	 ?ModifyStyle@CWnd@@QAEHKKI@Z ; CWnd::ModifyStyle

; 68   : 	m_tree.ModifyStyle( 0, TVS_CHECKBOXES );

  00071	6a 00		 push	 0
  00073	68 00 01 00 00	 push	 256			; 00000100H
  00078	6a 00		 push	 0
  0007a	8b cf		 mov	 ecx, edi
  0007c	e8 00 00 00 00	 call	 ?ModifyStyle@CWnd@@QAEHKKI@Z ; CWnd::ModifyStyle

; 69   : 
; 70   : 	CScanner s;

  00081	6a 00		 push	 0
  00083	8d 4c 24 10	 lea	 ecx, DWORD PTR _s$[esp+3172]
  00087	e8 00 00 00 00	 call	 ??0CScanner@@QAE@H@Z	; CScanner::CScanner

; 71   : 	HTREEITEM hParent	= TVI_ROOT;
; 72   : 	if( TRUE == s.Load( "monitor.ini" ) )

  0008c	6a 01		 push	 1
  0008e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0M@BDLCCFDA@monitor?4ini?$AA@
  00093	8d 4c 24 14	 lea	 ecx, DWORD PTR _s$[esp+3176]
  00097	c7 84 24 64 0c
	00 00 00 00 00
	00		 mov	 DWORD PTR __$EHRec$[esp+3184], 0
  000a2	e8 00 00 00 00	 call	 ?Load@CScanner@@QAEHPBDH@Z ; CScanner::Load
  000a7	83 f8 01	 cmp	 eax, 1
  000aa	75 3e		 jne	 SHORT $L157327

; 73   : 	{
; 74   : 		s.GetToken();

  000ac	6a 00		 push	 0
  000ae	8d 4c 24 10	 lea	 ecx, DWORD PTR _s$[esp+3172]
  000b2	e8 00 00 00 00	 call	 ?GetToken@CScanner@@UAEHH@Z ; CScanner::GetToken

; 75   : 		while( s.tok != FINISHED )

  000b7	8b 84 24 3c 0c
	00 00		 mov	 eax, DWORD PTR _s$[esp+6288]
  000be	bf 15 00 00 00	 mov	 edi, 21			; 00000015H
  000c3	3b c7		 cmp	 eax, edi
  000c5	74 23		 je	 SHORT $L157327
  000c7	eb 07 8d a4 24
	00 00 00 00	 npad	 9
$L157326:

; 76   : 		{
; 77   : 			MakeTree( TVI_ROOT, s );

  000d0	8d 54 24 0c	 lea	 edx, DWORD PTR _s$[esp+3168]
  000d4	52		 push	 edx
  000d5	68 00 00 ff ff	 push	 -65536			; ffff0000H
  000da	8b ce		 mov	 ecx, esi
  000dc	e8 00 00 00 00	 call	 ?MakeTree@CMonitorDlg@@AAEXPAU_TREEITEM@@AAVCScanner@@@Z ; CMonitorDlg::MakeTree
  000e1	39 bc 24 3c 0c
	00 00		 cmp	 DWORD PTR _s$[esp+6288], edi
  000e8	75 e6		 jne	 SHORT $L157326
$L157327:

; 78   : 		}
; 79   : 	}
; 80   : 
; 81   : 	m_pDPConsoleSrvr	= new CDPConsoleSrvr( this );

  000ea	6a 70		 push	 112			; 00000070H
  000ec	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000f1	83 c4 04	 add	 esp, 4
  000f4	89 44 24 08	 mov	 DWORD PTR $T159933[esp+3168], eax
  000f8	85 c0		 test	 eax, eax
  000fa	c6 84 24 5c 0c
	00 00 01	 mov	 BYTE PTR __$EHRec$[esp+3176], 1
  00102	74 0c		 je	 SHORT $L159934
  00104	56		 push	 esi
  00105	8b c8		 mov	 ecx, eax
  00107	e8 00 00 00 00	 call	 ??0CDPConsoleSrvr@@QAE@PAVCMonitorDlg@@@Z ; CDPConsoleSrvr::CDPConsoleSrvr
  0010c	8b f8		 mov	 edi, eax
  0010e	eb 02		 jmp	 SHORT $L159935
$L159934:
  00110	33 ff		 xor	 edi, edi
$L159935:

; 82   : 	if( FALSE == m_pDPConsoleSrvr->StartServer( PN_MONITOR_1, TRUE ) )

  00112	6a 01		 push	 1
  00114	8b cf		 mov	 ecx, edi
  00116	c6 84 24 60 0c
	00 00 00	 mov	 BYTE PTR __$EHRec$[esp+3180], 0
  0011e	89 7e 70	 mov	 DWORD PTR [esi+112], edi
  00121	e8 00 00 00 00	 call	 ?CreateDPObject@CDPMng@@QAEHH@Z ; CDPMng::CreateDPObject
  00126	85 c0		 test	 eax, eax
  00128	0f 84 82 00 00
	00		 je	 $L159968
  0012e	68 f9 2a 00 00	 push	 11001			; 00002af9H
  00133	6a 00		 push	 0
  00135	8b cf		 mov	 ecx, edi
  00137	e8 00 00 00 00	 call	 ?InitConnection@CDPMng@@QAEHPAXG@Z ; CDPMng::InitConnection
  0013c	85 c0		 test	 eax, eax
  0013e	74 70		 je	 SHORT $L159968
  00140	6a 00		 push	 0
  00142	6a 00		 push	 0
  00144	8b cf		 mov	 ecx, edi
  00146	e8 00 00 00 00	 call	 ?CreateSession@CDPMng@@QAEHPBDW4BUFFER_TYPE@@@Z ; CDPMng::CreateSession
  0014b	85 c0		 test	 eax, eax

; 83   : 		return FALSE;

  0014d	74 61		 je	 SHORT $L159968

; 84   : 	m_pHost		= new CHost( this );

  0014f	6a 70		 push	 112			; 00000070H
  00151	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00156	83 c4 04	 add	 esp, 4
  00159	89 44 24 08	 mov	 DWORD PTR $T159938[esp+3168], eax
  0015d	85 c0		 test	 eax, eax
  0015f	c6 84 24 5c 0c
	00 00 02	 mov	 BYTE PTR __$EHRec$[esp+3176], 2
  00167	74 0c		 je	 SHORT $L159939
  00169	56		 push	 esi
  0016a	8b c8		 mov	 ecx, eax
  0016c	e8 00 00 00 00	 call	 ??0CHost@@QAE@PAVCMonitorDlg@@@Z ; CHost::CHost
  00171	8b f8		 mov	 edi, eax
  00173	eb 02		 jmp	 SHORT $L159940
$L159939:
  00175	33 ff		 xor	 edi, edi
$L159940:

; 85   : 	if( FALSE == m_pHost->StartServer( PN_MONITOR_2, TRUE ) )

  00177	6a 01		 push	 1
  00179	8b cf		 mov	 ecx, edi
  0017b	c6 84 24 60 0c
	00 00 00	 mov	 BYTE PTR __$EHRec$[esp+3180], 0
  00183	89 7e 74	 mov	 DWORD PTR [esi+116], edi
  00186	e8 00 00 00 00	 call	 ?CreateDPObject@CDPMng@@QAEHH@Z ; CDPMng::CreateDPObject
  0018b	85 c0		 test	 eax, eax
  0018d	74 21		 je	 SHORT $L159968
  0018f	68 fa 2a 00 00	 push	 11002			; 00002afaH
  00194	6a 00		 push	 0
  00196	8b cf		 mov	 ecx, edi
  00198	e8 00 00 00 00	 call	 ?InitConnection@CDPMng@@QAEHPAXG@Z ; CDPMng::InitConnection
  0019d	85 c0		 test	 eax, eax
  0019f	74 0f		 je	 SHORT $L159968
  001a1	6a 00		 push	 0
  001a3	6a 00		 push	 0
  001a5	8b cf		 mov	 ecx, edi
  001a7	e8 00 00 00 00	 call	 ?CreateSession@CDPMng@@QAEHPBDW4BUFFER_TYPE@@@Z ; CDPMng::CreateSession
  001ac	85 c0		 test	 eax, eax
  001ae	75 18		 jne	 SHORT $L157340
$L159968:

; 86   : 		return FALSE;

  001b0	8d 4c 24 0c	 lea	 ecx, DWORD PTR _s$[esp+3168]
  001b4	c7 84 24 5c 0c
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+3176], -1
  001bf	e8 00 00 00 00	 call	 ??1CScanner@@UAE@XZ	; CScanner::~CScanner
  001c4	33 c0		 xor	 eax, eax
  001c6	eb 41		 jmp	 SHORT $L157318
$L157340:

; 87   : 
; 88   : 	SetTimer( 0, 1000 * 1, NULL );

  001c8	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  001cb	6a 00		 push	 0
  001cd	68 e8 03 00 00	 push	 1000			; 000003e8H
  001d2	6a 00		 push	 0
  001d4	50		 push	 eax
  001d5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetTimer@16

; 89   : #ifdef __DB_CHECK
; 90   : 	SetTimer( 2, 1000 * g_DbManager.m_Lua.GetGlobalNumber( "CHECK_TIME" ), NULL );
; 91   : #endif // __DB_CHECK
; 92   : 
; 93   : #ifndef __SEND_SMS
; 94   : 	(CButton*)GetDlgItem( IDC_CHECK_SENDSMS )->ShowWindow( SW_HIDE );

  001db	6a 00		 push	 0
  001dd	68 ef 03 00 00	 push	 1007			; 000003efH
  001e2	8b ce		 mov	 ecx, esi
  001e4	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  001e9	8b c8		 mov	 ecx, eax
  001eb	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow

; 95   : #endif // __SEND_SMS
; 96   : 
; 97   : 	return TRUE;  // return TRUE  unless you set the focus to a control

  001f0	8d 4c 24 0c	 lea	 ecx, DWORD PTR _s$[esp+3168]
  001f4	c7 84 24 5c 0c
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+3176], -1
  001ff	e8 00 00 00 00	 call	 ??1CScanner@@UAE@XZ	; CScanner::~CScanner
  00204	b8 01 00 00 00	 mov	 eax, 1
$L157318:

; 98   : }

  00209	8b 8c 24 54 0c
	00 00		 mov	 ecx, DWORD PTR __$EHRec$[esp+3168]
  00210	5f		 pop	 edi
  00211	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00218	8b 8c 24 4c 0c
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+3164]
  0021f	5e		 pop	 esi
  00220	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00225	81 c4 58 0c 00
	00		 add	 esp, 3160		; 00000c58H
  0022b	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L159943:
  00000	8d 8d ac f3 ff
	ff		 lea	 ecx, DWORD PTR _s$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CScanner@@UAE@XZ	; CScanner::~CScanner
$L159944:
  0000b	8b 85 a8 f3 ff
	ff		 mov	 eax, DWORD PTR $T159933[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
  00018	c3		 ret	 0
$L159945:
  00019	8b 85 a8 f3 ff
	ff		 mov	 eax, DWORD PTR $T159938[ebp]
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	59		 pop	 ecx
  00026	c3		 ret	 0
__ehhandler$?OnInitDialog@CMonitorDlg@@MAEHXZ:
  00027	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T159976
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?OnInitDialog@CMonitorDlg@@MAEHXZ ENDP			; CMonitorDlg::OnInitDialog
END
