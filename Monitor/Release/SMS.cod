; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\SMS.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BA@GPHADABN@TRAN_ID?5is?5NULL?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@BEBGHMNM@TRAN_ID?5?$DO?520?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BG@POJDLJNJ@TRAN_PASSWORD?5is?5NULL?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@FMAJMNFM@TRAN_PASSWORD?5?$DO?520?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BJ@PMOMJIOJ@Recieve?5PhoneNum?5is?5NULL?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BG@PAPMMNIH@Recieve?5PhoneNum?5?$DO?515?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BG@JDDBKEKD@Send?5PhoneNum?5is?5NULL?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@LGGJFGMN@Send?5PhoneNum?5?$DO?515?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BC@IAGLCFMM@TRAN_DATE?5is?5NULL?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@LDOGMONF@TRAN_DATE?5?$DO?519?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@NEJLJLF@TRAN_MESSAGE?5is?5NULL?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BC@BOGFMDIL@TRAN_MESSAGE?5?$DO?580?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CA@JLADBIKJ@total_data_len?5?$DO?5LIMIT_DATA_LEN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_02OEPNLDDP@GS?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BM@MJBEGBJ@?$CFs?0?$CFd?0?$CFs?0?$CFs?0?$CFs?0?$CFs?0?$CFd?0?$CFs?0?$CFs?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@IFHKPFMN@sms?4gabia?4com?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BH@KGJGEFEA@gethostbyname?$CI?$CJ?5failed?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@EMFMKLBG@Socket?5Error?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@PGKFKPM@Connect?5Error?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0L@OGECAOH@Send?5Error?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@DINALEFJ@Receive?5error?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@FPFBDGMO@send?5to?5server?5?3?5?$CFs?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??0CSMS@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSMS@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSMS@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?getToken@CSMS@@QAEPADPAPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_packet_info@CSMS@@QAEPADPAD00000AAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMsg@CSMS@@QAEPADPAD00000@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@G@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSMS@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??0CSMS@@QAE@XZ					; CSMS::CSMS
PUBLIC	??_7CSMS@@6B@					; CSMS::`vftable'
PUBLIC	??_GCSMS@@UAEPAXI@Z				; CSMS::`scalar deleting destructor'
EXTRN	??_ECSMS@@UAEPAXI@Z:NEAR			; CSMS::`vector deleting destructor'
;	COMDAT ??_7CSMS@@6B@
; File c:\offi src_real\offi src!\monitor\sms.cpp
CONST	SEGMENT
??_7CSMS@@6B@ DD FLAT:??_ECSMS@@UAEPAXI@Z		; CSMS::`vftable'
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ??0CSMS@@QAE@XZ
_TEXT	SEGMENT
??0CSMS@@QAE@XZ PROC NEAR				; CSMS::CSMS, COMDAT
; _this$ = ecx

; 15   : {

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSMS@@6B@

; 16   : 
; 17   : }

  00008	c3		 ret	 0
??0CSMS@@QAE@XZ ENDP					; CSMS::CSMS
_TEXT	ENDS
PUBLIC	??1CSMS@@UAE@XZ					; CSMS::~CSMS
; Function compile flags: /Ogty
;	COMDAT ??1CSMS@@UAE@XZ
_TEXT	SEGMENT
??1CSMS@@UAE@XZ PROC NEAR				; CSMS::~CSMS, COMDAT
; _this$ = ecx

; 20   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET FLAT:??_7CSMS@@6B@

; 21   : 
; 22   : }

  00006	c3		 ret	 0
??1CSMS@@UAE@XZ ENDP					; CSMS::~CSMS
_TEXT	ENDS
PUBLIC	?getToken@CSMS@@QAEPADPAPAD@Z			; CSMS::getToken
; Function compile flags: /Ogty
;	COMDAT ?getToken@CSMS@@QAEPADPAPAD@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?getToken@CSMS@@QAEPADPAPAD@Z PROC NEAR			; CSMS::getToken, COMDAT
; _this$ = ecx

; 26   : 	char *p0=*p;

  00000	8b 4c 24 04	 mov	 ecx, DWORD PTR _p$[esp-4]
  00004	8b 01		 mov	 eax, DWORD PTR [ecx]
  00006	56		 push	 esi
$L148003:

; 27   : 
; 28   :         while (1)
; 29   : 	                
; 30   : 		switch (**p)

  00007	8b 11		 mov	 edx, DWORD PTR [ecx]
  00009	0f be 32	 movsx	 esi, BYTE PTR [edx]
  0000c	83 fe 0d	 cmp	 esi, 13			; 0000000dH
  0000f	77 0e		 ja	 SHORT $L148012
  00011	0f b6 b6 00 00
	00 00		 movzx	 esi, BYTE PTR $L148149[esi]
  00018	ff 24 b5 00 00
	00 00		 jmp	 DWORD PTR $L148150[esi*4]
$L148012:

; 42   : 				}; 
; 43   : 				
; 44   : 				return p0;
; 45   : 			default:
; 46   : 				(*p)++;

  0001f	42		 inc	 edx
  00020	89 11		 mov	 DWORD PTR [ecx], edx

; 47   : 		};

  00022	eb e3		 jmp	 SHORT $L148003
$L148009:

; 31   : 		{ 
; 32   : 			case '\t': 
; 33   : 			case '\r': 
; 34   : 			case '\n': 
; 35   : 			case '\0': 
; 36   : 				
; 37   : 				if (p0==*p) return NULL;

  00024	8b 11		 mov	 edx, DWORD PTR [ecx]
  00026	3b c2		 cmp	 eax, edx
  00028	5e		 pop	 esi
  00029	75 05		 jne	 SHORT $L148010
  0002b	33 c0		 xor	 eax, eax

; 48   : }

  0002d	c2 04 00	 ret	 4
$L148010:

; 38   : 
; 39   : 				if (**p) {

  00030	80 3a 00	 cmp	 BYTE PTR [edx], 0
  00033	74 05		 je	 SHORT $L148004

; 40   : 					**p='\0';

  00035	c6 02 00	 mov	 BYTE PTR [edx], 0

; 41   : 					(*p)++;

  00038	ff 01		 inc	 DWORD PTR [ecx]
$L148004:

; 48   : }

  0003a	c2 04 00	 ret	 4
  0003d	8d 49 00	 npad	 3
$L148150:
  00040	00 00 00 00	 DD	 $L148009
  00044	00 00 00 00	 DD	 $L148012
$L148149:
  00048	00		 DB	 0
  00049	01		 DB	 1
  0004a	01		 DB	 1
  0004b	01		 DB	 1
  0004c	01		 DB	 1
  0004d	01		 DB	 1
  0004e	01		 DB	 1
  0004f	01		 DB	 1
  00050	01		 DB	 1
  00051	00		 DB	 0
  00052	00		 DB	 0
  00053	01		 DB	 1
  00054	01		 DB	 1
  00055	00		 DB	 0
?getToken@CSMS@@QAEPADPAPAD@Z ENDP			; CSMS::getToken
_TEXT	ENDS
PUBLIC	?get_packet_info@CSMS@@QAEPADPAD00000AAH@Z	; CSMS::get_packet_info
PUBLIC	??_C@_0BA@GPHADABN@TRAN_ID?5is?5NULL?$AA@	; `string'
PUBLIC	??_C@_0N@BEBGHMNM@TRAN_ID?5?$DO?520?$AA@	; `string'
PUBLIC	??_C@_0BG@POJDLJNJ@TRAN_PASSWORD?5is?5NULL?$AA@	; `string'
PUBLIC	??_C@_0BD@FMAJMNFM@TRAN_PASSWORD?5?$DO?520?$AA@	; `string'
PUBLIC	??_C@_0BJ@PMOMJIOJ@Recieve?5PhoneNum?5is?5NULL?$AA@ ; `string'
PUBLIC	??_C@_0BG@PAPMMNIH@Recieve?5PhoneNum?5?$DO?515?$AA@ ; `string'
PUBLIC	??_C@_0BG@JDDBKEKD@Send?5PhoneNum?5is?5NULL?$AA@ ; `string'
PUBLIC	??_C@_0BD@LGGJFGMN@Send?5PhoneNum?5?$DO?515?$AA@ ; `string'
PUBLIC	??_C@_0BC@IAGLCFMM@TRAN_DATE?5is?5NULL?$AA@	; `string'
PUBLIC	??_C@_0P@LDOGMONF@TRAN_DATE?5?$DO?519?$AA@	; `string'
PUBLIC	??_C@_0BF@NEJLJLF@TRAN_MESSAGE?5is?5NULL?$AA@	; `string'
PUBLIC	??_C@_0BC@BOGFMDIL@TRAN_MESSAGE?5?$DO?580?$AA@	; `string'
PUBLIC	??_C@_0CA@JLADBIKJ@total_data_len?5?$DO?5LIMIT_DATA_LEN?$AA@ ; `string'
PUBLIC	??_C@_02OEPNLDDP@GS?$AA@			; `string'
PUBLIC	??_C@_0BM@MJBEGBJ@?$CFs?0?$CFd?0?$CFs?0?$CFs?0?$CFs?0?$CFs?0?$CFd?0?$CFs?0?$CFs?6?$AA@ ; `string'
EXTRN	??_U@YAPAXI@Z:NEAR				; operator new[]
EXTRN	_sprintf:NEAR
;	COMDAT ??_C@_0BA@GPHADABN@TRAN_ID?5is?5NULL?$AA@
CONST	SEGMENT
??_C@_0BA@GPHADABN@TRAN_ID?5is?5NULL?$AA@ DB 'TRAN_ID is NULL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BEBGHMNM@TRAN_ID?5?$DO?520?$AA@
CONST	SEGMENT
??_C@_0N@BEBGHMNM@TRAN_ID?5?$DO?520?$AA@ DB 'TRAN_ID > 20', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@POJDLJNJ@TRAN_PASSWORD?5is?5NULL?$AA@
CONST	SEGMENT
??_C@_0BG@POJDLJNJ@TRAN_PASSWORD?5is?5NULL?$AA@ DB 'TRAN_PASSWORD is NULL'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FMAJMNFM@TRAN_PASSWORD?5?$DO?520?$AA@
CONST	SEGMENT
??_C@_0BD@FMAJMNFM@TRAN_PASSWORD?5?$DO?520?$AA@ DB 'TRAN_PASSWORD > 20', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@PMOMJIOJ@Recieve?5PhoneNum?5is?5NULL?$AA@
CONST	SEGMENT
??_C@_0BJ@PMOMJIOJ@Recieve?5PhoneNum?5is?5NULL?$AA@ DB 'Recieve PhoneNum '
	DB	'is NULL', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@PAPMMNIH@Recieve?5PhoneNum?5?$DO?515?$AA@
CONST	SEGMENT
??_C@_0BG@PAPMMNIH@Recieve?5PhoneNum?5?$DO?515?$AA@ DB 'Recieve PhoneNum '
	DB	'> 15', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@JDDBKEKD@Send?5PhoneNum?5is?5NULL?$AA@
CONST	SEGMENT
??_C@_0BG@JDDBKEKD@Send?5PhoneNum?5is?5NULL?$AA@ DB 'Send PhoneNum is NUL'
	DB	'L', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LGGJFGMN@Send?5PhoneNum?5?$DO?515?$AA@
CONST	SEGMENT
??_C@_0BD@LGGJFGMN@Send?5PhoneNum?5?$DO?515?$AA@ DB 'Send PhoneNum > 15', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@IAGLCFMM@TRAN_DATE?5is?5NULL?$AA@
CONST	SEGMENT
??_C@_0BC@IAGLCFMM@TRAN_DATE?5is?5NULL?$AA@ DB 'TRAN_DATE is NULL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LDOGMONF@TRAN_DATE?5?$DO?519?$AA@
CONST	SEGMENT
??_C@_0P@LDOGMONF@TRAN_DATE?5?$DO?519?$AA@ DB 'TRAN_DATE > 19', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@NEJLJLF@TRAN_MESSAGE?5is?5NULL?$AA@
CONST	SEGMENT
??_C@_0BF@NEJLJLF@TRAN_MESSAGE?5is?5NULL?$AA@ DB 'TRAN_MESSAGE is NULL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BOGFMDIL@TRAN_MESSAGE?5?$DO?580?$AA@
CONST	SEGMENT
??_C@_0BC@BOGFMDIL@TRAN_MESSAGE?5?$DO?580?$AA@ DB 'TRAN_MESSAGE > 80', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@JLADBIKJ@total_data_len?5?$DO?5LIMIT_DATA_LEN?$AA@
CONST	SEGMENT
??_C@_0CA@JLADBIKJ@total_data_len?5?$DO?5LIMIT_DATA_LEN?$AA@ DB 'total_da'
	DB	'ta_len > LIMIT_DATA_LEN', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02OEPNLDDP@GS?$AA@
CONST	SEGMENT
??_C@_02OEPNLDDP@GS?$AA@ DB 'GS', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@MJBEGBJ@?$CFs?0?$CFd?0?$CFs?0?$CFs?0?$CFs?0?$CFs?0?$CFd?0?$CFs?0?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BM@MJBEGBJ@?$CFs?0?$CFd?0?$CFs?0?$CFs?0?$CFs?0?$CFs?0?$CFd?0?$CFs?0?$CFs?6?$AA@ DB '%'
	DB	's,%d,%s,%s,%s,%s,%d,%s,%s', 0aH, 00H	; `string'
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ?get_packet_info@CSMS@@QAEPADPAD00000AAH@Z
_TEXT	SEGMENT
_sendmsg$ = -8						; size = 4
tv192 = -4						; size = 4
_szTranId$ = 8						; size = 4
_szTranPwd$ = 12					; size = 4
_szRcvNum$ = 16						; size = 4
_szSendNum$ = 20					; size = 4
_szDate$ = 24						; size = 4
_szMsg$ = 28						; size = 4
_bResult$ = 32						; size = 4
?get_packet_info@CSMS@@QAEPADPAD00000AAH@Z PROC NEAR	; CSMS::get_packet_info, COMDAT
; _this$ = ecx

; 53   : {

  00000	83 ec 08	 sub	 esp, 8
  00003	53		 push	 ebx
  00004	57		 push	 edi

; 54   : 	CLIENT_DATA	client_data_info;
; 55   : //	char	*tmp;
; 56   : //	char *tTok;
; 57   : 	char *sendmsg;
; 58   : 	int total_data_len = 0;
; 59   : 
; 60   : //	sendmsg = malloc(190);
; 61   : 	sendmsg = new char[190];

  00005	68 be 00 00 00	 push	 190			; 000000beH
  0000a	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  0000f	8b d8		 mov	 ebx, eax

; 62   : 	memset(sendmsg, 0, 190);

  00011	33 c0		 xor	 eax, eax
  00013	b9 2f 00 00 00	 mov	 ecx, 47			; 0000002fH
  00018	8b fb		 mov	 edi, ebx
  0001a	f3 ab		 rep stosd
  0001c	66 ab		 stosw

; 63   : 
; 64   : 	client_data_info.tran_id = szTranId;
; 65   : 	if(client_data_info.tran_id == NULL)

  0001e	8b 44 24 18	 mov	 eax, DWORD PTR _szTranId$[esp+16]
  00022	83 c4 04	 add	 esp, 4
  00025	85 c0		 test	 eax, eax
  00027	89 5c 24 08	 mov	 DWORD PTR _sendmsg$[esp+16], ebx
  0002b	75 37		 jne	 SHORT $L148028

; 66   : 	{
; 67   : 		bResult = FALSE;

  0002d	8b 44 24 2c	 mov	 eax, DWORD PTR _bResult$[esp+12]
  00031	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 68   : 		strcpy( sendmsg, "TRAN_ID is NULL" );

  00037	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ??_C@_0BA@GPHADABN@TRAN_ID?5is?5NULL?$AA@
  0003d	8b cb		 mov	 ecx, ebx
  0003f	89 11		 mov	 DWORD PTR [ecx], edx
  00041	a1 04 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BA@GPHADABN@TRAN_ID?5is?5NULL?$AA@+4
  00046	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00049	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR ??_C@_0BA@GPHADABN@TRAN_ID?5is?5NULL?$AA@+8
  0004f	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  00052	a1 0c 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BA@GPHADABN@TRAN_ID?5is?5NULL?$AA@+12
  00057	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
  0005a	5f		 pop	 edi

; 69   : 		return sendmsg;

  0005b	8b c3		 mov	 eax, ebx
  0005d	5b		 pop	 ebx

; 179  : }

  0005e	83 c4 08	 add	 esp, 8
  00061	c2 1c 00	 ret	 28			; 0000001cH
$L148028:

; 70   : 	}
; 71   : 
; 72   : 	if(strlen(client_data_info.tran_id) > 20)

  00064	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$L148155:
  00067	8a 08		 mov	 cl, BYTE PTR [eax]
  00069	40		 inc	 eax
  0006a	84 c9		 test	 cl, cl
  0006c	75 f9		 jne	 SHORT $L148155
  0006e	2b c2		 sub	 eax, edx
  00070	83 f8 14	 cmp	 eax, 20			; 00000014H
  00073	76 37		 jbe	 SHORT $L148030

; 73   : 	{
; 74   : 		bResult = FALSE;

  00075	8b 4c 24 2c	 mov	 ecx, DWORD PTR _bResult$[esp+12]
  00079	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 75   : 		strcpy( sendmsg, "TRAN_ID > 20" );

  0007f	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_0N@BEBGHMNM@TRAN_ID?5?$DO?520?$AA@
  00084	8b d3		 mov	 edx, ebx
  00086	89 02		 mov	 DWORD PTR [edx], eax
  00088	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_0N@BEBGHMNM@TRAN_ID?5?$DO?520?$AA@+4
  0008e	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00091	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0N@BEBGHMNM@TRAN_ID?5?$DO?520?$AA@+8
  00096	89 42 08	 mov	 DWORD PTR [edx+8], eax
  00099	8a 0d 0c 00 00
	00		 mov	 cl, BYTE PTR ??_C@_0N@BEBGHMNM@TRAN_ID?5?$DO?520?$AA@+12
  0009f	5f		 pop	 edi

; 76   : 		return sendmsg;	}

  000a0	8b c3		 mov	 eax, ebx
  000a2	88 4a 0c	 mov	 BYTE PTR [edx+12], cl
  000a5	5b		 pop	 ebx

; 179  : }

  000a6	83 c4 08	 add	 esp, 8
  000a9	c2 1c 00	 ret	 28			; 0000001cH
$L148030:
  000ac	55		 push	 ebp

; 77   : 
; 78   : 
; 79   : 	client_data_info.tran_passwd = szTranPwd;
; 80   : 	if(client_data_info.tran_passwd == NULL)

  000ad	8b 6c 24 1c	 mov	 ebp, DWORD PTR _szTranPwd$[esp+16]
  000b1	85 ed		 test	 ebp, ebp
  000b3	75 48		 jne	 SHORT $L148032

; 81   : 	{
; 82   : 		bResult = FALSE;

  000b5	8b 54 24 30	 mov	 edx, DWORD PTR _bResult$[esp+16]
  000b9	89 2a		 mov	 DWORD PTR [edx], ebp

; 83   : 		strcpy( sendmsg, "TRAN_PASSWORD is NULL" );

  000bb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_0BG@POJDLJNJ@TRAN_PASSWORD?5is?5NULL?$AA@
  000c1	8b c3		 mov	 eax, ebx
  000c3	89 08		 mov	 DWORD PTR [eax], ecx
  000c5	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR ??_C@_0BG@POJDLJNJ@TRAN_PASSWORD?5is?5NULL?$AA@+4
  000cb	89 50 04	 mov	 DWORD PTR [eax+4], edx
  000ce	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_0BG@POJDLJNJ@TRAN_PASSWORD?5is?5NULL?$AA@+8
  000d4	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  000d7	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR ??_C@_0BG@POJDLJNJ@TRAN_PASSWORD?5is?5NULL?$AA@+12
  000dd	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  000e0	8b 0d 10 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_0BG@POJDLJNJ@TRAN_PASSWORD?5is?5NULL?$AA@+16
  000e6	5d		 pop	 ebp
  000e7	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  000ea	66 8b 15 14 00
	00 00		 mov	 dx, WORD PTR ??_C@_0BG@POJDLJNJ@TRAN_PASSWORD?5is?5NULL?$AA@+20
  000f1	5f		 pop	 edi
  000f2	66 89 50 14	 mov	 WORD PTR [eax+20], dx
  000f6	5b		 pop	 ebx

; 179  : }

  000f7	83 c4 08	 add	 esp, 8
  000fa	c2 1c 00	 ret	 28			; 0000001cH
$L148032:

; 84   : 		return sendmsg;
; 85   : 	}
; 86   : 
; 87   : 	if(strlen(client_data_info.tran_passwd) > 20)

  000fd	8b c5		 mov	 eax, ebp
  000ff	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$L148156:
  00102	8a 08		 mov	 cl, BYTE PTR [eax]
  00104	40		 inc	 eax
  00105	84 c9		 test	 cl, cl
  00107	75 f9		 jne	 SHORT $L148156
  00109	2b c2		 sub	 eax, edx
  0010b	83 f8 14	 cmp	 eax, 20			; 00000014H
  0010e	76 4b		 jbe	 SHORT $L148034

; 88   : 	{
; 89   : 		bResult = FALSE;

  00110	8b 44 24 30	 mov	 eax, DWORD PTR _bResult$[esp+16]
  00114	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 90   : 		strcpy( sendmsg, "TRAN_PASSWORD > 20" );

  0011a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ??_C@_0BD@FMAJMNFM@TRAN_PASSWORD?5?$DO?520?$AA@
  00120	8b cb		 mov	 ecx, ebx
  00122	89 11		 mov	 DWORD PTR [ecx], edx
  00124	a1 04 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BD@FMAJMNFM@TRAN_PASSWORD?5?$DO?520?$AA@+4
  00129	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0012c	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR ??_C@_0BD@FMAJMNFM@TRAN_PASSWORD?5?$DO?520?$AA@+8
  00132	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  00135	a1 0c 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BD@FMAJMNFM@TRAN_PASSWORD?5?$DO?520?$AA@+12
  0013a	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
  0013d	66 8b 15 10 00
	00 00		 mov	 dx, WORD PTR ??_C@_0BD@FMAJMNFM@TRAN_PASSWORD?5?$DO?520?$AA@+16
  00144	66 89 51 10	 mov	 WORD PTR [ecx+16], dx
  00148	a0 12 00 00 00	 mov	 al, BYTE PTR ??_C@_0BD@FMAJMNFM@TRAN_PASSWORD?5?$DO?520?$AA@+18
  0014d	5d		 pop	 ebp
  0014e	88 41 12	 mov	 BYTE PTR [ecx+18], al
  00151	5f		 pop	 edi

; 91   : 		return sendmsg;

  00152	8b c3		 mov	 eax, ebx
  00154	5b		 pop	 ebx

; 179  : }

  00155	83 c4 08	 add	 esp, 8
  00158	c2 1c 00	 ret	 28			; 0000001cH
$L148034:

; 92   : 	}
; 93   : 
; 94   : 
; 95   : 	client_data_info.tran_phone = szRcvNum;
; 96   : 	if(client_data_info.tran_phone == NULL)

  0015b	8b 44 24 20	 mov	 eax, DWORD PTR _szRcvNum$[esp+16]
  0015f	85 c0		 test	 eax, eax
  00161	56		 push	 esi
  00162	75 21		 jne	 SHORT $L148036

; 97   : 	{
; 98   : 		bResult = FALSE;

  00164	8b 4c 24 34	 mov	 ecx, DWORD PTR _bResult$[esp+20]
  00168	89 01		 mov	 DWORD PTR [ecx], eax

; 99   : 		strcpy( sendmsg, "Recieve PhoneNum is NULL" );

  0016a	8b fb		 mov	 edi, ebx
  0016c	b9 06 00 00 00	 mov	 ecx, 6
  00171	be 00 00 00 00	 mov	 esi, OFFSET FLAT:??_C@_0BJ@PMOMJIOJ@Recieve?5PhoneNum?5is?5NULL?$AA@
  00176	f3 a5		 rep movsd
  00178	a4		 movsb
  00179	5e		 pop	 esi
  0017a	5d		 pop	 ebp
  0017b	5f		 pop	 edi

; 100  : 		return sendmsg;

  0017c	8b c3		 mov	 eax, ebx
  0017e	5b		 pop	 ebx

; 179  : }

  0017f	83 c4 08	 add	 esp, 8
  00182	c2 1c 00	 ret	 28			; 0000001cH
$L148036:

; 101  : 	}
; 102  : 
; 103  : 	if(strlen(client_data_info.tran_phone) > 15)

  00185	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$L148157:
  00188	8a 08		 mov	 cl, BYTE PTR [eax]
  0018a	40		 inc	 eax
  0018b	84 c9		 test	 cl, cl
  0018d	75 f9		 jne	 SHORT $L148157
  0018f	2b c2		 sub	 eax, edx
  00191	83 f8 0f	 cmp	 eax, 15			; 0000000fH
  00194	76 4d		 jbe	 SHORT $L148038

; 104  : 	{
; 105  : 		bResult = FALSE;

  00196	8b 54 24 34	 mov	 edx, DWORD PTR _bResult$[esp+20]
  0019a	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0

; 106  : 		strcpy( sendmsg, "Recieve PhoneNum > 15" );

  001a0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_0BG@PAPMMNIH@Recieve?5PhoneNum?5?$DO?515?$AA@
  001a6	8b c3		 mov	 eax, ebx
  001a8	89 08		 mov	 DWORD PTR [eax], ecx
  001aa	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR ??_C@_0BG@PAPMMNIH@Recieve?5PhoneNum?5?$DO?515?$AA@+4
  001b0	89 50 04	 mov	 DWORD PTR [eax+4], edx
  001b3	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_0BG@PAPMMNIH@Recieve?5PhoneNum?5?$DO?515?$AA@+8
  001b9	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  001bc	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR ??_C@_0BG@PAPMMNIH@Recieve?5PhoneNum?5?$DO?515?$AA@+12
  001c2	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  001c5	8b 0d 10 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_0BG@PAPMMNIH@Recieve?5PhoneNum?5?$DO?515?$AA@+16
  001cb	5e		 pop	 esi
  001cc	5d		 pop	 ebp
  001cd	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  001d0	66 8b 15 14 00
	00 00		 mov	 dx, WORD PTR ??_C@_0BG@PAPMMNIH@Recieve?5PhoneNum?5?$DO?515?$AA@+20
  001d7	5f		 pop	 edi
  001d8	66 89 50 14	 mov	 WORD PTR [eax+20], dx
  001dc	5b		 pop	 ebx

; 179  : }

  001dd	83 c4 08	 add	 esp, 8
  001e0	c2 1c 00	 ret	 28			; 0000001cH
$L148038:

; 107  : 		return sendmsg;
; 108  : 	}
; 109  : 
; 110  : 
; 111  : 	client_data_info.tran_callback = szSendNum;
; 112  : 	if(client_data_info.tran_callback == NULL)

  001e3	8b 7c 24 28	 mov	 edi, DWORD PTR _szSendNum$[esp+20]
  001e7	85 ff		 test	 edi, edi
  001e9	75 48		 jne	 SHORT $L148040

; 113  : 	{
; 114  : 		bResult = FALSE;

  001eb	8b 44 24 34	 mov	 eax, DWORD PTR _bResult$[esp+20]
  001ef	89 38		 mov	 DWORD PTR [eax], edi

; 115  : 		strcpy( sendmsg, "Send PhoneNum is NULL" );

  001f1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ??_C@_0BG@JDDBKEKD@Send?5PhoneNum?5is?5NULL?$AA@
  001f7	8b cb		 mov	 ecx, ebx
  001f9	89 11		 mov	 DWORD PTR [ecx], edx
  001fb	a1 04 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BG@JDDBKEKD@Send?5PhoneNum?5is?5NULL?$AA@+4
  00200	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00203	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR ??_C@_0BG@JDDBKEKD@Send?5PhoneNum?5is?5NULL?$AA@+8
  00209	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  0020c	a1 0c 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BG@JDDBKEKD@Send?5PhoneNum?5is?5NULL?$AA@+12
  00211	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
  00214	8b 15 10 00 00
	00		 mov	 edx, DWORD PTR ??_C@_0BG@JDDBKEKD@Send?5PhoneNum?5is?5NULL?$AA@+16
  0021a	5e		 pop	 esi
  0021b	89 51 10	 mov	 DWORD PTR [ecx+16], edx
  0021e	66 a1 14 00 00
	00		 mov	 ax, WORD PTR ??_C@_0BG@JDDBKEKD@Send?5PhoneNum?5is?5NULL?$AA@+20
  00224	5d		 pop	 ebp
  00225	66 89 41 14	 mov	 WORD PTR [ecx+20], ax
  00229	5f		 pop	 edi

; 116  : 		return sendmsg;

  0022a	8b c3		 mov	 eax, ebx
  0022c	5b		 pop	 ebx

; 179  : }

  0022d	83 c4 08	 add	 esp, 8
  00230	c2 1c 00	 ret	 28			; 0000001cH
$L148040:

; 117  : 	}
; 118  : 
; 119  : 	if(strlen(client_data_info.tran_callback) > 15)

  00233	8b c7		 mov	 eax, edi
  00235	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$L148158:
  00238	8a 08		 mov	 cl, BYTE PTR [eax]
  0023a	40		 inc	 eax
  0023b	84 c9		 test	 cl, cl
  0023d	75 f9		 jne	 SHORT $L148158
  0023f	2b c2		 sub	 eax, edx
  00241	83 f8 0f	 cmp	 eax, 15			; 0000000fH
  00244	76 4c		 jbe	 SHORT $L148042

; 120  : 	{
; 121  : 		bResult = FALSE;

  00246	8b 4c 24 34	 mov	 ecx, DWORD PTR _bResult$[esp+20]
  0024a	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 122  : 		strcpy( sendmsg, "Send PhoneNum > 15" );

  00250	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BD@LGGJFGMN@Send?5PhoneNum?5?$DO?515?$AA@
  00255	8b d3		 mov	 edx, ebx
  00257	89 02		 mov	 DWORD PTR [edx], eax
  00259	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_0BD@LGGJFGMN@Send?5PhoneNum?5?$DO?515?$AA@+4
  0025f	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00262	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BD@LGGJFGMN@Send?5PhoneNum?5?$DO?515?$AA@+8
  00267	89 42 08	 mov	 DWORD PTR [edx+8], eax
  0026a	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_0BD@LGGJFGMN@Send?5PhoneNum?5?$DO?515?$AA@+12
  00270	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx
  00273	66 a1 10 00 00
	00		 mov	 ax, WORD PTR ??_C@_0BD@LGGJFGMN@Send?5PhoneNum?5?$DO?515?$AA@+16
  00279	5e		 pop	 esi
  0027a	66 89 42 10	 mov	 WORD PTR [edx+16], ax
  0027e	8a 0d 12 00 00
	00		 mov	 cl, BYTE PTR ??_C@_0BD@LGGJFGMN@Send?5PhoneNum?5?$DO?515?$AA@+18
  00284	5d		 pop	 ebp
  00285	5f		 pop	 edi

; 123  : 		return sendmsg;

  00286	8b c3		 mov	 eax, ebx
  00288	88 4a 12	 mov	 BYTE PTR [edx+18], cl
  0028b	5b		 pop	 ebx

; 179  : }

  0028c	83 c4 08	 add	 esp, 8
  0028f	c2 1c 00	 ret	 28			; 0000001cH
$L148042:

; 124  : 	}
; 125  : 
; 126  : 
; 127  : 	client_data_info.tran_date = szDate;
; 128  : 	if(client_data_info.tran_date == NULL)

  00292	8b 44 24 2c	 mov	 eax, DWORD PTR _szDate$[esp+20]
  00296	85 c0		 test	 eax, eax
  00298	75 40		 jne	 SHORT $L148044

; 129  : 	{
; 130  : 		bResult = FALSE;

  0029a	8b 54 24 34	 mov	 edx, DWORD PTR _bResult$[esp+20]
  0029e	89 02		 mov	 DWORD PTR [edx], eax

; 131  : 		strcpy( sendmsg, "TRAN_DATE is NULL" );

  002a0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_0BC@IAGLCFMM@TRAN_DATE?5is?5NULL?$AA@
  002a6	8b c3		 mov	 eax, ebx
  002a8	89 08		 mov	 DWORD PTR [eax], ecx
  002aa	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR ??_C@_0BC@IAGLCFMM@TRAN_DATE?5is?5NULL?$AA@+4
  002b0	89 50 04	 mov	 DWORD PTR [eax+4], edx
  002b3	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_0BC@IAGLCFMM@TRAN_DATE?5is?5NULL?$AA@+8
  002b9	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  002bc	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR ??_C@_0BC@IAGLCFMM@TRAN_DATE?5is?5NULL?$AA@+12
  002c2	5e		 pop	 esi
  002c3	5d		 pop	 ebp
  002c4	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  002c7	66 8b 0d 10 00
	00 00		 mov	 cx, WORD PTR ??_C@_0BC@IAGLCFMM@TRAN_DATE?5is?5NULL?$AA@+16
  002ce	5f		 pop	 edi
  002cf	66 89 48 10	 mov	 WORD PTR [eax+16], cx
  002d3	5b		 pop	 ebx

; 179  : }

  002d4	83 c4 08	 add	 esp, 8
  002d7	c2 1c 00	 ret	 28			; 0000001cH
$L148044:

; 132  : 		return sendmsg;
; 133  : 	}
; 134  : 
; 135  : 	if(strlen(client_data_info.tran_date) > 19)

  002da	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
  002dd	8d 49 00	 npad	 3
$L148159:
  002e0	8a 08		 mov	 cl, BYTE PTR [eax]
  002e2	40		 inc	 eax
  002e3	84 c9		 test	 cl, cl
  002e5	75 f9		 jne	 SHORT $L148159
  002e7	2b c2		 sub	 eax, edx
  002e9	83 f8 13	 cmp	 eax, 19			; 00000013H
  002ec	76 44		 jbe	 SHORT $L148046

; 136  : 	{
; 137  : 		bResult = FALSE;

  002ee	8b 54 24 34	 mov	 edx, DWORD PTR _bResult$[esp+20]
  002f2	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0

; 138  : 		strcpy( sendmsg, "TRAN_DATE > 19" );

  002f8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_0P@LDOGMONF@TRAN_DATE?5?$DO?519?$AA@
  002fe	8b c3		 mov	 eax, ebx
  00300	89 08		 mov	 DWORD PTR [eax], ecx
  00302	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR ??_C@_0P@LDOGMONF@TRAN_DATE?5?$DO?519?$AA@+4
  00308	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0030b	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_0P@LDOGMONF@TRAN_DATE?5?$DO?519?$AA@+8
  00311	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00314	66 8b 15 0c 00
	00 00		 mov	 dx, WORD PTR ??_C@_0P@LDOGMONF@TRAN_DATE?5?$DO?519?$AA@+12
  0031b	5e		 pop	 esi
  0031c	5d		 pop	 ebp
  0031d	66 89 50 0c	 mov	 WORD PTR [eax+12], dx
  00321	8a 0d 0e 00 00
	00		 mov	 cl, BYTE PTR ??_C@_0P@LDOGMONF@TRAN_DATE?5?$DO?519?$AA@+14
  00327	5f		 pop	 edi
  00328	88 48 0e	 mov	 BYTE PTR [eax+14], cl
  0032b	5b		 pop	 ebx

; 179  : }

  0032c	83 c4 08	 add	 esp, 8
  0032f	c2 1c 00	 ret	 28			; 0000001cH
$L148046:

; 139  : 		return sendmsg;
; 140  : 	}
; 141  : 
; 142  : 
; 143  : 	client_data_info.tran_msg = szMsg;
; 144  : 	if(client_data_info.tran_msg == NULL)

  00332	8b 74 24 30	 mov	 esi, DWORD PTR _szMsg$[esp+20]
  00336	85 f6		 test	 esi, esi
  00338	75 47		 jne	 SHORT $L148048

; 145  : 	{
; 146  : 		bResult = FALSE;

  0033a	8b 54 24 34	 mov	 edx, DWORD PTR _bResult$[esp+20]
  0033e	89 32		 mov	 DWORD PTR [edx], esi

; 147  : 		strcpy( sendmsg, "TRAN_MESSAGE is NULL" );

  00340	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_0BF@NEJLJLF@TRAN_MESSAGE?5is?5NULL?$AA@
  00346	8b c3		 mov	 eax, ebx
  00348	89 08		 mov	 DWORD PTR [eax], ecx
  0034a	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR ??_C@_0BF@NEJLJLF@TRAN_MESSAGE?5is?5NULL?$AA@+4
  00350	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00353	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_0BF@NEJLJLF@TRAN_MESSAGE?5is?5NULL?$AA@+8
  00359	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0035c	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR ??_C@_0BF@NEJLJLF@TRAN_MESSAGE?5is?5NULL?$AA@+12
  00362	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  00365	8b 0d 10 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_0BF@NEJLJLF@TRAN_MESSAGE?5is?5NULL?$AA@+16
  0036b	5e		 pop	 esi
  0036c	5d		 pop	 ebp
  0036d	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00370	8a 15 14 00 00
	00		 mov	 dl, BYTE PTR ??_C@_0BF@NEJLJLF@TRAN_MESSAGE?5is?5NULL?$AA@+20
  00376	5f		 pop	 edi
  00377	88 50 14	 mov	 BYTE PTR [eax+20], dl
  0037a	5b		 pop	 ebx

; 179  : }

  0037b	83 c4 08	 add	 esp, 8
  0037e	c2 1c 00	 ret	 28			; 0000001cH
$L148048:

; 148  : 		return sendmsg;
; 149  : 	}
; 150  : 
; 151  : 
; 152  : 	if(strlen(client_data_info.tran_msg) > 80)

  00381	8b c6		 mov	 eax, esi
  00383	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$L148160:
  00386	8a 08		 mov	 cl, BYTE PTR [eax]
  00388	40		 inc	 eax
  00389	84 c9		 test	 cl, cl
  0038b	75 f9		 jne	 SHORT $L148160
  0038d	2b c2		 sub	 eax, edx
  0038f	83 f8 50	 cmp	 eax, 80			; 00000050H
  00392	76 44		 jbe	 SHORT $L148050

; 153  : 	{
; 154  : 		bResult = FALSE;

  00394	8b 44 24 34	 mov	 eax, DWORD PTR _bResult$[esp+20]
  00398	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 155  : 		strcpy( sendmsg, "TRAN_MESSAGE > 80" );

  0039e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ??_C@_0BC@BOGFMDIL@TRAN_MESSAGE?5?$DO?580?$AA@
  003a4	8b cb		 mov	 ecx, ebx
  003a6	89 11		 mov	 DWORD PTR [ecx], edx
  003a8	a1 04 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BC@BOGFMDIL@TRAN_MESSAGE?5?$DO?580?$AA@+4
  003ad	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  003b0	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR ??_C@_0BC@BOGFMDIL@TRAN_MESSAGE?5?$DO?580?$AA@+8
  003b6	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  003b9	a1 0c 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BC@BOGFMDIL@TRAN_MESSAGE?5?$DO?580?$AA@+12
  003be	5e		 pop	 esi
  003bf	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
  003c2	66 8b 15 10 00
	00 00		 mov	 dx, WORD PTR ??_C@_0BC@BOGFMDIL@TRAN_MESSAGE?5?$DO?580?$AA@+16
  003c9	5d		 pop	 ebp
  003ca	5f		 pop	 edi

; 156  : 		return sendmsg;

  003cb	8b c3		 mov	 eax, ebx
  003cd	66 89 51 10	 mov	 WORD PTR [ecx+16], dx
  003d1	5b		 pop	 ebx

; 179  : }

  003d2	83 c4 08	 add	 esp, 8
  003d5	c2 1c 00	 ret	 28			; 0000001cH
$L148050:

; 157  : 	}
; 158  : 
; 159  : 
; 160  : 	total_data_len = strlen(client_data_info.tran_id)+
; 161  : 		strlen(client_data_info.tran_passwd) + 
; 162  : 		strlen(client_data_info.tran_phone) + 
; 163  : 		strlen(client_data_info.tran_callback) + 
; 164  : 		strlen(client_data_info.tran_date) + 
; 165  : 		strlen(client_data_info.tran_msg) +1 ; 

  003d8	8b 44 24 1c	 mov	 eax, DWORD PTR _szTranId$[esp+20]
  003dc	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
  003df	90		 npad	 1
$L148161:
  003e0	8a 08		 mov	 cl, BYTE PTR [eax]
  003e2	40		 inc	 eax
  003e3	84 c9		 test	 cl, cl
  003e5	75 f9		 jne	 SHORT $L148161
  003e7	2b c2		 sub	 eax, edx
  003e9	89 44 24 14	 mov	 DWORD PTR tv192[esp+24], eax
  003ed	8b c5		 mov	 eax, ebp
  003ef	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$L148162:
  003f2	8a 08		 mov	 cl, BYTE PTR [eax]
  003f4	40		 inc	 eax
  003f5	84 c9		 test	 cl, cl
  003f7	75 f9		 jne	 SHORT $L148162
  003f9	2b c2		 sub	 eax, edx
  003fb	8b e8		 mov	 ebp, eax
  003fd	8b 44 24 24	 mov	 eax, DWORD PTR _szRcvNum$[esp+20]
  00401	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$L148163:
  00404	8a 08		 mov	 cl, BYTE PTR [eax]
  00406	40		 inc	 eax
  00407	84 c9		 test	 cl, cl
  00409	75 f9		 jne	 SHORT $L148163
  0040b	2b c2		 sub	 eax, edx
  0040d	8b d8		 mov	 ebx, eax
  0040f	8b c7		 mov	 eax, edi
  00411	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$L148164:
  00414	8a 08		 mov	 cl, BYTE PTR [eax]
  00416	40		 inc	 eax
  00417	84 c9		 test	 cl, cl
  00419	75 f9		 jne	 SHORT $L148164
  0041b	2b c2		 sub	 eax, edx
  0041d	8b f8		 mov	 edi, eax
  0041f	8b 44 24 2c	 mov	 eax, DWORD PTR _szDate$[esp+20]
  00423	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$L148165:
  00426	8a 08		 mov	 cl, BYTE PTR [eax]
  00428	40		 inc	 eax
  00429	84 c9		 test	 cl, cl
  0042b	75 f9		 jne	 SHORT $L148165
  0042d	2b c2		 sub	 eax, edx
  0042f	8b d0		 mov	 edx, eax
  00431	8b c6		 mov	 eax, esi
  00433	8d 70 01	 lea	 esi, DWORD PTR [eax+1]
$L148166:
  00436	8a 08		 mov	 cl, BYTE PTR [eax]
  00438	40		 inc	 eax
  00439	84 c9		 test	 cl, cl
  0043b	75 f9		 jne	 SHORT $L148166
  0043d	8b 4c 24 14	 mov	 ecx, DWORD PTR tv192[esp+24]
  00441	2b c6		 sub	 eax, esi
  00443	03 c2		 add	 eax, edx
  00445	03 c7		 add	 eax, edi
  00447	03 c3		 add	 eax, ebx
  00449	03 c5		 add	 eax, ebp
  0044b	8d 44 08 01	 lea	 eax, DWORD PTR [eax+ecx+1]

; 166  : 
; 167  : 	if(total_data_len > LIMIT_DATA_LEN)

  0044f	3d aa 00 00 00	 cmp	 eax, 170		; 000000aaH
  00454	7e 26		 jle	 SHORT $L148052

; 168  : 	{
; 169  : 		bResult = FALSE;
; 170  : 		strcpy( sendmsg, "total_data_len > LIMIT_DATA_LEN" );

  00456	8b 44 24 10	 mov	 eax, DWORD PTR _sendmsg$[esp+24]
  0045a	8b 54 24 34	 mov	 edx, DWORD PTR _bResult$[esp+20]
  0045e	b9 08 00 00 00	 mov	 ecx, 8
  00463	be 00 00 00 00	 mov	 esi, OFFSET FLAT:??_C@_0CA@JLADBIKJ@total_data_len?5?$DO?5LIMIT_DATA_LEN?$AA@
  00468	8b f8		 mov	 edi, eax
  0046a	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0
  00470	f3 a5		 rep movsd
  00472	5e		 pop	 esi
  00473	5d		 pop	 ebp
  00474	5f		 pop	 edi
  00475	5b		 pop	 ebx

; 179  : }

  00476	83 c4 08	 add	 esp, 8
  00479	c2 1c 00	 ret	 28			; 0000001cH
$L148052:

; 171  : 		return sendmsg;
; 172  : 	}
; 173  : 
; 174  : 	sprintf(sendmsg, "%s,%d,%s,%s,%s,%s,%d,%s,%s\n",SMS_KEY,total_data_len,client_data_info.tran_id,client_data_info.tran_passwd,
; 175  : 		client_data_info.tran_phone,client_data_info.tran_callback,TRAN_STATUS,client_data_info.tran_date,client_data_info.tran_msg);

  0047c	8b 4c 24 30	 mov	 ecx, DWORD PTR _szMsg$[esp+20]
  00480	8b 54 24 2c	 mov	 edx, DWORD PTR _szDate$[esp+20]
  00484	8b 74 24 10	 mov	 esi, DWORD PTR _sendmsg$[esp+24]
  00488	51		 push	 ecx
  00489	8b 4c 24 2c	 mov	 ecx, DWORD PTR _szSendNum$[esp+24]
  0048d	52		 push	 edx
  0048e	8b 54 24 2c	 mov	 edx, DWORD PTR _szRcvNum$[esp+28]
  00492	6a 01		 push	 1
  00494	51		 push	 ecx
  00495	8b 4c 24 30	 mov	 ecx, DWORD PTR _szTranPwd$[esp+36]
  00499	52		 push	 edx
  0049a	8b 54 24 30	 mov	 edx, DWORD PTR _szTranId$[esp+40]
  0049e	51		 push	 ecx
  0049f	52		 push	 edx
  004a0	50		 push	 eax
  004a1	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_02OEPNLDDP@GS?$AA@
  004a6	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@MJBEGBJ@?$CFs?0?$CFd?0?$CFs?0?$CFs?0?$CFs?0?$CFs?0?$CFd?0?$CFs?0?$CFs?6?$AA@
  004ab	56		 push	 esi
  004ac	e8 00 00 00 00	 call	 _sprintf

; 176  : 
; 177  : 	bResult = TRUE;

  004b1	8b 44 24 60	 mov	 eax, DWORD PTR _bResult$[esp+64]
  004b5	83 c4 2c	 add	 esp, 44			; 0000002cH
  004b8	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 178  : 	return sendmsg;

  004be	8b c6		 mov	 eax, esi
  004c0	5e		 pop	 esi
  004c1	5d		 pop	 ebp
  004c2	5f		 pop	 edi
  004c3	5b		 pop	 ebx

; 179  : }

  004c4	83 c4 08	 add	 esp, 8
  004c7	c2 1c 00	 ret	 28			; 0000001cH
?get_packet_info@CSMS@@QAEPADPAD00000AAH@Z ENDP		; CSMS::get_packet_info
_TEXT	ENDS
PUBLIC	?SendMsg@CSMS@@QAEPADPAD00000@Z			; CSMS::SendMsg
PUBLIC	??_C@_0O@IFHKPFMN@sms?4gabia?4com?$AA@		; `string'
PUBLIC	??_C@_0BH@KGJGEFEA@gethostbyname?$CI?$CJ?5failed?$AA@ ; `string'
PUBLIC	??_C@_0N@EMFMKLBG@Socket?5Error?$AA@		; `string'
PUBLIC	??_C@_0O@PGKFKPM@Connect?5Error?$AA@		; `string'
PUBLIC	??_C@_0L@OGECAOH@Send?5Error?$AA@		; `string'
PUBLIC	??_C@_0O@DINALEFJ@Receive?5error?$AA@		; `string'
PUBLIC	??_C@_0BE@FPFBDGMO@send?5to?5server?5?3?5?$CFs?$AA@ ; `string'
EXTRN	__imp__closesocket@4:NEAR
EXTRN	__imp__connect@12:NEAR
EXTRN	__imp__htons@4:NEAR
EXTRN	__imp__recv@16:NEAR
EXTRN	__imp__sendto@24:NEAR
EXTRN	__imp__socket@12:NEAR
EXTRN	__imp__gethostbyname@4:NEAR
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:NEAR
;	COMDAT ??_C@_0O@IFHKPFMN@sms?4gabia?4com?$AA@
CONST	SEGMENT
??_C@_0O@IFHKPFMN@sms?4gabia?4com?$AA@ DB 'sms.gabia.com', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@KGJGEFEA@gethostbyname?$CI?$CJ?5failed?$AA@
CONST	SEGMENT
??_C@_0BH@KGJGEFEA@gethostbyname?$CI?$CJ?5failed?$AA@ DB 'gethostbyname()'
	DB	' failed', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EMFMKLBG@Socket?5Error?$AA@
CONST	SEGMENT
??_C@_0N@EMFMKLBG@Socket?5Error?$AA@ DB 'Socket Error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PGKFKPM@Connect?5Error?$AA@
CONST	SEGMENT
??_C@_0O@PGKFKPM@Connect?5Error?$AA@ DB 'Connect Error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OGECAOH@Send?5Error?$AA@
CONST	SEGMENT
??_C@_0L@OGECAOH@Send?5Error?$AA@ DB 'Send Error', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DINALEFJ@Receive?5error?$AA@
CONST	SEGMENT
??_C@_0O@DINALEFJ@Receive?5error?$AA@ DB 'Receive error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FPFBDGMO@send?5to?5server?5?3?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0BE@FPFBDGMO@send?5to?5server?5?3?5?$CFs?$AA@ DB 'send to server : '
	DB	'%s', 00H					; `string'
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ?SendMsg@CSMS@@QAEPADPAD00000@Z
_TEXT	SEGMENT
_serv_addr$ = -20					; size = 16
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
_szTranId$ = 8						; size = 4
_szTranPwd$ = 12					; size = 4
_szRcvNum$ = 16						; size = 4
_szSendNum$ = 20					; size = 4
_szDate$ = 24						; size = 4
_bResult$ = 28						; size = 4
_szMsg$ = 28						; size = 4
?SendMsg@CSMS@@QAEPADPAD00000@Z PROC NEAR		; CSMS::SendMsg, COMDAT
; _this$ = ecx

; 183  : {

  00000	83 ec 14	 sub	 esp, 20			; 00000014H
  00003	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00008	53		 push	 ebx
  00009	55		 push	 ebp
  0000a	8b d9		 mov	 ebx, ecx

; 184  : 	struct hostent *hp;
; 185  : 	int n,sock, serv_len;
; 186  : //	int t, clnt_len, msglen, sendmsglen;
; 187  : 	struct sockaddr_in serv_addr;
; 188  : //	struct sockaddr_in clnt_addr;
; 189  : 	server_name = "sms.gabia.com";
; 190  : 	char* szRtnMsg = new char[256];

  0000c	68 00 01 00 00	 push	 256			; 00000100H
  00011	89 44 24 1c	 mov	 DWORD PTR __$ArrayPad$[esp+32], eax
  00015	c7 83 04 02 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+516], OFFSET FLAT:??_C@_0O@IFHKPFMN@sms?4gabia?4com?$AA@
  0001f	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]

; 191  : 	BOOL bResult;
; 192  : 
; 193  : 	clientmsg = get_packet_info( szTranId, szTranPwd, szRcvNum, szSendNum, szDate, szMsg, bResult );

  00024	8b 4c 24 38	 mov	 ecx, DWORD PTR _szMsg$[esp+28]
  00028	8b 54 24 34	 mov	 edx, DWORD PTR _szDate$[esp+28]
  0002c	83 c4 04	 add	 esp, 4
  0002f	8b e8		 mov	 ebp, eax
  00031	8d 44 24 34	 lea	 eax, DWORD PTR _bResult$[esp+24]
  00035	50		 push	 eax
  00036	8b 44 24 30	 mov	 eax, DWORD PTR _szSendNum$[esp+28]
  0003a	51		 push	 ecx
  0003b	8b 4c 24 30	 mov	 ecx, DWORD PTR _szRcvNum$[esp+32]
  0003f	52		 push	 edx
  00040	8b 54 24 30	 mov	 edx, DWORD PTR _szTranPwd$[esp+36]
  00044	50		 push	 eax
  00045	8b 44 24 30	 mov	 eax, DWORD PTR _szTranId$[esp+40]
  00049	51		 push	 ecx
  0004a	52		 push	 edx
  0004b	50		 push	 eax
  0004c	8b cb		 mov	 ecx, ebx
  0004e	e8 00 00 00 00	 call	 ?get_packet_info@CSMS@@QAEPADPAD00000AAH@Z ; CSMS::get_packet_info

; 194  : 	if( !bResult )

  00053	8b 4c 24 34	 mov	 ecx, DWORD PTR _bResult$[esp+24]
  00057	85 c9		 test	 ecx, ecx
  00059	89 83 08 02 00
	00		 mov	 DWORD PTR [ebx+520], eax

; 195  : 		return clientmsg;

  0005f	0f 84 c9 01 00
	00		 je	 $L148091

; 196  : 
; 197  : 	if((hp=gethostbyname(server_name)) == NULL)

  00065	8b 8b 04 02 00
	00		 mov	 ecx, DWORD PTR [ebx+516]
  0006b	56		 push	 esi
  0006c	57		 push	 edi
  0006d	51		 push	 ecx
  0006e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__gethostbyname@4
  00074	8b f0		 mov	 esi, eax
  00076	85 f6		 test	 esi, esi
  00078	75 26		 jne	 SHORT $L148076

; 198  : 	{
; 199  : 		strcpy( szRtnMsg, "gethostbyname() failed" );

  0007a	8b fd		 mov	 edi, ebp
  0007c	b9 05 00 00 00	 mov	 ecx, 5
  00081	be 00 00 00 00	 mov	 esi, OFFSET FLAT:??_C@_0BH@KGJGEFEA@gethostbyname?$CI?$CJ?5failed?$AA@
  00086	f3 a5		 rep movsd
  00088	66 a5		 movsw
  0008a	a4		 movsb
  0008b	5f		 pop	 edi
  0008c	5e		 pop	 esi

; 238  : 		return szRtnMsg;

  0008d	8b c5		 mov	 eax, ebp
  0008f	5d		 pop	 ebp
  00090	5b		 pop	 ebx

; 239  : 	}
; 240  : 	
; 241  : }

  00091	8b 4c 24 10	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+20]
  00095	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0009a	83 c4 14	 add	 esp, 20			; 00000014H
  0009d	c2 18 00	 ret	 24			; 00000018H
$L148076:

; 200  : 		return szRtnMsg;
; 201  : 	}
; 202  : 
; 203  : 	serv_len=sizeof(serv_addr);
; 204  : 	memset((char *)&serv_addr, '\0',serv_len);

  000a0	33 d2		 xor	 edx, edx
  000a2	89 54 24 10	 mov	 DWORD PTR _serv_addr$[esp+36], edx
  000a6	89 54 24 14	 mov	 DWORD PTR _serv_addr$[esp+40], edx
  000aa	89 54 24 18	 mov	 DWORD PTR _serv_addr$[esp+44], edx

; 205  : 	serv_addr.sin_family=AF_INET;
; 206  : 	serv_addr.sin_port=htons(PORTNUM);

  000ae	68 88 13 00 00	 push	 5000			; 00001388H
  000b3	89 54 24 20	 mov	 DWORD PTR _serv_addr$[esp+52], edx
  000b7	66 c7 44 24 14
	02 00		 mov	 WORD PTR _serv_addr$[esp+40], 2
  000be	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__htons@4
  000c4	66 89 44 24 12	 mov	 WORD PTR _serv_addr$[esp+38], ax

; 207  : 	memcpy((char *)&serv_addr.sin_addr, hp->h_addr, hp->h_length);

  000c9	0f bf 4e 0a	 movsx	 ecx, WORD PTR [esi+10]
  000cd	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  000d0	8b 30		 mov	 esi, DWORD PTR [eax]
  000d2	8b d1		 mov	 edx, ecx
  000d4	c1 e9 02	 shr	 ecx, 2
  000d7	8d 7c 24 14	 lea	 edi, DWORD PTR _serv_addr$[esp+40]
  000db	f3 a5		 rep movsd

; 208  : 
; 209  : 	if((sock=socket(AF_INET, SOCK_STREAM, 0)) < 0)

  000dd	6a 00		 push	 0
  000df	8b ca		 mov	 ecx, edx
  000e1	6a 01		 push	 1
  000e3	83 e1 03	 and	 ecx, 3
  000e6	6a 02		 push	 2
  000e8	f3 a4		 rep movsb
  000ea	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__socket@12
  000f0	8b f0		 mov	 esi, eax
  000f2	85 f6		 test	 esi, esi
  000f4	7d 38		 jge	 SHORT $L148080

; 210  : 	{
; 211  : 		strcpy( szRtnMsg, "Socket Error" );

  000f6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_0N@EMFMKLBG@Socket?5Error?$AA@
  000fc	8b c5		 mov	 eax, ebp
  000fe	89 08		 mov	 DWORD PTR [eax], ecx
  00100	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR ??_C@_0N@EMFMKLBG@Socket?5Error?$AA@+4
  00106	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00109	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_0N@EMFMKLBG@Socket?5Error?$AA@+8
  0010f	5f		 pop	 edi
  00110	5e		 pop	 esi
  00111	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00114	8a 15 0c 00 00
	00		 mov	 dl, BYTE PTR ??_C@_0N@EMFMKLBG@Socket?5Error?$AA@+12
  0011a	5d		 pop	 ebp
  0011b	88 50 0c	 mov	 BYTE PTR [eax+12], dl
  0011e	5b		 pop	 ebx

; 239  : 	}
; 240  : 	
; 241  : }

  0011f	8b 4c 24 10	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+20]
  00123	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00128	83 c4 14	 add	 esp, 20			; 00000014H
  0012b	c2 18 00	 ret	 24			; 00000018H
$L148080:

; 212  : 		return szRtnMsg;
; 213  : 	}
; 214  : 
; 215  : 	if(connect(sock, (struct sockaddr *)&serv_addr, sizeof(serv_addr)) <0)

  0012e	6a 10		 push	 16			; 00000010H
  00130	8d 44 24 14	 lea	 eax, DWORD PTR _serv_addr$[esp+40]
  00134	50		 push	 eax
  00135	56		 push	 esi
  00136	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__connect@12
  0013c	85 c0		 test	 eax, eax
  0013e	7d 3a		 jge	 SHORT $L148083

; 216  : 	{
; 217  : 		strcpy( szRtnMsg, "Connect Error" );

  00140	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ??_C@_0O@PGKFKPM@Connect?5Error?$AA@
  00146	8b cd		 mov	 ecx, ebp
  00148	89 11		 mov	 DWORD PTR [ecx], edx
  0014a	a1 04 00 00 00	 mov	 eax, DWORD PTR ??_C@_0O@PGKFKPM@Connect?5Error?$AA@+4
  0014f	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00152	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR ??_C@_0O@PGKFKPM@Connect?5Error?$AA@+8
  00158	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  0015b	66 a1 0c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0O@PGKFKPM@Connect?5Error?$AA@+12
  00161	5f		 pop	 edi
  00162	5e		 pop	 esi
  00163	66 89 41 0c	 mov	 WORD PTR [ecx+12], ax

; 238  : 		return szRtnMsg;

  00167	8b c5		 mov	 eax, ebp
  00169	5d		 pop	 ebp
  0016a	5b		 pop	 ebx

; 239  : 	}
; 240  : 	
; 241  : }

  0016b	8b 4c 24 10	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+20]
  0016f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00174	83 c4 14	 add	 esp, 20			; 00000014H
  00177	c2 18 00	 ret	 24			; 00000018H
$L148083:

; 218  : 		return szRtnMsg;
; 219  : 	}
; 220  : 
; 221  : 	if( sendto(sock, clientmsg, strlen(clientmsg), 0,(struct sockaddr *)&serv_addr, sizeof(struct sockaddr_in)) == -1 )

  0017a	8b 93 08 02 00
	00		 mov	 edx, DWORD PTR [ebx+520]
  00180	8b c2		 mov	 eax, edx
  00182	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
$L148174:
  00185	8a 08		 mov	 cl, BYTE PTR [eax]
  00187	40		 inc	 eax
  00188	84 c9		 test	 cl, cl
  0018a	75 f9		 jne	 SHORT $L148174
  0018c	6a 10		 push	 16			; 00000010H
  0018e	8d 4c 24 14	 lea	 ecx, DWORD PTR _serv_addr$[esp+40]
  00192	51		 push	 ecx
  00193	6a 00		 push	 0
  00195	2b c7		 sub	 eax, edi
  00197	50		 push	 eax
  00198	52		 push	 edx
  00199	56		 push	 esi
  0019a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__sendto@24
  001a0	83 f8 ff	 cmp	 eax, -1
  001a3	75 27		 jne	 SHORT $L148087

; 222  : 	{
; 223  : 		strcpy( szRtnMsg, "Send Error" );

  001a5	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_0L@OGECAOH@Send?5Error?$AA@
  001aa	8b d5		 mov	 edx, ebp
  001ac	89 02		 mov	 DWORD PTR [edx], eax
  001ae	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_0L@OGECAOH@Send?5Error?$AA@+4
  001b4	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  001b7	66 a1 08 00 00
	00		 mov	 ax, WORD PTR ??_C@_0L@OGECAOH@Send?5Error?$AA@+8
  001bd	66 89 42 08	 mov	 WORD PTR [edx+8], ax
  001c1	8a 0d 0a 00 00
	00		 mov	 cl, BYTE PTR ??_C@_0L@OGECAOH@Send?5Error?$AA@+10
  001c7	88 4a 0a	 mov	 BYTE PTR [edx+10], cl

; 224  : 		closesocket( sock );
; 225  : 		return szRtnMsg;

  001ca	eb 57		 jmp	 SHORT $L148181
$L148087:

; 226  : 	}
; 227  :   
; 228  : 	if((n=recv(sock, reply, MAXMSG, 0)) < 0)

  001cc	6a 00		 push	 0
  001ce	68 00 01 00 00	 push	 256			; 00000100H
  001d3	8d 93 04 01 00
	00		 lea	 edx, DWORD PTR [ebx+260]
  001d9	52		 push	 edx
  001da	56		 push	 esi
  001db	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__recv@16
  001e1	85 c0		 test	 eax, eax
  001e3	7d 29		 jge	 SHORT $L148089

; 229  : 	{
; 230  : 		strcpy( szRtnMsg, "Receive error" );

  001e5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_0O@DINALEFJ@Receive?5error?$AA@
  001eb	8b c5		 mov	 eax, ebp
  001ed	89 08		 mov	 DWORD PTR [eax], ecx
  001ef	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR ??_C@_0O@DINALEFJ@Receive?5error?$AA@+4
  001f5	89 50 04	 mov	 DWORD PTR [eax+4], edx
  001f8	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_0O@DINALEFJ@Receive?5error?$AA@+8
  001fe	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00201	66 8b 15 0c 00
	00 00		 mov	 dx, WORD PTR ??_C@_0O@DINALEFJ@Receive?5error?$AA@+12
  00208	66 89 50 0c	 mov	 WORD PTR [eax+12], dx

; 231  : 		closesocket( sock );
; 232  : 		return szRtnMsg;

  0020c	eb 15		 jmp	 SHORT $L148181
$L148089:

; 233  : 	}
; 234  : 	else
; 235  : 	{
; 236  : 		sprintf( szRtnMsg, "send to server : %s", clientmsg );

  0020e	8b 83 08 02 00
	00		 mov	 eax, DWORD PTR [ebx+520]
  00214	50		 push	 eax
  00215	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@FPFBDGMO@send?5to?5server?5?3?5?$CFs?$AA@
  0021a	55		 push	 ebp
  0021b	e8 00 00 00 00	 call	 _sprintf
  00220	83 c4 0c	 add	 esp, 12			; 0000000cH
$L148181:

; 237  : 		closesocket( sock );

  00223	56		 push	 esi
  00224	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__closesocket@4
  0022a	5f		 pop	 edi

; 238  : 		return szRtnMsg;

  0022b	8b c5		 mov	 eax, ebp
  0022d	5e		 pop	 esi
$L148091:

; 239  : 	}
; 240  : 	
; 241  : }

  0022e	8b 4c 24 18	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+28]
  00232	5d		 pop	 ebp
  00233	5b		 pop	 ebx
  00234	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00239	83 c4 14	 add	 esp, 20			; 00000014H
  0023c	c2 18 00	 ret	 24			; 00000018H
?SendMsg@CSMS@@QAEPADPAD00000@Z ENDP			; CSMS::SendMsg
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
; Function compile flags: /Ogty
;	COMDAT ??_GCSMS@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSMS@@UAEPAXI@Z PROC NEAR				; CSMS::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	f6 44 24 04 01	 test	 BYTE PTR ___flags$[esp-4], 1
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx
  00008	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSMS@@6B@
  0000e	74 09		 je	 SHORT $L148188
  00010	56		 push	 esi
  00011	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00016	83 c4 04	 add	 esp, 4
$L148188:
  00019	8b c6		 mov	 eax, esi
  0001b	5e		 pop	 esi
  0001c	c2 04 00	 ret	 4
??_GCSMS@@UAEPAXI@Z ENDP				; CSMS::`scalar deleting destructor'
_TEXT	ENDS
END
