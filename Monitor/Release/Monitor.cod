; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\Monitor.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_09PKKCPLIP@bad?5alloc?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?GetPacketSize@CBuffer2@@UAEKPAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetHeader@CBuffer2@@UAEXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3CBuffer2@@SAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBuffer2@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBuffer2@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsEmpty@CBufferQueue@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetRecvHandle@CDPSock@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CAr@@QAEAAV0@E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CAr@@QAEAAV0@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CAr@@QAEAAV0@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CAr@@QAEAAV0@AAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CAr@@QAEAAV0@AAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CAr@@QAEAAV0@AAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetMessageMap@CMonitorApp@@MBEPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CMonitorApp@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMonitorApp@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMonitorApp@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _$E1
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
;	COMDAT _$E2
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
;	COMDAT ?InitInstance@CMonitorApp@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMonitorDlg@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ExitInstance@CMonitorApp@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$MemPooler@VCClientSock@@@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$MemPooler@VCClientSockE@@@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$MemPooler@VCBuffer@@@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$MemPooler@VCBuffer@@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Alloc@?$MemPooler@VCBuffer@@@@QAEPAVCBuffer@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Free@?$MemPooler@VCBuffer@@@@QAEHPAVCBuffer@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Alloc@?$MemPooler@VCBuffer2@@@@QAEPAVCBuffer2@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Free@?$MemPooler@VCBuffer2@@@@QAEHPAVCBuffer2@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$MemPooler@VCClientSock@@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Alloc@?$MemPooler@VCClientSock@@@@QAEPAVCClientSock@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Free@?$MemPooler@VCClientSock@@@@QAEHPAVCClientSock@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$MemPooler@VCClientSockE@@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Alloc@?$MemPooler@VCClientSockE@@@@QAEPAVCClientSockE@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Free@?$MemPooler@VCClientSockE@@@@QAEHPAVCClientSockE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$list@PAXV?$allocator@PAX@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@?$MemPooler@VCBuffer@@@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Destroy@?$MemPooler@VCBuffer@@@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@?$MemPooler@VCBuffer2@@@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@?$MemPooler@VCClientSock@@@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Destroy@?$MemPooler@VCClientSock@@@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@?$MemPooler@VCClientSockE@@@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Destroy@?$MemPooler@VCClientSockE@@@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$list@PAXV?$allocator@PAX@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$list@PAXV?$allocator@PAX@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?push_back@?$list@PAXV?$allocator@PAX@std@@@std@@QAEXABQAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$list@PAXV?$allocator@PAX@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$list@PAXV?$allocator@PAX@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$list@PAXV?$allocator@PAX@std@@@std@@QBEAAPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$list@PAXV?$allocator@PAX@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$list@PAXV?$allocator@PAX@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Nextnode@?$list@PAXV?$allocator@PAX@std@@@std@@KAAAPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Prevnode@?$list@PAXV?$allocator@PAX@std@@@std@@KAAAPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$list@PAXV?$allocator@PAX@std@@@std@@QAEXViterator@12@ABQAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$list@PAXV?$allocator@PAX@std@@@std@@QAE@PAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$list@PAXV?$allocator@PAX@std@@@std@@QBEABQAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$list@PAXV?$allocator@PAX@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$list@PAXV?$allocator@PAX@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$list@PAXV?$allocator@PAX@std@@@std@@KAAAPAXPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$list@PAXV?$allocator@PAX@std@@@std@@IAEPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@PAU342@0ABQAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Incsize@?$list@PAXV?$allocator@PAX@std@@@std@@IAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$list@PAXV?$allocator@PAX@std@@@std@@QAE@PAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$list@PAXV?$allocator@PAX@std@@@std@@QBEPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$list@PAXV?$allocator@PAX@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@std@@QAE@PAU012@0ABQAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@PAX@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CMyPool@V?$CMyBucket@PAVCClientSock@@@@@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CMyMap@PAVCClientSock@@@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Lookup@?$CMyMap@PAVCClientSock@@@@QAEHKAAPAVCClientSock@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CMyPool@V?$CMyBucket@PAVCClientSockE@@@@@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CMyMap@PAVCClientSockE@@@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Lookup@?$CMyMap@PAVCClientSockE@@@@QAEHKAAPAVCClientSockE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CMyPool@V?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CMyMap@P8CDPMonitor@@AEXAAVCAr@@K@Z@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Lookup@?$CMyMap@P8CDPMonitor@@AEXAAVCAr@@K@Z@@QAEHKAAP8CDPMonitor@@AEXAAVCAr@@K@Z@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@std@@@std@@YAPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@0@IPAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CMyPool@V?$CMyBucket@PAVCClientSock@@@@@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$stack@PAV?$CMyBucket@PAVCClientSock@@@@V?$deque@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CMyMap@PAVCClientSock@@@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CMyPool@V?$CMyBucket@PAVCClientSockE@@@@@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$stack@PAV?$CMyBucket@PAVCClientSockE@@@@V?$deque@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CMyMap@PAVCClientSockE@@@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CMyPool@V?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$stack@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@V?$deque@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CMyMap@P8CDPMonitor@@AEXAAVCAr@@K@Z@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$deque@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$list@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$deque@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$list@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$deque@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$list@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$deque@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$list@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$deque@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$list@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$deque@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$list@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?empty@?$deque@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pop_back@?$deque@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@QAEXPAPAV?$CMyBucket@PAVCClientSock@@@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAPAV?$CMyBucket@PAVCClientSock@@@@@std@@QAEXPAPAPAV?$CMyBucket@PAVCClientSock@@@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAPAV?$CMyBucket@PAVCClientSock@@@@@std@@QAEXPAPAPAV?$CMyBucket@PAVCClientSock@@@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Nextnode@?$list@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Prevnode@?$list@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$list@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?empty@?$deque@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pop_back@?$deque@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@QAEXPAPAV?$CMyBucket@PAVCClientSockE@@@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAPAV?$CMyBucket@PAVCClientSockE@@@@@std@@QAEXPAPAPAV?$CMyBucket@PAVCClientSockE@@@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAPAV?$CMyBucket@PAVCClientSockE@@@@@std@@QAEXPAPAPAV?$CMyBucket@PAVCClientSockE@@@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Nextnode@?$list@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Prevnode@?$list@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$list@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?empty@?$deque@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pop_back@?$deque@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@std@@QAEXPAPAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAPAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@std@@QAEXPAPAPAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAPAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@std@@QAEXPAPAPAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Nextnode@?$list@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Prevnode@?$list@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$list@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_List_nod@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_List_nod@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@QAEXPAPAV?$CMyBucket@PAVCClientSock@@@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@QAEXPAPAV?$CMyBucket@PAVCClientSockE@@@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@std@@QAEXPAPAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_List_nod@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@?$CMyPool@V?$CMyBucket@PAVCClientSock@@@@@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CMyBucket@PAVCClientSock@@@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsEqual@?$CMyBucket@PAVCClientSock@@@@QAEHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@?$CMyPool@V?$CMyBucket@PAVCClientSockE@@@@@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CMyBucket@PAVCClientSockE@@@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsEqual@?$CMyBucket@PAVCClientSockE@@@@QAEHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@?$CMyPool@V?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsEqual@?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@QAEHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAPAV?$CMyBucket@PAVCClientSock@@@@@std@@YAXPAPAPAV?$CMyBucket@PAVCClientSock@@@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAPAV?$CMyBucket@PAVCClientSockE@@@@@std@@YAXPAPAPAV?$CMyBucket@PAVCClientSockE@@@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAPAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@std@@YAXPAPAPAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_List_nod@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAV?$CMyBucket@PAVCClientSock@@@@@std@@YAXPAPAV?$CMyBucket@PAVCClientSock@@@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@YAXPAPAV?$CMyBucket@PAVCClientSockE@@@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@std@@YAXPAPAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_List_nod@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CMyBucket@PAVCClientSock@@@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CMyBucket@PAVCClientSockE@@@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?empty@?$stack@PAV?$CMyBucket@PAVCClientSock@@@@V?$deque@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pop@?$stack@PAV?$CMyBucket@PAVCClientSock@@@@V?$deque@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$list@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$list@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?empty@?$stack@PAV?$CMyBucket@PAVCClientSockE@@@@V?$deque@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pop@?$stack@PAV?$CMyBucket@PAVCClientSockE@@@@V?$deque@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$list@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$list@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?empty@?$stack@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@V?$deque@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@std@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pop@?$stack@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@V?$deque@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$list@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$list@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$list@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@QBEAAPAV?$CMyBucket@PAVCClientSock@@@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$list@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$list@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$list@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@QBEAAPAV?$CMyBucket@PAVCClientSockE@@@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$list@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$list@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$list@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@std@@@std@@QBEAAPAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$list@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$list@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$list@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$list@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@QBEABQAV?$CMyBucket@PAVCClientSock@@@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$list@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$list@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$list@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$list@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@QBEABQAV?$CMyBucket@PAVCClientSockE@@@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$list@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$list@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$list@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$list@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@std@@@std@@QBEABQAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$list@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$list@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$list@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@KAAAPAV?$CMyBucket@PAVCClientSock@@@@PAU_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$list@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@KAAAPAV?$CMyBucket@PAVCClientSockE@@@@PAU_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$list@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@std@@@std@@KAAAPAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@PAU_Node@?$_List_nod@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$list@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSock@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSock@@@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$list@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAV?$CMyBucket@PAVCClientSockE@@@@V?$allocator@PAV?$CMyBucket@PAVCClientSockE@@@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$list@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@V?$allocator@PAV?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CMyBucket@PAVCClientSockE@@@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CMyBucket@PAVCClientSock@@@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CMyMap@P8CDPMonitor@@AEXAAVCAr@@K@Z@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CMyPool@V?$CMyBucket@P8CDPMonitor@@AEXAAVCAr@@K@Z@@@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CMyMap@PAVCClientSockE@@@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CMyPool@V?$CMyBucket@PAVCClientSockE@@@@@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?IDHash@@YAKKI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMclCritSec@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CMclCritSec@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCMclCritSec@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7?$CMyMap@PAVCClientSock@@@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CMyPool@V?$CMyBucket@PAVCClientSock@@@@@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@G@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Enable3dControlsStatic@CWinApp@@IAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3CObject@@SGXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CMonitorApp@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_messageEntries@CMonitorApp@@0QBUAFX_MSGMAP_ENTRY@@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?messageMap@CMonitorApp@@1UAFX_MSGMAP@@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??1CMclAutoLock@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Leave@CMclCritSec@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CMclAutoLock@@QAE@AAVCMclCritSec@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Enter@CMclCritSec@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CBuffer2@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0CTime@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?_messageEntries@CMonitorApp@@0QBUAFX_MSGMAP_ENTRY@@B ; CMonitorApp::_messageEntries
PUBLIC	?messageMap@CMonitorApp@@1UAFX_MSGMAP@@B	; CMonitorApp::messageMap
EXTRN	?OnHelp@CWinApp@@IAEXXZ:NEAR			; CWinApp::OnHelp
EXTRN	?messageMap@CWinApp@@1UAFX_MSGMAP@@B:QWORD	; CWinApp::messageMap
;	COMDAT ?_messageEntries@CMonitorApp@@0QBUAFX_MSGMAP_ENTRY@@B
CONST	SEGMENT
?_messageEntries@CMonitorApp@@0QBUAFX_MSGMAP_ENTRY@@B DD 0111H ; CMonitorApp::_messageEntries
	DD	00H
	DD	0e146H
	DD	0e146H
	DD	035H
	DD	FLAT:?OnHelp@CWinApp@@IAEXXZ
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?messageMap@CMonitorApp@@1UAFX_MSGMAP@@B
CONST	SEGMENT
?messageMap@CMonitorApp@@1UAFX_MSGMAP@@B DD FLAT:?messageMap@CWinApp@@1UAFX_MSGMAP@@B ; CMonitorApp::messageMap
	DD	FLAT:?_messageEntries@CMonitorApp@@0QBUAFX_MSGMAP_ENTRY@@B
CONST	ENDS
PUBLIC	?GetMessageMap@CMonitorApp@@MBEPBUAFX_MSGMAP@@XZ ; CMonitorApp::GetMessageMap
; Function compile flags: /Ogty
; File c:\offi src_real\offi src!\monitor\monitor.cpp
;	COMDAT ?GetMessageMap@CMonitorApp@@MBEPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
?GetMessageMap@CMonitorApp@@MBEPBUAFX_MSGMAP@@XZ PROC NEAR ; CMonitorApp::GetMessageMap, COMDAT
; _this$ = ecx

; 12   : BEGIN_MESSAGE_MAP(CMonitorApp, CWinApp)

  00000	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?messageMap@CMonitorApp@@1UAFX_MSGMAP@@B ; CMonitorApp::messageMap
  00005	c3		 ret	 0
?GetMessageMap@CMonitorApp@@MBEPBUAFX_MSGMAP@@XZ ENDP	; CMonitorApp::GetMessageMap
_TEXT	ENDS
PUBLIC	??0CMonitorApp@@QAE@XZ				; CMonitorApp::CMonitorApp
PUBLIC	?InitInstance@CMonitorApp@@UAEHXZ		; CMonitorApp::InitInstance
PUBLIC	?ExitInstance@CMonitorApp@@UAEHXZ		; CMonitorApp::ExitInstance
PUBLIC	??_7CMonitorApp@@6B@				; CMonitorApp::`vftable'
PUBLIC	??_GCMonitorApp@@UAEPAXI@Z			; CMonitorApp::`scalar deleting destructor'
PUBLIC	?Serialize@CObject@@UAEXAAVCArchive@@@Z		; CObject::Serialize
EXTRN	??_ECMonitorApp@@UAEPAXI@Z:NEAR			; CMonitorApp::`vector deleting destructor'
EXTRN	?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:NEAR ; CCmdTarget::OnCmdMsg
EXTRN	?OnFinalRelease@CCmdTarget@@UAEXXZ:NEAR		; CCmdTarget::OnFinalRelease
EXTRN	?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z:NEAR	; CCmdTarget::IsInvokeAllowed
EXTRN	?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z:NEAR ; CCmdTarget::GetDispatchIID
EXTRN	?GetTypeInfoCount@CCmdTarget@@UAEIXZ:NEAR	; CCmdTarget::GetTypeInfoCount
EXTRN	?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ:NEAR ; CCmdTarget::GetTypeLibCache
EXTRN	?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z:NEAR ; CCmdTarget::GetTypeLib
EXTRN	?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ:NEAR ; CCmdTarget::GetCommandMap
EXTRN	?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ:NEAR ; CCmdTarget::GetDispatchMap
EXTRN	?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ:NEAR ; CCmdTarget::GetConnectionMap
EXTRN	?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ:NEAR ; CCmdTarget::GetInterfaceMap
EXTRN	?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ:NEAR ; CCmdTarget::GetEventSinkMap
EXTRN	?OnCreateAggregates@CCmdTarget@@UAEHXZ:NEAR	; CCmdTarget::OnCreateAggregates
EXTRN	?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z:NEAR ; CCmdTarget::GetInterfaceHook
EXTRN	?PreTranslateMessage@CWinThread@@UAEHPAUtagMSG@@@Z:NEAR ; CWinThread::PreTranslateMessage
EXTRN	?PumpMessage@CWinThread@@UAEHXZ:NEAR		; CWinThread::PumpMessage
EXTRN	?IsIdleMessage@CWinThread@@UAEHPAUtagMSG@@@Z:NEAR ; CWinThread::IsIdleMessage
EXTRN	?ProcessMessageFilter@CWinThread@@UAEHHPAUtagMSG@@@Z:NEAR ; CWinThread::ProcessMessageFilter
EXTRN	?GetMainWnd@CWinThread@@UAEPAVCWnd@@XZ:NEAR	; CWinThread::GetMainWnd
EXTRN	?Delete@CWinThread@@UAEXXZ:NEAR			; CWinThread::Delete
EXTRN	?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z:NEAR ; CCmdTarget::GetExtraConnectionPoints
EXTRN	?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z:NEAR ; CCmdTarget::GetConnectionHook
EXTRN	?GetRuntimeClass@CWinApp@@UBEPAUCRuntimeClass@@XZ:NEAR ; CWinApp::GetRuntimeClass
EXTRN	??0CWinApp@@QAE@PBD@Z:NEAR			; CWinApp::CWinApp
EXTRN	?InitLibId@CWinApp@@UAEXXZ:NEAR			; CWinApp::InitLibId
EXTRN	?Register@CWinApp@@UAEHXZ:NEAR			; CWinApp::Register
EXTRN	?Unregister@CWinApp@@UAEHXZ:NEAR		; CWinApp::Unregister
EXTRN	?OpenDocumentFile@CWinApp@@UAEPAVCDocument@@PBD@Z:NEAR ; CWinApp::OpenDocumentFile
EXTRN	?AddToRecentFileList@CWinApp@@UAEXPBD@Z:NEAR	; CWinApp::AddToRecentFileList
EXTRN	?InitApplication@CWinApp@@UAEHXZ:NEAR		; CWinApp::InitApplication
EXTRN	?SaveAllModified@CWinApp@@UAEHXZ:NEAR		; CWinApp::SaveAllModified
EXTRN	?DoMessageBox@CWinApp@@UAEHPBDII@Z:NEAR		; CWinApp::DoMessageBox
EXTRN	?DoWaitCursor@CWinApp@@UAEXH@Z:NEAR		; CWinApp::DoWaitCursor
EXTRN	?OnDDECommand@CWinApp@@UAEHPAD@Z:NEAR		; CWinApp::OnDDECommand
EXTRN	?WinHelpA@CWinApp@@UAEXKI@Z:NEAR		; CWinApp::WinHelpA
EXTRN	?HtmlHelpA@CWinApp@@UAEXKI@Z:NEAR		; CWinApp::HtmlHelpA
EXTRN	?WinHelpInternal@CWinApp@@UAEXKI@Z:NEAR		; CWinApp::WinHelpInternal
EXTRN	?Run@CWinApp@@UAEHXZ:NEAR			; CWinApp::Run
EXTRN	?OnIdle@CWinApp@@UAEHJ@Z:NEAR			; CWinApp::OnIdle
EXTRN	?ProcessWndProcException@CWinApp@@UAEJPAVCException@@PBUtagMSG@@@Z:NEAR ; CWinApp::ProcessWndProcException
EXTRN	?LoadAppLangResourceDLL@CWinApp@@UAEPAUHINSTANCE__@@XZ:NEAR ; CWinApp::LoadAppLangResourceDLL
EXTRN	?LoadSysPolicies@CWinApp@@UAEHXZ:NEAR		; CWinApp::LoadSysPolicies
;	COMDAT ??_7CMonitorApp@@6B@
CONST	SEGMENT
??_7CMonitorApp@@6B@ DD FLAT:?GetRuntimeClass@CWinApp@@UBEPAUCRuntimeClass@@XZ ; CMonitorApp::`vftable'
	DD	FLAT:??_ECMonitorApp@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CCmdTarget@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CMonitorApp@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?InitInstance@CMonitorApp@@UAEHXZ
	DD	FLAT:?Run@CWinApp@@UAEHXZ
	DD	FLAT:?PreTranslateMessage@CWinThread@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?PumpMessage@CWinThread@@UAEHXZ
	DD	FLAT:?OnIdle@CWinApp@@UAEHJ@Z
	DD	FLAT:?IsIdleMessage@CWinThread@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?ExitInstance@CMonitorApp@@UAEHXZ
	DD	FLAT:?ProcessWndProcException@CWinApp@@UAEJPAVCException@@PBUtagMSG@@@Z
	DD	FLAT:?ProcessMessageFilter@CWinThread@@UAEHHPAUtagMSG@@@Z
	DD	FLAT:?GetMainWnd@CWinThread@@UAEPAVCWnd@@XZ
	DD	FLAT:?Delete@CWinThread@@UAEXXZ
	DD	FLAT:?InitLibId@CWinApp@@UAEXXZ
	DD	FLAT:?Register@CWinApp@@UAEHXZ
	DD	FLAT:?Unregister@CWinApp@@UAEHXZ
	DD	FLAT:?OpenDocumentFile@CWinApp@@UAEPAVCDocument@@PBD@Z
	DD	FLAT:?AddToRecentFileList@CWinApp@@UAEXPBD@Z
	DD	FLAT:?InitApplication@CWinApp@@UAEHXZ
	DD	FLAT:?SaveAllModified@CWinApp@@UAEHXZ
	DD	FLAT:?DoMessageBox@CWinApp@@UAEHPBDII@Z
	DD	FLAT:?DoWaitCursor@CWinApp@@UAEXH@Z
	DD	FLAT:?OnDDECommand@CWinApp@@UAEHPAD@Z
	DD	FLAT:?WinHelpA@CWinApp@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWinApp@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWinApp@@UAEXKI@Z
	DD	FLAT:?LoadAppLangResourceDLL@CWinApp@@UAEPAUHINSTANCE__@@XZ
	DD	FLAT:?LoadSysPolicies@CWinApp@@UAEHXZ
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ??0CMonitorApp@@QAE@XZ
_TEXT	SEGMENT
??0CMonitorApp@@QAE@XZ PROC NEAR			; CMonitorApp::CMonitorApp, COMDAT
; _this$ = ecx

; 24   : {

  00000	56		 push	 esi
  00001	6a 00		 push	 0
  00003	8b f1		 mov	 esi, ecx
  00005	e8 00 00 00 00	 call	 ??0CWinApp@@QAE@PBD@Z	; CWinApp::CWinApp
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CMonitorApp@@6B@

; 25   : 	// TODO: add construction code here,
; 26   : 	// Place all significant initialization in InitInstance
; 27   : }

  00010	8b c6		 mov	 eax, esi
  00012	5e		 pop	 esi
  00013	c3		 ret	 0
??0CMonitorApp@@QAE@XZ ENDP				; CMonitorApp::CMonitorApp
_TEXT	ENDS
PUBLIC	??1CMonitorApp@@UAE@XZ				; CMonitorApp::~CMonitorApp
EXTRN	??1CWinApp@@UAE@XZ:NEAR				; CWinApp::~CWinApp
; Function compile flags: /Ogty
;	COMDAT ??1CMonitorApp@@UAE@XZ
_TEXT	SEGMENT
??1CMonitorApp@@UAE@XZ PROC NEAR			; CMonitorApp::~CMonitorApp, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CWinApp@@UAE@XZ	; CWinApp::~CWinApp
??1CMonitorApp@@UAE@XZ ENDP				; CMonitorApp::~CMonitorApp
_TEXT	ENDS
PUBLIC	??1CMonitorDlg@@UAE@XZ				; CMonitorDlg::~CMonitorDlg
EXTRN	??1CDialog@@UAE@XZ:NEAR				; CDialog::~CDialog
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
EXTRN	??1CMyTreeCtrl@@UAE@XZ:NEAR			; CMyTreeCtrl::~CMyTreeCtrl
;	COMDAT xdata$x
xdata$x	SEGMENT
$T158040 DD	0ffffffffH
	DD	FLAT:$L158032
$T158037 DD	019930520H
	DD	01H
	DD	FLAT:$T158040
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ??1CMonitorDlg@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CMonitorDlg@@UAE@XZ PROC NEAR			; CMonitorDlg::~CMonitorDlg, COMDAT
; _this$ = ecx
  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??1CMonitorDlg@@UAE@XZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	89 74 24 04	 mov	 DWORD PTR _this$[esp+20], esi
  0001d	8d 4e 78	 lea	 ecx, DWORD PTR [esi+120]
  00020	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+28], 0
  00028	e8 00 00 00 00	 call	 ??1CMyTreeCtrl@@UAE@XZ	; CMyTreeCtrl::~CMyTreeCtrl
  0002d	8b ce		 mov	 ecx, esi
  0002f	c7 44 24 10 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+28], -1
  00037	e8 00 00 00 00	 call	 ??1CDialog@@UAE@XZ	; CDialog::~CDialog
  0003c	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00040	5e		 pop	 esi
  00041	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00048	83 c4 10	 add	 esp, 16			; 00000010H
  0004b	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L158032:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CDialog@@UAE@XZ	; CDialog::~CDialog
__ehhandler$??1CMonitorDlg@@UAE@XZ:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T158037
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1CMonitorDlg@@UAE@XZ ENDP				; CMonitorDlg::~CMonitorDlg
PUBLIC	?_Nextnode@?$list@PAXV?$allocator@PAX@std@@@std@@KAAAPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@PAU342@@Z ; std::list<void *,std::allocator<void *> >::_Nextnode
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\list
;	COMDAT ?_Nextnode@?$list@PAXV?$allocator@PAX@std@@@std@@KAAAPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Nextnode@?$list@PAXV?$allocator@PAX@std@@@std@@KAAAPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@PAU342@@Z PROC NEAR ; std::list<void *,std::allocator<void *> >::_Nextnode, COMDAT

; 108  : 		return ((_Nodepref)(*_Pnode)._Next);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 109  : 		}

  00004	c3		 ret	 0
?_Nextnode@?$list@PAXV?$allocator@PAX@std@@@std@@KAAAPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@PAU342@@Z ENDP ; std::list<void *,std::allocator<void *> >::_Nextnode
_TEXT	ENDS
PUBLIC	?_Prevnode@?$list@PAXV?$allocator@PAX@std@@@std@@KAAAPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@PAU342@@Z ; std::list<void *,std::allocator<void *> >::_Prevnode
; Function compile flags: /Ogty
;	COMDAT ?_Prevnode@?$list@PAXV?$allocator@PAX@std@@@std@@KAAAPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Prevnode@?$list@PAXV?$allocator@PAX@std@@@std@@KAAAPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@PAU342@@Z PROC NEAR ; std::list<void *,std::allocator<void *> >::_Prevnode, COMDAT

; 113  : 		return ((_Nodepref)(*_Pnode)._Prev);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 114  : 		}

  00007	c3		 ret	 0
?_Prevnode@?$list@PAXV?$allocator@PAX@std@@@std@@KAAAPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@PAU342@@Z ENDP ; std::list<void *,std::allocator<void *> >::_Prevnode
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@I@Z ; std::allocator<std::_List_nod<void *,std::allocator<void *> >::_Node>::deallocate
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?deallocate@?$allocator@U_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@I@Z PROC NEAR ; std::allocator<std::_List_nod<void *,std::allocator<void *> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@I@Z ENDP ; std::allocator<std::_List_nod<void *,std::allocator<void *> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$list@PAXV?$allocator@PAX@std@@@std@@QAEAAV012@XZ ; std::list<void *,std::allocator<void *> >::const_iterator::operator++
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\list
;	COMDAT ??Econst_iterator@?$list@PAXV?$allocator@PAX@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$list@PAXV?$allocator@PAX@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::list<void *,std::allocator<void *> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 170  : 			{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 171  : 			_Ptr = _Nextnode(_Ptr);

  00002	8b 08		 mov	 ecx, DWORD PTR [eax]
  00004	8b 11		 mov	 edx, DWORD PTR [ecx]
  00006	89 10		 mov	 DWORD PTR [eax], edx

; 172  : 			return (*this);
; 173  : 			}

  00008	c3		 ret	 0
??Econst_iterator@?$list@PAXV?$allocator@PAX@std@@@std@@QAEAAV012@XZ ENDP ; std::list<void *,std::allocator<void *> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??8const_iterator@?$list@PAXV?$allocator@PAX@std@@@std@@QBE_NABV012@@Z ; std::list<void *,std::allocator<void *> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$list@PAXV?$allocator@PAX@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$list@PAXV?$allocator@PAX@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::list<void *,std::allocator<void *> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 197  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 198  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$list@PAXV?$allocator@PAX@std@@@std@@QBE_NABV012@@Z ENDP ; std::list<void *,std::allocator<void *> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	?_Myval@?$list@PAXV?$allocator@PAX@std@@@std@@KAAAPAXPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@@Z ; std::list<void *,std::allocator<void *> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$list@PAXV?$allocator@PAX@std@@@std@@KAAAPAXPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$list@PAXV?$allocator@PAX@std@@@std@@KAAAPAXPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@@Z PROC NEAR ; std::list<void *,std::allocator<void *> >::_Myval, COMDAT

; 118  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 119  : 		}

  00007	c3		 ret	 0
?_Myval@?$list@PAXV?$allocator@PAX@std@@@std@@KAAAPAXPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@@Z ENDP ; std::list<void *,std::allocator<void *> >::_Myval
_TEXT	ENDS
PUBLIC	??0const_iterator@?$list@PAXV?$allocator@PAX@std@@@std@@QAE@PAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@@Z ; std::list<void *,std::allocator<void *> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$list@PAXV?$allocator@PAX@std@@@std@@QAE@PAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$list@PAXV?$allocator@PAX@std@@@std@@QAE@PAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@@Z PROC NEAR ; std::list<void *,std::allocator<void *> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 156  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 157  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$list@PAXV?$allocator@PAX@std@@@std@@QAE@PAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@@Z ENDP ; std::list<void *,std::allocator<void *> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@0@@Z ; std::_Destroy<std::_List_nod<void *,std::allocator<void *> >::_Node>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Destroy@U_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_List_nod<void *,std::allocator<void *> >::_Node>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@U_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@0@@Z ENDP ; std::_Destroy<std::_List_nod<void *,std::allocator<void *> >::_Node>
_TEXT	ENDS
PUBLIC	??$_Destroy@PAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@0@@Z ; std::_Destroy<std::_List_nod<void *,std::allocator<void *> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@PAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_List_nod<void *,std::allocator<void *> >::_Node *>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@PAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@0@@Z ENDP ; std::_Destroy<std::_List_nod<void *,std::allocator<void *> >::_Node *>
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\afx.inl
_TEXT	ENDS
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z PROC NEAR	; CObject::Serialize, COMDAT
; _this$ = ecx

; 25   : 	{ /* CObject does not serialize anything by default */ }

  00000	c2 04 00	 ret	 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z ENDP		; CObject::Serialize
_TEXT	ENDS
PUBLIC	?Enable3dControlsStatic@CWinApp@@IAEHXZ		; CWinApp::Enable3dControlsStatic
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\afxwin2.inl
;	COMDAT ?Enable3dControlsStatic@CWinApp@@IAEHXZ
_TEXT	SEGMENT
?Enable3dControlsStatic@CWinApp@@IAEHXZ PROC NEAR	; CWinApp::Enable3dControlsStatic, COMDAT
; _this$ = ecx

; 1038 : 	{ return TRUE; }

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?Enable3dControlsStatic@CWinApp@@IAEHXZ ENDP		; CWinApp::Enable3dControlsStatic
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??_GCMonitorApp@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCMonitorApp@@UAEPAXI@Z PROC NEAR			; CMonitorApp::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CMonitorApp@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L158087
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L158087:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCMonitorApp@@UAEPAXI@Z ENDP				; CMonitorApp::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??0CMonitorDlg@@QAE@PAVCWnd@@@Z:NEAR		; CMonitorDlg::CMonitorDlg
EXTRN	?DoModal@CDialog@@UAEHXZ:NEAR			; CDialog::DoModal
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:NEAR
EXTRN	__imp__WSAStartup@8:NEAR
EXTRN	?AfxEnableControlContainer@@YAXPAVCOccManager@@@Z:NEAR ; AfxEnableControlContainer
;	COMDAT xdata$x
xdata$x	SEGMENT
$T158104 DD	0ffffffffH
	DD	FLAT:$L158093
$T158098 DD	019930520H
	DD	01H
	DD	FLAT:$T158104
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\offi src_real\offi src!\monitor\monitor.cpp
xdata$x	ENDS
;	COMDAT ?InitInstance@CMonitorApp@@UAEHXZ
_TEXT	SEGMENT
_dlg$ = -2700						; size = 2284
_wsaData$ = -416					; size = 400
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
?InitInstance@CMonitorApp@@UAEHXZ PROC NEAR		; CMonitorApp::InitInstance, COMDAT
; _this$ = ecx

; 38   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?InitInstance@CMonitorApp@@UAEHXZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	81 ec 80 0a 00
	00		 sub	 esp, 2688		; 00000a80H
  0001b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00020	56		 push	 esi

; 39   : 	AfxEnableControlContainer();

  00021	6a 00		 push	 0
  00023	89 84 24 84 0a
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+2708], eax
  0002a	8b f1		 mov	 esi, ecx
  0002c	e8 00 00 00 00	 call	 ?AfxEnableControlContainer@@YAXPAVCOccManager@@@Z ; AfxEnableControlContainer
  00031	83 c4 04	 add	 esp, 4

; 40   : 
; 41   : 	// Standard initialization
; 42   : 	// If you are not using these features and wish to reduce the size
; 43   : 	//  of your final executable, you should remove from the following
; 44   : 	//  the specific initialization routines you do not need.
; 45   : 
; 46   : #ifdef _AFXDLL
; 47   : 	Enable3dControls();			// Call this when using MFC in a shared DLL
; 48   : #else
; 49   : 	Enable3dControlsStatic();	// Call this when linking to MFC statically
; 50   : #endif
; 51   : 
; 52   : 	LOAD_WS2_32_DLL;

  00034	8d 84 24 f0 08
	00 00		 lea	 eax, DWORD PTR _wsaData$[esp+2704]
  0003b	50		 push	 eax
  0003c	68 02 02 00 00	 push	 514			; 00000202H
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WSAStartup@8
  00047	83 f8 ff	 cmp	 eax, -1
  0004a	74 3a		 je	 SHORT $L158103

; 53   : 
; 54   : 	CMonitorDlg dlg;

  0004c	6a 00		 push	 0
  0004e	8d 4c 24 08	 lea	 ecx, DWORD PTR _dlg$[esp+2708]
  00052	e8 00 00 00 00	 call	 ??0CMonitorDlg@@QAE@PAVCWnd@@@Z ; CMonitorDlg::CMonitorDlg

; 55   : 	m_pMainWnd = &dlg;

  00057	8d 4c 24 04	 lea	 ecx, DWORD PTR _dlg$[esp+2704]
  0005b	89 4e 1c	 mov	 DWORD PTR [esi+28], ecx

; 56   : 	int nResponse = dlg.DoModal();

  0005e	8d 4c 24 04	 lea	 ecx, DWORD PTR _dlg$[esp+2704]
  00062	c7 84 24 8c 0a
	00 00 00 00 00
	00		 mov	 DWORD PTR __$EHRec$[esp+2712], 0
  0006d	e8 00 00 00 00	 call	 ?DoModal@CDialog@@UAEHXZ ; CDialog::DoModal

; 57   : 	if (nResponse == IDOK)
; 58   : 	{
; 59   : 		// TODO: Place code here to handle when the dialog is
; 60   : 		//  dismissed with OK
; 61   : 	}
; 62   : 	else if (nResponse == IDCANCEL)
; 63   : 	{
; 64   : 		// TODO: Place code here to handle when the dialog is
; 65   : 		//  dismissed with Cancel
; 66   : 	}
; 67   : 
; 68   : 	// Since the dialog has been closed, return FALSE so that we exit the
; 69   : 	//  application, rather than start the application's message pump.
; 70   : 	return FALSE;

  00072	8d 4c 24 04	 lea	 ecx, DWORD PTR _dlg$[esp+2704]
  00076	c7 84 24 8c 0a
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+2712], -1
  00081	e8 00 00 00 00	 call	 ??1CMonitorDlg@@UAE@XZ
$L158103:

; 71   : }

  00086	8b 8c 24 84 0a
	00 00		 mov	 ecx, DWORD PTR __$EHRec$[esp+2704]
  0008d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00094	8b 8c 24 80 0a
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+2704]
  0009b	33 c0		 xor	 eax, eax
  0009d	5e		 pop	 esi
  0009e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a3	81 c4 8c 0a 00
	00		 add	 esp, 2700		; 00000a8cH
  000a9	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L158093:
  00000	8d 8d 74 f5 ff
	ff		 lea	 ecx, DWORD PTR _dlg$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CMonitorDlg@@UAE@XZ
__ehhandler$?InitInstance@CMonitorApp@@UAEHXZ:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T158098
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?InitInstance@CMonitorApp@@UAEHXZ ENDP			; CMonitorApp::InitInstance
PUBLIC	??Eiterator@?$list@PAXV?$allocator@PAX@std@@@std@@QAEAAV012@XZ ; std::list<void *,std::allocator<void *> >::iterator::operator++
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\list
;	COMDAT ??Eiterator@?$list@PAXV?$allocator@PAX@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$list@PAXV?$allocator@PAX@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::list<void *,std::allocator<void *> >::iterator::operator++, COMDAT
; _this$ = ecx

; 249  : 			{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 250  : 			++(*(const_iterator *)this);

  00002	8b 08		 mov	 ecx, DWORD PTR [eax]
  00004	8b 11		 mov	 edx, DWORD PTR [ecx]
  00006	89 10		 mov	 DWORD PTR [eax], edx

; 251  : 			return (*this);
; 252  : 			}

  00008	c3		 ret	 0
??Eiterator@?$list@PAXV?$allocator@PAX@std@@@std@@QAEAAV012@XZ ENDP ; std::list<void *,std::allocator<void *> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??9const_iterator@?$list@PAXV?$allocator@PAX@std@@@std@@QBE_NABV012@@Z ; std::list<void *,std::allocator<void *> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$list@PAXV?$allocator@PAX@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$list@PAXV?$allocator@PAX@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::list<void *,std::allocator<void *> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 202  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 203  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$list@PAXV?$allocator@PAX@std@@@std@@QBE_NABV012@@Z ENDP ; std::list<void *,std::allocator<void *> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@@Z ; std::allocator<std::_List_nod<void *,std::allocator<void *> >::_Node>::destroy
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?destroy@?$allocator@U_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@@Z PROC NEAR ; std::allocator<std::_List_nod<void *,std::allocator<void *> >::_Node>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@U_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@@Z ENDP ; std::allocator<std::_List_nod<void *,std::allocator<void *> >::_Node>::destroy
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@@Z ; std::allocator<std::_List_nod<void *,std::allocator<void *> >::_Node *>::destroy
; Function compile flags: /Ogty
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@@Z PROC NEAR ; std::allocator<std::_List_nod<void *,std::allocator<void *> >::_Node *>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@PAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@@Z ENDP ; std::allocator<std::_List_nod<void *,std::allocator<void *> >::_Node *>::destroy
_TEXT	ENDS
PUBLIC	??0iterator@?$list@PAXV?$allocator@PAX@std@@@std@@QAE@PAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@@Z ; std::list<void *,std::allocator<void *> >::iterator::iterator
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\list
;	COMDAT ??0iterator@?$list@PAXV?$allocator@PAX@std@@@std@@QAE@PAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$list@PAXV?$allocator@PAX@std@@@std@@QAE@PAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@@Z PROC NEAR ; std::list<void *,std::allocator<void *> >::iterator::iterator, COMDAT
; _this$ = ecx

; 235  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 236  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$list@PAXV?$allocator@PAX@std@@@std@@QAE@PAU_Node@?$_List_nod@PAXV?$allocator@PAX@std@@@2@@Z ENDP ; std::list<void *,std::allocator<void *> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$list@PAXV?$allocator@PAX@std@@@std@@QBEABQAXXZ ; std::list<void *,std::allocator<void *> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$list@PAXV?$allocator@PAX@std@@@std@@QBEABQAXXZ
_TEXT	SEGMENT
??Dconst_iterator@?$list@PAXV?$allocator@PAX@std@@@std@@QBEABQAXXZ PROC NEAR ; std::list<void *,std::allocator<void *> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 161  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 08	 add	 eax, 8

; 162  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$list@PAXV?$allocator@PAX@std@@@std@@QBEABQAXXZ ENDP ; std::list<void *,std::allocator<void *> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	?begin@?$list@PAXV?$allocator@PAX@std@@@std@@QAE?AViterator@12@XZ ; std::list<void *,std::allocator<void *> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$list@PAXV?$allocator@PAX@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$list@PAXV?$allocator@PAX@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::list<void *,std::allocator<void *> >::begin, COMDAT
; _this$ = ecx

; 377  : 		return (iterator(_Nextnode(_Myhead)));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 378  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$list@PAXV?$allocator@PAX@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::list<void *,std::allocator<void *> >::begin
_TEXT	ENDS
PUBLIC	?end@?$list@PAXV?$allocator@PAX@std@@@std@@QAE?AViterator@12@XZ ; std::list<void *,std::allocator<void *> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$list@PAXV?$allocator@PAX@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$list@PAXV?$allocator@PAX@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::list<void *,std::allocator<void *> >::end, COMDAT
; _this$ = ecx

; 387  : 		return (iterator(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 388  : 		}

  00009	c2 04 00	 ret	 4
?end@?$list@PAXV?$allocator@PAX@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::list<void *,std::allocator<void *> >::end
_TEXT	ENDS
PUBLIC	?clear@?$list@PAXV?$allocator@PAX@std@@@std@@QAEXXZ ; std::list<void *,std::allocator<void *> >::clear
; Function compile flags: /Ogty
;	COMDAT ?clear@?$list@PAXV?$allocator@PAX@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$list@PAXV?$allocator@PAX@std@@@std@@QAEXXZ PROC NEAR ; std::list<void *,std::allocator<void *> >::clear, COMDAT
; _this$ = ecx

; 610  : 		{	// erase all

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 611  : 		_Nodeptr _Pnext;
; 612  : 		_Nodeptr _Pnode = _Nextnode(_Myhead);

  00003	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00006	8b 01		 mov	 eax, DWORD PTR [ecx]

; 613  : 		_Nextnode(_Myhead) = _Myhead;

  00008	89 09		 mov	 DWORD PTR [ecx], ecx

; 614  : 		_Prevnode(_Myhead) = _Myhead;

  0000a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0000d	89 49 04	 mov	 DWORD PTR [ecx+4], ecx

; 615  : 		_Mysize = 0;
; 616  : 
; 617  : 		for (; _Pnode != _Myhead; _Pnode = _Pnext)

  00010	3b 46 04	 cmp	 eax, DWORD PTR [esi+4]
  00013	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  0001a	74 19		 je	 SHORT $L156720
  0001c	57		 push	 edi
  0001d	8d 49 00	 npad	 3
$L156718:

; 618  : 			{	// delete an element
; 619  : 			_Pnext = _Nextnode(_Pnode);

  00020	8b 38		 mov	 edi, DWORD PTR [eax]

; 620  : 			this->_Alnod.destroy(_Pnode);
; 621  : 			this->_Alnod.deallocate(_Pnode, 1);

  00022	50		 push	 eax
  00023	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00028	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b f9		 cmp	 edi, ecx
  00030	8b c7		 mov	 eax, edi
  00032	75 ec		 jne	 SHORT $L156718
  00034	5f		 pop	 edi
$L156720:
  00035	5e		 pop	 esi

; 622  : 			}
; 623  : 		}

  00036	c3		 ret	 0
?clear@?$list@PAXV?$allocator@PAX@std@@@std@@QAEXXZ ENDP ; std::list<void *,std::allocator<void *> >::clear
_TEXT	ENDS
PUBLIC	?_Tidy@?$list@PAXV?$allocator@PAX@std@@@std@@IAEXXZ ; std::list<void *,std::allocator<void *> >::_Tidy
; Function compile flags: /Ogty
;	COMDAT ?_Tidy@?$list@PAXV?$allocator@PAX@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$list@PAXV?$allocator@PAX@std@@@std@@IAEXXZ PROC NEAR ; std::list<void *,std::allocator<void *> >::_Tidy, COMDAT
; _this$ = ecx

; 929  : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 930  : 		clear();

  00003	e8 00 00 00 00	 call	 ?clear@?$list@PAXV?$allocator@PAX@std@@@std@@QAEXXZ ; std::list<void *,std::allocator<void *> >::clear

; 931  : 		this->_Alptr.destroy(&_Nextnode(_Myhead));
; 932  : 		this->_Alptr.destroy(&_Prevnode(_Myhead));
; 933  : 		this->_Alnod.deallocate(_Myhead, 1);

  00008	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	83 c4 04	 add	 esp, 4

; 934  : 		_Myhead = 0;

  00014	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001b	5e		 pop	 esi

; 935  : 		}

  0001c	c3		 ret	 0
?_Tidy@?$list@PAXV?$allocator@PAX@std@@@std@@IAEXXZ ENDP ; std::list<void *,std::allocator<void *> >::_Tidy
_TEXT	ENDS
PUBLIC	??Diterator@?$list@PAXV?$allocator@PAX@std@@@std@@QBEAAPAXXZ ; std::list<void *,std::allocator<void *> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$list@PAXV?$allocator@PAX@std@@@std@@QBEAAPAXXZ
_TEXT	SEGMENT
??Diterator@?$list@PAXV?$allocator@PAX@std@@@std@@QBEAAPAXXZ PROC NEAR ; std::list<void *,std::allocator<void *> >::iterator::operator*, COMDAT
; _this$ = ecx

; 240  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 08	 add	 eax, 8

; 241  : 			}

  00005	c3		 ret	 0
??Diterator@?$list@PAXV?$allocator@PAX@std@@@std@@QBEAAPAXXZ ENDP ; std::list<void *,std::allocator<void *> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??1?$list@PAXV?$allocator@PAX@std@@@std@@QAE@XZ	; std::list<void *,std::allocator<void *> >::~list<void *,std::allocator<void *> >
; Function compile flags: /Ogty
;	COMDAT ??1?$list@PAXV?$allocator@PAX@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$list@PAXV?$allocator@PAX@std@@@std@@QAE@XZ PROC NEAR ; std::list<void *,std::allocator<void *> >::~list<void *,std::allocator<void *> >, COMDAT
; _this$ = ecx

; 364  : 		{	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 365  : 		_Tidy();

  00003	e8 00 00 00 00	 call	 ?clear@?$list@PAXV?$allocator@PAX@std@@@std@@QAEXXZ ; std::list<void *,std::allocator<void *> >::clear
  00008	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	83 c4 04	 add	 esp, 4
  00014	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001b	5e		 pop	 esi

; 366  : 		}

  0001c	c3		 ret	 0
??1?$list@PAXV?$allocator@PAX@std@@@std@@QAE@XZ ENDP	; std::list<void *,std::allocator<void *> >::~list<void *,std::allocator<void *> >
_TEXT	ENDS
PUBLIC	?Destroy@?$MemPooler@VCBuffer@@@@IAEXXZ		; MemPooler<CBuffer>::Destroy
EXTRN	__imp__VirtualFree@12:NEAR
EXTRN	__imp__DeleteCriticalSection@4:NEAR
; Function compile flags: /Ogty
; File c:\offi src_real\offi src!\_network\misc\include\mempooler.h
;	COMDAT ?Destroy@?$MemPooler@VCBuffer@@@@IAEXXZ
_TEXT	SEGMENT
?Destroy@?$MemPooler@VCBuffer@@@@IAEXXZ PROC NEAR	; MemPooler<CBuffer>::Destroy, COMDAT
; _this$ = ecx

; 144  : 	{

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 145  : #ifdef __VERIFY_MEMPOOL
; 146  : 		return;
; 147  : #endif
; 148  : 		for( list<void*>::iterator i = m_ListOfMemBlockPtr.begin(); i != m_ListOfMemBlockPtr.end(); ++i )

  00004	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00007	8b 30		 mov	 esi, DWORD PTR [eax]
  00009	3b f0		 cmp	 esi, eax
  0000b	74 1c		 je	 SHORT $L156636
  0000d	53		 push	 ebx
  0000e	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__VirtualFree@12
$L158282:

; 149  : 			VirtualFree( *i, 0, MEM_RELEASE );

  00014	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00017	68 00 80 00 00	 push	 32768			; 00008000H
  0001c	6a 00		 push	 0
  0001e	50		 push	 eax
  0001f	ff d3		 call	 ebx
  00021	8b 36		 mov	 esi, DWORD PTR [esi]
  00023	3b 77 08	 cmp	 esi, DWORD PTR [edi+8]
  00026	75 ec		 jne	 SHORT $L158282
  00028	5b		 pop	 ebx
$L156636:

; 150  : 		m_ListOfMemBlockPtr.clear();

  00029	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  0002c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002e	89 09		 mov	 DWORD PTR [ecx], ecx
  00030	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00033	89 49 04	 mov	 DWORD PTR [ecx+4], ecx
  00036	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  00039	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
  00040	74 14		 je	 SHORT $L158350
$L158348:
  00042	8b 30		 mov	 esi, DWORD PTR [eax]
  00044	50		 push	 eax
  00045	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0004a	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  0004d	83 c4 04	 add	 esp, 4
  00050	3b f1		 cmp	 esi, ecx
  00052	8b c6		 mov	 eax, esi
  00054	75 ec		 jne	 SHORT $L158348
$L158350:

; 151  : 
; 152  : 		DeleteCriticalSection( &m_cs );		

  00056	83 c7 1c	 add	 edi, 28			; 0000001cH
  00059	57		 push	 edi
  0005a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteCriticalSection@4
  00060	5f		 pop	 edi
  00061	5e		 pop	 esi

; 153  : 	}

  00062	c3		 ret	 0
?Destroy@?$MemPooler@VCBuffer@@@@IAEXXZ ENDP		; MemPooler<CBuffer>::Destroy
_TEXT	ENDS
PUBLIC	?Destroy@?$MemPooler@VCClientSock@@@@IAEXXZ	; MemPooler<CClientSock>::Destroy
; Function compile flags: /Ogty
;	COMDAT ?Destroy@?$MemPooler@VCClientSock@@@@IAEXXZ
_TEXT	SEGMENT
?Destroy@?$MemPooler@VCClientSock@@@@IAEXXZ PROC NEAR	; MemPooler<CClientSock>::Destroy, COMDAT
; _this$ = ecx

; 144  : 	{

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 145  : #ifdef __VERIFY_MEMPOOL
; 146  : 		return;
; 147  : #endif
; 148  : 		for( list<void*>::iterator i = m_ListOfMemBlockPtr.begin(); i != m_ListOfMemBlockPtr.end(); ++i )

  00004	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00007	8b 30		 mov	 esi, DWORD PTR [eax]
  00009	3b f0		 cmp	 esi, eax
  0000b	74 1c		 je	 SHORT $L156677
  0000d	53		 push	 ebx
  0000e	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__VirtualFree@12
$L158401:

; 149  : 			VirtualFree( *i, 0, MEM_RELEASE );

  00014	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00017	68 00 80 00 00	 push	 32768			; 00008000H
  0001c	6a 00		 push	 0
  0001e	50		 push	 eax
  0001f	ff d3		 call	 ebx
  00021	8b 36		 mov	 esi, DWORD PTR [esi]
  00023	3b 77 08	 cmp	 esi, DWORD PTR [edi+8]
  00026	75 ec		 jne	 SHORT $L158401
  00028	5b		 pop	 ebx
$L156677:

; 150  : 		m_ListOfMemBlockPtr.clear();

  00029	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  0002c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002e	89 09		 mov	 DWORD PTR [ecx], ecx
  00030	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00033	89 49 04	 mov	 DWORD PTR [ecx+4], ecx
  00036	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  00039	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
  00040	74 14		 je	 SHORT $L158469
$L158467:
  00042	8b 30		 mov	 esi, DWORD PTR [eax]
  00044	50		 push	 eax
  00045	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0004a	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  0004d	83 c4 04	 add	 esp, 4
  00050	3b f1		 cmp	 esi, ecx
  00052	8b c6		 mov	 eax, esi
  00054	75 ec		 jne	 SHORT $L158467
$L158469:

; 151  : 
; 152  : 		DeleteCriticalSection( &m_cs );		

  00056	83 c7 1c	 add	 edi, 28			; 0000001cH
  00059	57		 push	 edi
  0005a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteCriticalSection@4
  00060	5f		 pop	 edi
  00061	5e		 pop	 esi

; 153  : 	}

  00062	c3		 ret	 0
?Destroy@?$MemPooler@VCClientSock@@@@IAEXXZ ENDP	; MemPooler<CClientSock>::Destroy
_TEXT	ENDS
PUBLIC	?Destroy@?$MemPooler@VCClientSockE@@@@IAEXXZ	; MemPooler<CClientSockE>::Destroy
; Function compile flags: /Ogty
;	COMDAT ?Destroy@?$MemPooler@VCClientSockE@@@@IAEXXZ
_TEXT	SEGMENT
?Destroy@?$MemPooler@VCClientSockE@@@@IAEXXZ PROC NEAR	; MemPooler<CClientSockE>::Destroy, COMDAT
; _this$ = ecx

; 144  : 	{

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 145  : #ifdef __VERIFY_MEMPOOL
; 146  : 		return;
; 147  : #endif
; 148  : 		for( list<void*>::iterator i = m_ListOfMemBlockPtr.begin(); i != m_ListOfMemBlockPtr.end(); ++i )

  00004	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00007	8b 30		 mov	 esi, DWORD PTR [eax]
  00009	3b f0		 cmp	 esi, eax
  0000b	74 1c		 je	 SHORT $L156702
  0000d	53		 push	 ebx
  0000e	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__VirtualFree@12
$L158520:

; 149  : 			VirtualFree( *i, 0, MEM_RELEASE );

  00014	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00017	68 00 80 00 00	 push	 32768			; 00008000H
  0001c	6a 00		 push	 0
  0001e	50		 push	 eax
  0001f	ff d3		 call	 ebx
  00021	8b 36		 mov	 esi, DWORD PTR [esi]
  00023	3b 77 08	 cmp	 esi, DWORD PTR [edi+8]
  00026	75 ec		 jne	 SHORT $L158520
  00028	5b		 pop	 ebx
$L156702:

; 150  : 		m_ListOfMemBlockPtr.clear();

  00029	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  0002c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002e	89 09		 mov	 DWORD PTR [ecx], ecx
  00030	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00033	89 49 04	 mov	 DWORD PTR [ecx+4], ecx
  00036	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  00039	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
  00040	74 14		 je	 SHORT $L158588
$L158586:
  00042	8b 30		 mov	 esi, DWORD PTR [eax]
  00044	50		 push	 eax
  00045	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0004a	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  0004d	83 c4 04	 add	 esp, 4
  00050	3b f1		 cmp	 esi, ecx
  00052	8b c6		 mov	 eax, esi
  00054	75 ec		 jne	 SHORT $L158586
$L158588:

; 151  : 
; 152  : 		DeleteCriticalSection( &m_cs );		

  00056	83 c7 1c	 add	 edi, 28			; 0000001cH
  00059	57		 push	 edi
  0005a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteCriticalSection@4
  00060	5f		 pop	 edi
  00061	5e		 pop	 esi

; 153  : 	}

  00062	c3		 ret	 0
?Destroy@?$MemPooler@VCClientSockE@@@@IAEXXZ ENDP	; MemPooler<CClientSockE>::Destroy
_TEXT	ENDS
PUBLIC	??1?$MemPooler@VCBuffer@@@@QAE@XZ		; MemPooler<CBuffer>::~MemPooler<CBuffer>
; Function compile flags: /Ogty
;	COMDAT ??1?$MemPooler@VCBuffer@@@@QAE@XZ
_TEXT	SEGMENT
??1?$MemPooler@VCBuffer@@@@QAE@XZ PROC NEAR		; MemPooler<CBuffer>::~MemPooler<CBuffer>, COMDAT
; _this$ = ecx

; 53   : 		{	Destroy();	}

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ?Destroy@?$MemPooler@VCBuffer@@@@IAEXXZ ; MemPooler<CBuffer>::Destroy
  00008	83 c6 04	 add	 esi, 4
  0000b	8b ce		 mov	 ecx, esi
  0000d	e8 00 00 00 00	 call	 ?clear@?$list@PAXV?$allocator@PAX@std@@@std@@QAEXXZ ; std::list<void *,std::allocator<void *> >::clear
  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001b	83 c4 04	 add	 esp, 4
  0001e	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  00025	5e		 pop	 esi
  00026	c3		 ret	 0
??1?$MemPooler@VCBuffer@@@@QAE@XZ ENDP			; MemPooler<CBuffer>::~MemPooler<CBuffer>
_TEXT	ENDS
PUBLIC	??1?$MemPooler@VCClientSock@@@@QAE@XZ		; MemPooler<CClientSock>::~MemPooler<CClientSock>
; Function compile flags: /Ogty
;	COMDAT ??1?$MemPooler@VCClientSock@@@@QAE@XZ
_TEXT	SEGMENT
??1?$MemPooler@VCClientSock@@@@QAE@XZ PROC NEAR		; MemPooler<CClientSock>::~MemPooler<CClientSock>, COMDAT
; _this$ = ecx

; 53   : 		{	Destroy();	}

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ?Destroy@?$MemPooler@VCClientSock@@@@IAEXXZ ; MemPooler<CClientSock>::Destroy
  00008	83 c6 04	 add	 esi, 4
  0000b	8b ce		 mov	 ecx, esi
  0000d	e8 00 00 00 00	 call	 ?clear@?$list@PAXV?$allocator@PAX@std@@@std@@QAEXXZ ; std::list<void *,std::allocator<void *> >::clear
  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001b	83 c4 04	 add	 esp, 4
  0001e	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  00025	5e		 pop	 esi
  00026	c3		 ret	 0
??1?$MemPooler@VCClientSock@@@@QAE@XZ ENDP		; MemPooler<CClientSock>::~MemPooler<CClientSock>
_TEXT	ENDS
PUBLIC	??1?$MemPooler@VCClientSockE@@@@QAE@XZ		; MemPooler<CClientSockE>::~MemPooler<CClientSockE>
; Function compile flags: /Ogty
;	COMDAT ??1?$MemPooler@VCClientSockE@@@@QAE@XZ
_TEXT	SEGMENT
??1?$MemPooler@VCClientSockE@@@@QAE@XZ PROC NEAR	; MemPooler<CClientSockE>::~MemPooler<CClientSockE>, COMDAT
; _this$ = ecx

; 53   : 		{	Destroy();	}

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ?Destroy@?$MemPooler@VCClientSockE@@@@IAEXXZ ; MemPooler<CClientSockE>::Destroy
  00008	83 c6 04	 add	 esi, 4
  0000b	8b ce		 mov	 ecx, esi
  0000d	e8 00 00 00 00	 call	 ?clear@?$list@PAXV?$allocator@PAX@std@@@std@@QAEXXZ ; std::list<void *,std::allocator<void *> >::clear
  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001b	83 c4 04	 add	 esp, 4
  0001e	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  00025	5e		 pop	 esi
  00026	c3		 ret	 0
??1?$MemPooler@VCClientSockE@@@@QAE@XZ ENDP		; MemPooler<CClientSockE>::~MemPooler<CClientSockE>
_TEXT	ENDS
PUBLIC	??_G?$MemPooler@VCClientSock@@@@QAEPAXI@Z	; MemPooler<CClientSock>::`scalar deleting destructor'
; Function compile flags: /Ogty
;	COMDAT ??_G?$MemPooler@VCClientSock@@@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$MemPooler@VCClientSock@@@@QAEPAXI@Z PROC NEAR	; MemPooler<CClientSock>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1?$MemPooler@VCClientSock@@@@QAE@XZ ; MemPooler<CClientSock>::~MemPooler<CClientSock>
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L158715
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L158715:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_G?$MemPooler@VCClientSock@@@@QAEPAXI@Z ENDP		; MemPooler<CClientSock>::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_G?$MemPooler@VCClientSockE@@@@QAEPAXI@Z	; MemPooler<CClientSockE>::`scalar deleting destructor'
; Function compile flags: /Ogty
;	COMDAT ??_G?$MemPooler@VCClientSockE@@@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$MemPooler@VCClientSockE@@@@QAEPAXI@Z PROC NEAR	; MemPooler<CClientSockE>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1?$MemPooler@VCClientSockE@@@@QAE@XZ ; MemPooler<CClientSockE>::~MemPooler<CClientSockE>
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L158719
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L158719:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_G?$MemPooler@VCClientSockE@@@@QAEPAXI@Z ENDP		; MemPooler<CClientSockE>::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_G?$MemPooler@VCBuffer@@@@QAEPAXI@Z		; MemPooler<CBuffer>::`scalar deleting destructor'
; Function compile flags: /Ogty
;	COMDAT ??_G?$MemPooler@VCBuffer@@@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$MemPooler@VCBuffer@@@@QAEPAXI@Z PROC NEAR		; MemPooler<CBuffer>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1?$MemPooler@VCBuffer@@@@QAE@XZ ; MemPooler<CBuffer>::~MemPooler<CBuffer>
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L158723
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L158723:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_G?$MemPooler@VCBuffer@@@@QAEPAXI@Z ENDP		; MemPooler<CBuffer>::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	?m_pPool@CClientSockE@@2PAV?$MemPooler@VCClientSockE@@@@A:DWORD ; CClientSockE::m_pPool
EXTRN	?m_pHeapMng@CBuffer@@2PAVCHeapMng@@A:DWORD	; CBuffer::m_pHeapMng
EXTRN	?m_pPool@CBuffer@@2PAV?$MemPooler@VCBuffer@@@@A:DWORD ; CBuffer::m_pPool
EXTRN	?m_pHeapMng@CAr@@2PAVCHeapMng@@A:DWORD		; CAr::m_pHeapMng
EXTRN	?m_pPool@CClientSock@@2PAV?$MemPooler@VCClientSock@@@@A:DWORD ; CClientSock::m_pPool
EXTRN	__imp__WSACleanup@0:NEAR
EXTRN	?ExitInstance@CWinApp@@UAEHXZ:NEAR		; CWinApp::ExitInstance
; Function compile flags: /Ogty
; File c:\offi src_real\offi src!\monitor\monitor.cpp
;	COMDAT ?ExitInstance@CMonitorApp@@UAEHXZ
_TEXT	SEGMENT
?ExitInstance@CMonitorApp@@UAEHXZ PROC NEAR		; CMonitorApp::ExitInstance, COMDAT
; _this$ = ecx

; 74   : {

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	8b d9		 mov	 ebx, ecx

; 75   : 	SAFE_DELETE( CAr::m_pHeapMng );

  00004	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_pHeapMng@CAr@@2PAVCHeapMng@@A ; CAr::m_pHeapMng
  0000a	33 f6		 xor	 esi, esi
  0000c	3b ce		 cmp	 ecx, esi
  0000e	74 0c		 je	 SHORT $L156418
  00010	8b 01		 mov	 eax, DWORD PTR [ecx]
  00012	6a 01		 push	 1
  00014	ff 10		 call	 DWORD PTR [eax]
  00016	89 35 00 00 00
	00		 mov	 DWORD PTR ?m_pHeapMng@CAr@@2PAVCHeapMng@@A, esi ; CAr::m_pHeapMng
$L156418:

; 76   : 	SAFE_DELETE( CClientSock::m_pPool );

  0001c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_pPool@CClientSock@@2PAV?$MemPooler@VCClientSock@@@@A ; CClientSock::m_pPool
  00022	3b ce		 cmp	 ecx, esi
  00024	57		 push	 edi
  00025	74 16		 je	 SHORT $L156422
  00027	8b f9		 mov	 edi, ecx
  00029	e8 00 00 00 00	 call	 ??1?$MemPooler@VCClientSock@@@@QAE@XZ ; MemPooler<CClientSock>::~MemPooler<CClientSock>
  0002e	57		 push	 edi
  0002f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00034	83 c4 04	 add	 esp, 4
  00037	89 35 00 00 00
	00		 mov	 DWORD PTR ?m_pPool@CClientSock@@2PAV?$MemPooler@VCClientSock@@@@A, esi ; CClientSock::m_pPool
$L156422:

; 77   : 	SAFE_DELETE( CClientSockE::m_pPool );

  0003d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_pPool@CClientSockE@@2PAV?$MemPooler@VCClientSockE@@@@A ; CClientSockE::m_pPool
  00043	3b ce		 cmp	 ecx, esi
  00045	74 16		 je	 SHORT $L156426
  00047	8b f9		 mov	 edi, ecx
  00049	e8 00 00 00 00	 call	 ??1?$MemPooler@VCClientSockE@@@@QAE@XZ ; MemPooler<CClientSockE>::~MemPooler<CClientSockE>
  0004e	57		 push	 edi
  0004f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00054	83 c4 04	 add	 esp, 4
  00057	89 35 00 00 00
	00		 mov	 DWORD PTR ?m_pPool@CClientSockE@@2PAV?$MemPooler@VCClientSockE@@@@A, esi ; CClientSockE::m_pPool
$L156426:

; 78   : 	SAFE_DELETE( CBuffer::m_pPool );

  0005d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_pPool@CBuffer@@2PAV?$MemPooler@VCBuffer@@@@A ; CBuffer::m_pPool
  00063	3b ce		 cmp	 ecx, esi
  00065	74 16		 je	 SHORT $L156430
  00067	8b f9		 mov	 edi, ecx
  00069	e8 00 00 00 00	 call	 ??1?$MemPooler@VCBuffer@@@@QAE@XZ ; MemPooler<CBuffer>::~MemPooler<CBuffer>
  0006e	57		 push	 edi
  0006f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00074	83 c4 04	 add	 esp, 4
  00077	89 35 00 00 00
	00		 mov	 DWORD PTR ?m_pPool@CBuffer@@2PAV?$MemPooler@VCBuffer@@@@A, esi ; CBuffer::m_pPool
$L156430:

; 79   : 	SAFE_DELETE( CBuffer::m_pHeapMng );

  0007d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_pHeapMng@CBuffer@@2PAVCHeapMng@@A ; CBuffer::m_pHeapMng
  00083	3b ce		 cmp	 ecx, esi
  00085	5f		 pop	 edi
  00086	74 0c		 je	 SHORT $L156434
  00088	8b 11		 mov	 edx, DWORD PTR [ecx]
  0008a	6a 01		 push	 1
  0008c	ff 12		 call	 DWORD PTR [edx]
  0008e	89 35 00 00 00
	00		 mov	 DWORD PTR ?m_pHeapMng@CBuffer@@2PAVCHeapMng@@A, esi ; CBuffer::m_pHeapMng
$L156434:

; 80   : 
; 81   : 	UNLOAD_WS2_32_DLL;

  00094	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WSACleanup@0
  0009a	5e		 pop	 esi

; 82   : 	
; 83   : 	return CWinApp::ExitInstance();

  0009b	8b cb		 mov	 ecx, ebx
  0009d	5b		 pop	 ebx
  0009e	e9 00 00 00 00	 jmp	 ?ExitInstance@CWinApp@@UAEHXZ ; CWinApp::ExitInstance
?ExitInstance@CMonitorApp@@UAEHXZ ENDP			; CMonitorApp::ExitInstance
_TEXT	ENDS
EXTRN	_atexit:NEAR
CRT$XCU	SEGMENT
_$S3	DD	FLAT:_$E1
; Function compile flags: /Ogty
CRT$XCU	ENDS
;	COMDAT _$E1
text$yc	SEGMENT
_$E1	PROC NEAR					; COMDAT

; 32   : CMonitorApp theApp;

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?theApp@@3VCMonitorApp@@A
  00005	e8 00 00 00 00	 call	 ??0CMonitorApp@@QAE@XZ	; CMonitorApp::CMonitorApp
  0000a	68 00 00 00 00	 push	 OFFSET FLAT:_$E2
  0000f	e8 00 00 00 00	 call	 _atexit
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
_$E1	ENDP
; Function compile flags: /Ogty
text$yc	ENDS
;	COMDAT _$E2
text$yd	SEGMENT
_$E2	PROC NEAR					; COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?theApp@@3VCMonitorApp@@A
  00005	e9 00 00 00 00	 jmp	 ??1CMonitorApp@@UAE@XZ
_$E2	ENDP
text$yd	ENDS
PUBLIC	?theApp@@3VCMonitorApp@@A			; theApp
_BSS	SEGMENT
?theApp@@3VCMonitorApp@@A DB 0a0H DUP (?)		; theApp
_BSS	ENDS
END
