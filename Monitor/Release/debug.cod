; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	\Offi SRC_real\Offi src!\_Common\debug.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BL@OPOBLKAC@?$CFd?1?$CF2d?1?$CF2d?5?$CF02d?3?$CF02d?3?$CF02d?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03OFAPEBGM@?$CFs?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@NLEENBFM@_?$CFd?$CF02d?$CF02d?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?LogFile@@YAXPBD0W4LOG_TYPE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FileOutV@@YAXW4LOG_TYPE@@PBD1PAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DEBUGOUT2@@YAXPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FILEOUT@@YAXPBD0ZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WriteLog@@YAXPBDZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WriteError@@YAXPBDZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OUTPUTDEBUGSTRING@@YAXPBDZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MakeFileNameDate@@YAPBDPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@G@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __tcsrchr
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?szFullFileName@?1??MakeFileNameDate@@YAPBDPBD@Z@4PADA
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
;	COMDAT ??_C@_01MCMALHOG@a?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
_g_szERROR DB	'error.log', 00H
	ORG $+2
_g_szEH	DB	'eh.log', 00H
CONST	ENDS
PUBLIC	?OUTPUTDEBUGSTRING@@YAXPBDZZ			; OUTPUTDEBUGSTRING
EXTRN	__imp__OutputDebugStringA@4:NEAR
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:NEAR
EXTRN	__vsnprintf:NEAR
; Function compile flags: /Ogty
; File c:\offi src_real\offi src!\_common\debug.cpp
;	COMDAT ?OUTPUTDEBUGSTRING@@YAXPBDZZ
_TEXT	SEGMENT
_lpString$ = -1028					; size = 1024
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
_lpszFormat$ = 8					; size = 4
?OUTPUTDEBUGSTRING@@YAXPBDZZ PROC NEAR			; OUTPUTDEBUGSTRING, COMDAT

; 91   : {

  00000	81 ec 04 04 00
	00		 sub	 esp, 1028		; 00000404H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	57		 push	 edi
  0000c	89 84 24 04 04
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+1032], eax

; 92   : 	char lpString[1024]		= { 0,};

  00013	33 c0		 xor	 eax, eax
  00015	c6 44 24 04 00	 mov	 BYTE PTR _lpString$[esp+1032], 0
  0001a	b9 ff 00 00 00	 mov	 ecx, 255		; 000000ffH
  0001f	8d 7c 24 05	 lea	 edi, DWORD PTR _lpString$[esp+1033]
  00023	f3 ab		 rep stosd

; 93   : 	va_list	args;
; 94   : 	va_start( args, lpszFormat );
; 95   : 	int n	= _vsntprintf( lpString, 1024, lpszFormat, args );

  00025	8b 8c 24 0c 04
	00 00		 mov	 ecx, DWORD PTR _lpszFormat$[esp+1028]
  0002c	66 ab		 stosw
  0002e	aa		 stosb
  0002f	8d 84 24 10 04
	00 00		 lea	 eax, DWORD PTR _lpszFormat$[esp+1032]
  00036	50		 push	 eax
  00037	51		 push	 ecx
  00038	8d 54 24 0c	 lea	 edx, DWORD PTR _lpString$[esp+1040]
  0003c	68 00 04 00 00	 push	 1024			; 00000400H
  00041	52		 push	 edx
  00042	e8 00 00 00 00	 call	 __vsnprintf
  00047	83 c4 10	 add	 esp, 16			; 00000010H

; 96   : 	va_end( args );
; 97   : 	if( n > 0 )

  0004a	85 c0		 test	 eax, eax
  0004c	5f		 pop	 edi
  0004d	7e 0a		 jle	 SHORT $L148000

; 98   : 		::OutputDebugString( lpString );

  0004f	8d 04 24	 lea	 eax, DWORD PTR _lpString$[esp+1028]
  00052	50		 push	 eax
  00053	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__OutputDebugStringA@4
$L148000:

; 99   : }

  00059	8b 8c 24 00 04
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+1028]
  00060	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00065	81 c4 04 04 00
	00		 add	 esp, 1028		; 00000404H
  0006b	c3		 ret	 0
?OUTPUTDEBUGSTRING@@YAXPBDZZ ENDP			; OUTPUTDEBUGSTRING
_TEXT	ENDS
PUBLIC	__tcsrchr
EXTRN	__mbsrchr:NEAR
; Function compile flags: /Ogty
; File c:\program files\microsoft visual studio .net 2003\vc7\include\tchar.h
;	COMDAT __tcsrchr
_TEXT	SEGMENT
__s1$ = 8						; size = 4
__c$ = 12						; size = 4
__tcsrchr PROC NEAR					; COMDAT

; 845  : __inline _PC _tcsrchr(_CPC _s1,_UI _c) {return (_PC)_mbsrchr((_CPUC)_s1,_c);}

  00000	e9 00 00 00 00	 jmp	 __mbsrchr
__tcsrchr ENDP
_TEXT	ENDS
PUBLIC	??_C@_0M@NLEENBFM@_?$CFd?$CF02d?$CF02d?$AA@	; `string'
PUBLIC	?MakeFileNameDate@@YAPBDPBD@Z			; MakeFileNameDate
EXTRN	__imp__GetLocalTime@4:NEAR
EXTRN	_sprintf:NEAR
;	COMDAT ?szFullFileName@?1??MakeFileNameDate@@YAPBDPBD@Z@4PADA
_BSS	SEGMENT
?szFullFileName@?1??MakeFileNameDate@@YAPBDPBD@Z@4PADA DB 0204H DUP (?) ; `MakeFileNameDate'::`2'::szFullFileName
_BSS	ENDS
;	COMDAT ??_C@_0M@NLEENBFM@_?$CFd?$CF02d?$CF02d?$AA@
CONST	SEGMENT
??_C@_0M@NLEENBFM@_?$CFd?$CF02d?$CF02d?$AA@ DB '_%d%02d%02d', 00H ; `string'
; Function compile flags: /Ogty
; File c:\offi src_real\offi src!\_common\debug.cpp
CONST	ENDS
;	COMDAT ?MakeFileNameDate@@YAPBDPBD@Z
_TEXT	SEGMENT
_time$148010 = -40					; size = 16
_szExt$148008 = -24					; size = 5
_szDate$148009 = -16					; size = 10
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
_lpszFileName$ = 8					; size = 4
?MakeFileNameDate@@YAPBDPBD@Z PROC NEAR			; MakeFileNameDate, COMDAT

; 102  : {

  00000	83 ec 28	 sub	 esp, 40			; 00000028H
  00003	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00008	56		 push	 esi

; 103  : 	static char szFullFileName[_MAX_PATH+_MAX_FNAME];
; 104  : 	::memset( szFullFileName, 0, sizeof( szFullFileName ) );
; 105  : 
; 106  : #ifdef __CLIENT
; 107  : 	::GetCurrentDirectory( _MAX_PATH, szFullFileName );
; 108  : 	_tcscat( szFullFileName, "\\Log\\" );
; 109  : 	::CreateDirectory( szFullFileName, NULL );
; 110  : 	_tcscat( szFullFileName, lpszFileName );
; 111  : #else // __CLIENT
; 112  : 	_tcscpy( szFullFileName, lpszFileName );

  00009	8b 74 24 30	 mov	 esi, DWORD PTR _lpszFileName$[esp+40]
  0000d	89 44 24 28	 mov	 DWORD PTR __$ArrayPad$[esp+44], eax
  00011	57		 push	 edi
  00012	33 c0		 xor	 eax, eax
  00014	b9 81 00 00 00	 mov	 ecx, 129		; 00000081H
  00019	bf 00 00 00 00	 mov	 edi, OFFSET FLAT:?szFullFileName@?1??MakeFileNameDate@@YAPBDPBD@Z@4PADA
  0001e	ba 00 00 00 00	 mov	 edx, OFFSET FLAT:?szFullFileName@?1??MakeFileNameDate@@YAPBDPBD@Z@4PADA
  00023	f3 ab		 rep stosd
  00025	8b c6		 mov	 eax, esi
  00027	2b d6		 sub	 edx, esi
  00029	8d a4 24 00 00
	00 00		 npad	 7
$L148052:
  00030	8a 08		 mov	 cl, BYTE PTR [eax]
  00032	88 0c 02	 mov	 BYTE PTR [edx+eax], cl
  00035	40		 inc	 eax
  00036	84 c9		 test	 cl, cl
  00038	75 f6		 jne	 SHORT $L148052

; 113  : #endif // __CLIENT
; 114  : 
; 115  : 	char* ptr = _tcsrchr( szFullFileName, '.' );

  0003a	6a 2e		 push	 46			; 0000002eH
  0003c	68 00 00 00 00	 push	 OFFSET FLAT:?szFullFileName@?1??MakeFileNameDate@@YAPBDPBD@Z@4PADA
  00041	e8 00 00 00 00	 call	 __mbsrchr
  00046	83 c4 08	 add	 esp, 8

; 116  : 	if( ptr != NULL )

  00049	85 c0		 test	 eax, eax
  0004b	0f 84 da 00 00
	00		 je	 $L148007

; 117  : 	{
; 118  : 		char szExt[5] = {0, };
; 119  : 		_tcscpy( szExt, ptr );

  00051	8d 74 24 18	 lea	 esi, DWORD PTR _szExt$148008[esp+48]
  00055	c6 44 24 18 00	 mov	 BYTE PTR _szExt$148008[esp+48], 0
  0005a	c7 44 24 19 00
	00 00 00	 mov	 DWORD PTR _szExt$148008[esp+49], 0
  00062	8b c8		 mov	 ecx, eax
  00064	2b f0		 sub	 esi, eax
$L148053:
  00066	8a 11		 mov	 dl, BYTE PTR [ecx]
  00068	88 14 0e	 mov	 BYTE PTR [esi+ecx], dl
  0006b	41		 inc	 ecx
  0006c	84 d2		 test	 dl, dl
  0006e	75 f6		 jne	 SHORT $L148053

; 120  : 		*ptr = '\0';

  00070	88 10		 mov	 BYTE PTR [eax], dl

; 121  : 		char szDate[10] = {0, };

  00072	33 c0		 xor	 eax, eax
  00074	89 44 24 21	 mov	 DWORD PTR _szDate$148009[esp+49], eax

; 122  : 		SYSTEMTIME	time;
; 123  : 		GetLocalTime( &time );

  00078	8d 4c 24 08	 lea	 ecx, DWORD PTR _time$148010[esp+48]
  0007c	89 44 24 25	 mov	 DWORD PTR _szDate$148009[esp+53], eax
  00080	51		 push	 ecx
  00081	88 54 24 24	 mov	 BYTE PTR _szDate$148009[esp+52], dl
  00085	88 44 24 2d	 mov	 BYTE PTR _szDate$148009[esp+61], al
  00089	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLocalTime@4

; 124  : 		_stprintf( szDate, "_%d%02d%02d", time.wYear, time.wMonth, time.wDay );

  0008f	0f b7 54 24 0e	 movzx	 edx, WORD PTR _time$148010[esp+54]
  00094	0f b7 44 24 0a	 movzx	 eax, WORD PTR _time$148010[esp+50]
  00099	0f b7 4c 24 08	 movzx	 ecx, WORD PTR _time$148010[esp+48]
  0009e	52		 push	 edx
  0009f	50		 push	 eax
  000a0	51		 push	 ecx
  000a1	8d 54 24 2c	 lea	 edx, DWORD PTR _szDate$148009[esp+60]
  000a5	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0M@NLEENBFM@_?$CFd?$CF02d?$CF02d?$AA@
  000aa	52		 push	 edx
  000ab	e8 00 00 00 00	 call	 _sprintf

; 125  : 		_tcscat( szFullFileName, szDate );

  000b0	8d 44 24 34	 lea	 eax, DWORD PTR _szDate$148009[esp+68]
  000b4	83 c4 14	 add	 esp, 20			; 00000014H
  000b7	8b c8		 mov	 ecx, eax
  000b9	8d a4 24 00 00
	00 00		 npad	 7
$L148059:
  000c0	8a 10		 mov	 dl, BYTE PTR [eax]
  000c2	40		 inc	 eax
  000c3	84 d2		 test	 dl, dl
  000c5	75 f9		 jne	 SHORT $L148059
  000c7	bf 00 00 00 00	 mov	 edi, OFFSET FLAT:?szFullFileName@?1??MakeFileNameDate@@YAPBDPBD@Z@4PADA
  000cc	2b c1		 sub	 eax, ecx
  000ce	8b f1		 mov	 esi, ecx
  000d0	4f		 dec	 edi
$L148060:
  000d1	8a 4f 01	 mov	 cl, BYTE PTR [edi+1]
  000d4	47		 inc	 edi
  000d5	84 c9		 test	 cl, cl
  000d7	75 f8		 jne	 SHORT $L148060
  000d9	8b c8		 mov	 ecx, eax
  000db	c1 e9 02	 shr	 ecx, 2
  000de	f3 a5		 rep movsd
  000e0	8b c8		 mov	 ecx, eax
  000e2	83 e1 03	 and	 ecx, 3

; 126  : 		_tcscat( szFullFileName, szExt );

  000e5	8d 44 24 18	 lea	 eax, DWORD PTR _szExt$148008[esp+48]
  000e9	f3 a4		 rep movsb
  000eb	8b c8		 mov	 ecx, eax
  000ed	8d 49 00	 npad	 3
$L148061:
  000f0	8a 10		 mov	 dl, BYTE PTR [eax]
  000f2	40		 inc	 eax
  000f3	84 d2		 test	 dl, dl
  000f5	75 f9		 jne	 SHORT $L148061
  000f7	bf 00 00 00 00	 mov	 edi, OFFSET FLAT:?szFullFileName@?1??MakeFileNameDate@@YAPBDPBD@Z@4PADA
  000fc	2b c1		 sub	 eax, ecx
  000fe	8b f1		 mov	 esi, ecx
  00100	4f		 dec	 edi
$L148062:
  00101	8a 4f 01	 mov	 cl, BYTE PTR [edi+1]
  00104	47		 inc	 edi
  00105	84 c9		 test	 cl, cl
  00107	75 f8		 jne	 SHORT $L148062
  00109	8b c8		 mov	 ecx, eax
  0010b	c1 e9 02	 shr	 ecx, 2
  0010e	f3 a5		 rep movsd
  00110	8b c8		 mov	 ecx, eax
  00112	83 e1 03	 and	 ecx, 3
  00115	f3 a4		 rep movsb
  00117	5f		 pop	 edi

; 127  : 
; 128  : 		return szFullFileName;

  00118	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?szFullFileName@?1??MakeFileNameDate@@YAPBDPBD@Z@4PADA
  0011d	5e		 pop	 esi

; 129  : 	}
; 130  : 	return lpszFileName;
; 131  : }

  0011e	8b 4c 24 24	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+40]
  00122	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00127	83 c4 28	 add	 esp, 40			; 00000028H
  0012a	c3		 ret	 0
$L148007:
  0012b	8b 4c 24 2c	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+48]
  0012f	5f		 pop	 edi
  00130	8b c6		 mov	 eax, esi
  00132	5e		 pop	 esi
  00133	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00138	83 c4 28	 add	 esp, 40			; 00000028H
  0013b	c3		 ret	 0
?MakeFileNameDate@@YAPBDPBD@Z ENDP			; MakeFileNameDate
_TEXT	ENDS
PUBLIC	??_C@_01MCMALHOG@a?$AA@				; `string'
PUBLIC	??_C@_0BL@OPOBLKAC@?$CFd?1?$CF2d?1?$CF2d?5?$CF02d?3?$CF02d?3?$CF02d?6?$AA@ ; `string'
PUBLIC	??_C@_03OFAPEBGM@?$CFs?6?$AA@			; `string'
EXTRN	_fclose:NEAR
EXTRN	_fopen:NEAR
EXTRN	_fprintf:NEAR
;	COMDAT ??_C@_01MCMALHOG@a?$AA@
CONST	SEGMENT
??_C@_01MCMALHOG@a?$AA@ DB 'a', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@OPOBLKAC@?$CFd?1?$CF2d?1?$CF2d?5?$CF02d?3?$CF02d?3?$CF02d?6?$AA@
CONST	SEGMENT
??_C@_0BL@OPOBLKAC@?$CFd?1?$CF2d?1?$CF2d?5?$CF02d?3?$CF02d?3?$CF02d?6?$AA@ DB '%'
	DB	'd/%2d/%2d %02d:%02d:%02d', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03OFAPEBGM@?$CFs?6?$AA@
CONST	SEGMENT
??_C@_03OFAPEBGM@?$CFs?6?$AA@ DB '%s', 0aH, 00H		; `string'
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ?LogFile@@YAXPBD0W4LOG_TYPE@@@Z
_TEXT	SEGMENT
_time$147940 = -52					; size = 16
_szTime$147941 = -36					; size = 32
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
_szString$ = 8						; size = 4
_szFileName$ = 12					; size = 4
_type$ = 16						; size = 4
?LogFile@@YAXPBD0W4LOG_TYPE@@@Z PROC NEAR		; LogFile, COMDAT

; 20   : {

  00000	83 ec 34	 sub	 esp, 52			; 00000034H
  00003	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00008	56		 push	 esi
  00009	89 44 24 34	 mov	 DWORD PTR __$ArrayPad$[esp+56], eax

; 21   : 	FILE* fp;
; 22   : 	fp = fopen( MakeFileNameDate( szFileName ), "a" );

  0000d	8b 44 24 40	 mov	 eax, DWORD PTR _szFileName$[esp+52]
  00011	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_01MCMALHOG@a?$AA@
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ?MakeFileNameDate@@YAPBDPBD@Z ; MakeFileNameDate
  0001c	83 c4 04	 add	 esp, 4
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 _fopen
  00025	8b f0		 mov	 esi, eax
  00027	83 c4 08	 add	 esp, 8

; 23   : 	if( fp == NULL )

  0002a	85 f6		 test	 esi, esi
  0002c	74 6c		 je	 SHORT $L147936

; 24   : 		return;
; 25   : 
; 26   : 	if( type == LOG_DATE )

  0002e	83 7c 24 44 01	 cmp	 DWORD PTR _type$[esp+52], 1
  00033	75 4c		 jne	 SHORT $L147939

; 27   : 	{
; 28   : 		SYSTEMTIME	time;
; 29   : 		GetLocalTime( &time );

  00035	8d 4c 24 04	 lea	 ecx, DWORD PTR _time$147940[esp+56]
  00039	51		 push	 ecx
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLocalTime@4

; 30   : 
; 31   : 		char szTime[32];
; 32   : 		sprintf( szTime, 
; 33   : 				 "%d/%2d/%2d %02d:%02d:%02d\n", 
; 34   : 				 time.wYear, time.wMonth, time.wDay, 
; 35   : 				 time.wHour, time.wMinute, time.wSecond );

  00040	0f b7 54 24 10	 movzx	 edx, WORD PTR _time$147940[esp+68]
  00045	0f b7 44 24 0e	 movzx	 eax, WORD PTR _time$147940[esp+66]
  0004a	0f b7 4c 24 0c	 movzx	 ecx, WORD PTR _time$147940[esp+64]
  0004f	52		 push	 edx
  00050	0f b7 54 24 0e	 movzx	 edx, WORD PTR _time$147940[esp+66]
  00055	50		 push	 eax
  00056	0f b7 44 24 0e	 movzx	 eax, WORD PTR _time$147940[esp+66]
  0005b	51		 push	 ecx
  0005c	0f b7 4c 24 10	 movzx	 ecx, WORD PTR _time$147940[esp+68]
  00061	52		 push	 edx
  00062	50		 push	 eax
  00063	51		 push	 ecx
  00064	8d 54 24 2c	 lea	 edx, DWORD PTR _szTime$147941[esp+80]
  00068	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BL@OPOBLKAC@?$CFd?1?$CF2d?1?$CF2d?5?$CF02d?3?$CF02d?3?$CF02d?6?$AA@
  0006d	52		 push	 edx
  0006e	e8 00 00 00 00	 call	 _sprintf

; 36   : 
; 37   : 		fprintf( fp, szTime );

  00073	8d 44 24 34	 lea	 eax, DWORD PTR _szTime$147941[esp+88]
  00077	50		 push	 eax
  00078	56		 push	 esi
  00079	e8 00 00 00 00	 call	 _fprintf
  0007e	83 c4 28	 add	 esp, 40			; 00000028H
$L147939:

; 38   : 	}
; 39   : 
; 40   : 	fprintf( fp,"%s\n", szString );

  00081	8b 4c 24 3c	 mov	 ecx, DWORD PTR _szString$[esp+52]
  00085	51		 push	 ecx
  00086	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_03OFAPEBGM@?$CFs?6?$AA@
  0008b	56		 push	 esi
  0008c	e8 00 00 00 00	 call	 _fprintf

; 41   : 	fclose(fp);

  00091	56		 push	 esi
  00092	e8 00 00 00 00	 call	 _fclose
  00097	83 c4 10	 add	 esp, 16			; 00000010H
$L147936:

; 42   : }

  0009a	8b 4c 24 34	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+56]
  0009e	5e		 pop	 esi
  0009f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a4	83 c4 34	 add	 esp, 52			; 00000034H
  000a7	c3		 ret	 0
?LogFile@@YAXPBD0W4LOG_TYPE@@@Z ENDP			; LogFile
_TEXT	ENDS
EXTRN	__chkstk:NEAR
; Function compile flags: /Ogty
;	COMDAT ?FileOutV@@YAXW4LOG_TYPE@@PBD1PAD@Z
_TEXT	SEGMENT
_szBuffer$ = -4100					; size = 4096
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
_logType$ = 8						; size = 4
_lpszFileName$ = 12					; size = 4
_args$ = 16						; size = 4
?FileOutV@@YAXW4LOG_TYPE@@PBD1PAD@Z PROC NEAR		; FileOutV, COMDAT
; _lpszFormat$ = ecx

; 45   : {

  00000	b8 04 10 00 00	 mov	 eax, 4100		; 00001004H
  00005	e8 00 00 00 00	 call	 __chkstk
  0000a	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000f	89 84 24 00 10
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+4100], eax

; 46   : 	TCHAR szBuffer[4096];
; 47   : 
; 48   : 	int n = _vsntprintf(szBuffer, 4095, lpszFormat, args);

  00016	8b 84 24 10 10
	00 00		 mov	 eax, DWORD PTR _args$[esp+4096]
  0001d	50		 push	 eax
  0001e	51		 push	 ecx
  0001f	8d 54 24 08	 lea	 edx, DWORD PTR _szBuffer$[esp+4108]
  00023	68 ff 0f 00 00	 push	 4095			; 00000fffH
  00028	52		 push	 edx
  00029	e8 00 00 00 00	 call	 __vsnprintf
  0002e	83 c4 10	 add	 esp, 16			; 00000010H

; 49   : 
; 50   : 	if( n > 0 )

  00031	85 c0		 test	 eax, eax
  00033	7e 1d		 jle	 SHORT $L147952

; 51   : 		LogFile( szBuffer, lpszFileName, logType );

  00035	8b 84 24 08 10
	00 00		 mov	 eax, DWORD PTR _logType$[esp+4096]
  0003c	8b 8c 24 0c 10
	00 00		 mov	 ecx, DWORD PTR _lpszFileName$[esp+4096]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	8d 54 24 08	 lea	 edx, DWORD PTR _szBuffer$[esp+4108]
  00049	52		 push	 edx
  0004a	e8 00 00 00 00	 call	 ?LogFile@@YAXPBD0W4LOG_TYPE@@@Z ; LogFile
  0004f	83 c4 0c	 add	 esp, 12			; 0000000cH
$L147952:

; 52   : }

  00052	8b 8c 24 00 10
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+4100]
  00059	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005e	81 c4 04 10 00
	00		 add	 esp, 4100		; 00001004H
  00064	c3		 ret	 0
?FileOutV@@YAXW4LOG_TYPE@@PBD1PAD@Z ENDP		; FileOutV
_TEXT	ENDS
PUBLIC	?DEBUGOUT2@@YAXPBD0@Z				; DEBUGOUT2
; Function compile flags: /Ogty
;	COMDAT ?DEBUGOUT2@@YAXPBD0@Z
_TEXT	SEGMENT
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
_szString$ = 8						; size = 4
_szFileName$ = 12					; size = 4
?DEBUGOUT2@@YAXPBD0@Z PROC NEAR				; DEBUGOUT2, COMDAT

; 55   : {

  00000	51		 push	 ecx
  00001	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00006	56		 push	 esi
  00007	89 44 24 04	 mov	 DWORD PTR __$ArrayPad$[esp+8], eax

; 56   : 	LogFile( szString, szFileName, LOG_SIMPLE );	

  0000b	8b 44 24 10	 mov	 eax, DWORD PTR _szFileName$[esp+4]
  0000f	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_01MCMALHOG@a?$AA@
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ?MakeFileNameDate@@YAPBDPBD@Z ; MakeFileNameDate
  0001a	83 c4 04	 add	 esp, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 _fopen
  00023	8b f0		 mov	 esi, eax
  00025	83 c4 08	 add	 esp, 8
  00028	85 f6		 test	 esi, esi
  0002a	74 19		 je	 SHORT $L148080
  0002c	8b 4c 24 0c	 mov	 ecx, DWORD PTR _szString$[esp+4]
  00030	51		 push	 ecx
  00031	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_03OFAPEBGM@?$CFs?6?$AA@
  00036	56		 push	 esi
  00037	e8 00 00 00 00	 call	 _fprintf
  0003c	56		 push	 esi
  0003d	e8 00 00 00 00	 call	 _fclose
  00042	83 c4 10	 add	 esp, 16			; 00000010H
$L148080:
  00045	5e		 pop	 esi

; 57   : }

  00046	8b 0c 24	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+4]
  00049	83 c4 04	 add	 esp, 4
  0004c	e9 00 00 00 00	 jmp	 @__security_check_cookie@4
?DEBUGOUT2@@YAXPBD0@Z ENDP				; DEBUGOUT2
_TEXT	ENDS
PUBLIC	?FILEOUT@@YAXPBD0ZZ				; FILEOUT
; Function compile flags: /Ogty
;	COMDAT ?FILEOUT@@YAXPBD0ZZ
_TEXT	SEGMENT
_lpszFileName$ = 8					; size = 4
_lpszFormat$ = 12					; size = 4
?FILEOUT@@YAXPBD0ZZ PROC NEAR				; FILEOUT, COMDAT

; 61   : 	va_list args;
; 62   : 	va_start(args, lpszFormat);
; 63   : 
; 64   : 	FileOutV( LOG_SIMPLE, lpszFileName, lpszFormat, args );

  00000	8b 4c 24 04	 mov	 ecx, DWORD PTR _lpszFileName$[esp-4]
  00004	8d 44 24 0c	 lea	 eax, DWORD PTR _lpszFormat$[esp]
  00008	50		 push	 eax
  00009	51		 push	 ecx
  0000a	8b 4c 24 10	 mov	 ecx, DWORD PTR _lpszFormat$[esp+4]
  0000e	6a 00		 push	 0
  00010	e8 00 00 00 00	 call	 ?FileOutV@@YAXW4LOG_TYPE@@PBD1PAD@Z ; FileOutV
  00015	83 c4 0c	 add	 esp, 12			; 0000000cH

; 65   : 
; 66   : 	va_end(args);
; 67   : }

  00018	c3		 ret	 0
?FILEOUT@@YAXPBD0ZZ ENDP				; FILEOUT
_TEXT	ENDS
PUBLIC	?WriteLog@@YAXPBDZZ				; WriteLog
; Function compile flags: /Ogty
;	COMDAT ?WriteLog@@YAXPBDZZ
_TEXT	SEGMENT
_lpszFormat$ = 8					; size = 4
?WriteLog@@YAXPBDZZ PROC NEAR				; WriteLog, COMDAT

; 72   : 	va_list args;
; 73   : 	va_start(args, lpszFormat);
; 74   : 
; 75   : 	FileOutV( LOG_DATE, g_szERROR, lpszFormat, args );

  00000	8b 4c 24 04	 mov	 ecx, DWORD PTR _lpszFormat$[esp-4]
  00004	8d 44 24 08	 lea	 eax, DWORD PTR _lpszFormat$[esp]
  00008	50		 push	 eax
  00009	68 00 00 00 00	 push	 OFFSET FLAT:_g_szERROR
  0000e	6a 01		 push	 1
  00010	e8 00 00 00 00	 call	 ?FileOutV@@YAXW4LOG_TYPE@@PBD1PAD@Z ; FileOutV
  00015	83 c4 0c	 add	 esp, 12			; 0000000cH

; 76   : 
; 77   : 	va_end(args);
; 78   : }

  00018	c3		 ret	 0
?WriteLog@@YAXPBDZZ ENDP				; WriteLog
_TEXT	ENDS
PUBLIC	?WriteError@@YAXPBDZZ				; WriteError
; Function compile flags: /Ogty
;	COMDAT ?WriteError@@YAXPBDZZ
_TEXT	SEGMENT
_lpszFormat$ = 8					; size = 4
?WriteError@@YAXPBDZZ PROC NEAR				; WriteError, COMDAT

; 82   : 	va_list args;
; 83   : 	va_start(args, lpszFormat);
; 84   : 
; 85   : 	FileOutV( LOG_DATE, g_szEH, lpszFormat, args );

  00000	8b 4c 24 04	 mov	 ecx, DWORD PTR _lpszFormat$[esp-4]
  00004	8d 44 24 08	 lea	 eax, DWORD PTR _lpszFormat$[esp]
  00008	50		 push	 eax
  00009	68 00 00 00 00	 push	 OFFSET FLAT:_g_szEH
  0000e	6a 01		 push	 1
  00010	e8 00 00 00 00	 call	 ?FileOutV@@YAXW4LOG_TYPE@@PBD1PAD@Z ; FileOutV
  00015	83 c4 0c	 add	 esp, 12			; 0000000cH

; 86   : 
; 87   : 	va_end(args);
; 88   : }

  00018	c3		 ret	 0
?WriteError@@YAXPBDZZ ENDP				; WriteError
_TEXT	ENDS
END
